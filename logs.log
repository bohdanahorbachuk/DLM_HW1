2025-10-30 23:21:16,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:21:16,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:21:16,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:21:16,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:37:43,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:37:43,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:37:43,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:37:43,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:39:20,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:39:20,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:39:20,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:39:20,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:43:21,402:INFO:PyCaret ClassificationExperiment
2025-10-30 23:43:21,403:INFO:Logging name: 20ng_pycaret_tfidf_run
2025-10-30 23:43:21,403:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-30 23:43:21,403:INFO:version 3.3.2
2025-10-30 23:43:21,403:INFO:Initializing setup()
2025-10-30 23:43:21,403:INFO:self.USI: f71c
2025-10-30 23:43:21,403:INFO:self._variable_keys: {'USI', 'y_test', 'idx', 'fold_groups_param', 'exp_name_log', '_ml_usecase', 'y_train', 'logging_param', 'X_train', 'seed', 'fold_shuffle_param', 'html_param', 'pipeline', 'is_multiclass', 'fix_imbalance', 'exp_id', 'X_test', 'y', 'memory', '_available_plots', 'n_jobs_param', 'X', 'fold_generator', 'log_plots_param', 'target_param', 'gpu_param', 'data', 'gpu_n_jobs_param'}
2025-10-30 23:43:21,403:INFO:Checking environment
2025-10-30 23:43:21,403:INFO:python_version: 3.10.15
2025-10-30 23:43:21,403:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-30 23:43:21,403:INFO:machine: arm64
2025-10-30 23:43:21,403:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-30 23:43:21,404:INFO:Memory: svmem(total=17179869184, available=3176251392, percent=81.5, used=5508530176, free=61816832, active=3136307200, inactive=3110699008, wired=2372222976)
2025-10-30 23:43:21,404:INFO:Physical Core: 10
2025-10-30 23:43:21,404:INFO:Logical Core: 10
2025-10-30 23:43:21,404:INFO:Checking libraries
2025-10-30 23:43:21,404:INFO:System:
2025-10-30 23:43:21,404:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-30 23:43:21,404:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-30 23:43:21,404:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-30 23:43:21,404:INFO:PyCaret required dependencies:
2025-10-30 23:43:21,407:INFO:                 pip: 25.2
2025-10-30 23:43:21,407:INFO:          setuptools: 80.9.0
2025-10-30 23:43:21,407:INFO:             pycaret: 3.3.2
2025-10-30 23:43:21,407:INFO:             IPython: 8.37.0
2025-10-30 23:43:21,407:INFO:          ipywidgets: 8.1.7
2025-10-30 23:43:21,407:INFO:                tqdm: 4.67.1
2025-10-30 23:43:21,407:INFO:               numpy: 1.26.4
2025-10-30 23:43:21,407:INFO:              pandas: 2.1.4
2025-10-30 23:43:21,407:INFO:              jinja2: 3.1.6
2025-10-30 23:43:21,407:INFO:               scipy: 1.11.4
2025-10-30 23:43:21,407:INFO:              joblib: 1.3.2
2025-10-30 23:43:21,407:INFO:             sklearn: 1.4.2
2025-10-30 23:43:21,407:INFO:                pyod: 2.0.5
2025-10-30 23:43:21,407:INFO:            imblearn: 0.14.0
2025-10-30 23:43:21,407:INFO:   category_encoders: 2.7.0
2025-10-30 23:43:21,407:INFO:            lightgbm: 4.6.0
2025-10-30 23:43:21,408:INFO:               numba: 0.62.1
2025-10-30 23:43:21,408:INFO:            requests: 2.32.5
2025-10-30 23:43:21,408:INFO:          matplotlib: 3.10.7
2025-10-30 23:43:21,408:INFO:          scikitplot: 0.3.7
2025-10-30 23:43:21,408:INFO:         yellowbrick: 1.5
2025-10-30 23:43:21,408:INFO:              plotly: 6.3.1
2025-10-30 23:43:21,408:INFO:    plotly-resampler: Not installed
2025-10-30 23:43:21,408:INFO:             kaleido: 0.2.1
2025-10-30 23:43:21,408:INFO:           schemdraw: 0.15
2025-10-30 23:43:21,408:INFO:         statsmodels: 0.14.5
2025-10-30 23:43:21,408:INFO:              sktime: 0.26.0
2025-10-30 23:43:21,408:INFO:               tbats: 1.1.3
2025-10-30 23:43:21,408:INFO:            pmdarima: 2.0.4
2025-10-30 23:43:21,408:INFO:              psutil: 7.1.2
2025-10-30 23:43:21,408:INFO:          markupsafe: 3.0.3
2025-10-30 23:43:21,408:INFO:             pickle5: Not installed
2025-10-30 23:43:21,408:INFO:         cloudpickle: 3.1.1
2025-10-30 23:43:21,408:INFO:         deprecation: 2.1.0
2025-10-30 23:43:21,408:INFO:              xxhash: 3.6.0
2025-10-30 23:43:21,408:INFO:           wurlitzer: 3.1.1
2025-10-30 23:43:21,408:INFO:PyCaret optional dependencies:
2025-10-30 23:43:22,028:INFO:                shap: Not installed
2025-10-30 23:43:22,028:INFO:           interpret: Not installed
2025-10-30 23:43:22,028:INFO:                umap: 0.5.9.post2
2025-10-30 23:43:22,028:INFO:     ydata_profiling: Not installed
2025-10-30 23:43:22,028:INFO:  explainerdashboard: Not installed
2025-10-30 23:43:22,028:INFO:             autoviz: Not installed
2025-10-30 23:43:22,028:INFO:           fairlearn: Not installed
2025-10-30 23:43:22,028:INFO:          deepchecks: Not installed
2025-10-30 23:43:22,028:INFO:             xgboost: Not installed
2025-10-30 23:43:22,028:INFO:            catboost: Not installed
2025-10-30 23:43:22,028:INFO:              kmodes: Not installed
2025-10-30 23:43:22,028:INFO:             mlxtend: Not installed
2025-10-30 23:43:22,028:INFO:       statsforecast: Not installed
2025-10-30 23:43:22,028:INFO:        tune_sklearn: Not installed
2025-10-30 23:43:22,028:INFO:                 ray: Not installed
2025-10-30 23:43:22,028:INFO:            hyperopt: Not installed
2025-10-30 23:43:22,028:INFO:              optuna: Not installed
2025-10-30 23:43:22,028:INFO:               skopt: Not installed
2025-10-30 23:43:22,028:INFO:              mlflow: 3.5.1
2025-10-30 23:43:22,028:INFO:              gradio: Not installed
2025-10-30 23:43:22,028:INFO:             fastapi: 0.120.2
2025-10-30 23:43:22,028:INFO:             uvicorn: 0.38.0
2025-10-30 23:43:22,028:INFO:              m2cgen: Not installed
2025-10-30 23:43:22,028:INFO:           evidently: Not installed
2025-10-30 23:43:22,028:INFO:               fugue: Not installed
2025-10-30 23:43:22,028:INFO:           streamlit: Not installed
2025-10-30 23:43:22,028:INFO:             prophet: Not installed
2025-10-30 23:43:22,028:INFO:None
2025-10-30 23:43:22,028:INFO:Set up data.
2025-10-30 23:43:22,071:INFO:Set up folding strategy.
2025-10-30 23:43:22,072:INFO:Set up train/test split.
2025-10-30 23:43:22,187:INFO:Set up index.
2025-10-30 23:43:22,187:INFO:Assigning column types.
2025-10-30 23:43:22,188:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-30 23:43:22,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-30 23:43:22,204:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:43:22,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:22,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:22,937:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-30 23:43:22,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:43:22,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:22,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:22,946:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-30 23:43:22,961:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:43:22,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:22,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:22,983:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:43:22,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:22,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:22,992:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-30 23:43:23,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:23,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:23,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:23,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:43:23,038:INFO:Preparing preprocessing pipeline...
2025-10-30 23:43:23,039:INFO:Set up label encoding.
2025-10-30 23:43:23,039:INFO:Set up simple imputation.
2025-10-30 23:43:23,039:INFO:Set up text embedding.
2025-10-30 23:43:23,039:INFO:Set up feature normalization.
2025-10-30 23:44:07,872:INFO:Finished creating preprocessing pipeline.
2025-10-30 23:44:07,875:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['target'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              kee...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['text'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-30 23:44:07,875:INFO:Creating final display dataframe.
2025-10-30 23:45:26,117:INFO:Setup _display_container:                        Description  \
0                       Session id   
1                           Target   
2                      Target type   
3                   Target mapping   
4              Original data shape   
5           Transformed data shape   
6      Transformed train set shape   
7       Transformed test set shape   
8                 Numeric features   
9                    Text features   
10                      Preprocess   
11                 Imputation type   
12              Numeric imputation   
13          Categorical imputation   
14  Text features embedding method   
15                       Normalize   
16                Normalize method   
17                  Fold Generator   
18                     Fold Number   
19                        CPU Jobs   
20                         Use GPU   
21                  Log Experiment   
22                 Experiment Name   
23                             USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                          (15076, 3)  
5                                     (15076, 102949)  
6                                     (10553, 102949)  
7                                      (4523, 102949)  
8                                                   1  
9                                                   1  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                             tf-idf  
15                                               True  
16                                             zscore  
17                                    StratifiedKFold  
18                                                 10  
19                                                 -1  
20                                              False  
21                                       MlflowLogger  
22                             20ng_pycaret_tfidf_run  
23                                               f71c  
2025-10-30 23:45:26,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:45:26,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:45:26,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:45:26,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:45:26,219:INFO:Logging experiment in loggers
2025-10-30 23:46:53,909:INFO:PyCaret ClassificationExperiment
2025-10-30 23:46:53,909:INFO:Logging name: clf-default-name
2025-10-30 23:46:53,909:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-30 23:46:53,909:INFO:version 3.3.2
2025-10-30 23:46:53,909:INFO:Initializing setup()
2025-10-30 23:46:53,909:INFO:self.USI: 3813
2025-10-30 23:46:53,909:INFO:self._variable_keys: {'USI', 'y_test', 'idx', 'fold_groups_param', 'exp_name_log', '_ml_usecase', 'y_train', 'logging_param', 'X_train', 'seed', 'fold_shuffle_param', 'html_param', 'pipeline', 'is_multiclass', 'fix_imbalance', 'exp_id', 'X_test', 'y', 'memory', '_available_plots', 'n_jobs_param', 'X', 'fold_generator', 'log_plots_param', 'target_param', 'gpu_param', 'data', 'gpu_n_jobs_param'}
2025-10-30 23:46:53,909:INFO:Checking environment
2025-10-30 23:46:53,909:INFO:python_version: 3.10.15
2025-10-30 23:46:53,909:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-30 23:46:53,909:INFO:machine: arm64
2025-10-30 23:46:53,909:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-30 23:46:53,910:INFO:Memory: svmem(total=17179869184, available=8100167680, percent=52.9, used=6249168896, free=4166877184, active=3955097600, inactive=3542499328, wired=2294071296)
2025-10-30 23:46:53,910:INFO:Physical Core: 10
2025-10-30 23:46:53,910:INFO:Logical Core: 10
2025-10-30 23:46:53,910:INFO:Checking libraries
2025-10-30 23:46:53,910:INFO:System:
2025-10-30 23:46:53,910:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-30 23:46:53,910:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-30 23:46:53,910:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-30 23:46:53,910:INFO:PyCaret required dependencies:
2025-10-30 23:46:53,910:INFO:                 pip: 25.2
2025-10-30 23:46:53,910:INFO:          setuptools: 80.9.0
2025-10-30 23:46:53,910:INFO:             pycaret: 3.3.2
2025-10-30 23:46:53,910:INFO:             IPython: 8.37.0
2025-10-30 23:46:53,910:INFO:          ipywidgets: 8.1.7
2025-10-30 23:46:53,910:INFO:                tqdm: 4.67.1
2025-10-30 23:46:53,910:INFO:               numpy: 1.26.4
2025-10-30 23:46:53,910:INFO:              pandas: 2.1.4
2025-10-30 23:46:53,910:INFO:              jinja2: 3.1.6
2025-10-30 23:46:53,910:INFO:               scipy: 1.11.4
2025-10-30 23:46:53,910:INFO:              joblib: 1.3.2
2025-10-30 23:46:53,910:INFO:             sklearn: 1.4.2
2025-10-30 23:46:53,910:INFO:                pyod: 2.0.5
2025-10-30 23:46:53,910:INFO:            imblearn: 0.14.0
2025-10-30 23:46:53,910:INFO:   category_encoders: 2.7.0
2025-10-30 23:46:53,910:INFO:            lightgbm: 4.6.0
2025-10-30 23:46:53,910:INFO:               numba: 0.62.1
2025-10-30 23:46:53,910:INFO:            requests: 2.32.5
2025-10-30 23:46:53,910:INFO:          matplotlib: 3.10.7
2025-10-30 23:46:53,910:INFO:          scikitplot: 0.3.7
2025-10-30 23:46:53,910:INFO:         yellowbrick: 1.5
2025-10-30 23:46:53,910:INFO:              plotly: 6.3.1
2025-10-30 23:46:53,910:INFO:    plotly-resampler: Not installed
2025-10-30 23:46:53,910:INFO:             kaleido: 0.2.1
2025-10-30 23:46:53,910:INFO:           schemdraw: 0.15
2025-10-30 23:46:53,910:INFO:         statsmodels: 0.14.5
2025-10-30 23:46:53,910:INFO:              sktime: 0.26.0
2025-10-30 23:46:53,910:INFO:               tbats: 1.1.3
2025-10-30 23:46:53,910:INFO:            pmdarima: 2.0.4
2025-10-30 23:46:53,910:INFO:              psutil: 7.1.2
2025-10-30 23:46:53,910:INFO:          markupsafe: 3.0.3
2025-10-30 23:46:53,910:INFO:             pickle5: Not installed
2025-10-30 23:46:53,910:INFO:         cloudpickle: 3.1.1
2025-10-30 23:46:53,910:INFO:         deprecation: 2.1.0
2025-10-30 23:46:53,910:INFO:              xxhash: 3.6.0
2025-10-30 23:46:53,910:INFO:           wurlitzer: 3.1.1
2025-10-30 23:46:53,910:INFO:PyCaret optional dependencies:
2025-10-30 23:46:53,910:INFO:                shap: Not installed
2025-10-30 23:46:53,910:INFO:           interpret: Not installed
2025-10-30 23:46:53,910:INFO:                umap: 0.5.9.post2
2025-10-30 23:46:53,910:INFO:     ydata_profiling: Not installed
2025-10-30 23:46:53,910:INFO:  explainerdashboard: Not installed
2025-10-30 23:46:53,910:INFO:             autoviz: Not installed
2025-10-30 23:46:53,910:INFO:           fairlearn: Not installed
2025-10-30 23:46:53,910:INFO:          deepchecks: Not installed
2025-10-30 23:46:53,910:INFO:             xgboost: Not installed
2025-10-30 23:46:53,910:INFO:            catboost: Not installed
2025-10-30 23:46:53,910:INFO:              kmodes: Not installed
2025-10-30 23:46:53,910:INFO:             mlxtend: Not installed
2025-10-30 23:46:53,910:INFO:       statsforecast: Not installed
2025-10-30 23:46:53,910:INFO:        tune_sklearn: Not installed
2025-10-30 23:46:53,910:INFO:                 ray: Not installed
2025-10-30 23:46:53,910:INFO:            hyperopt: Not installed
2025-10-30 23:46:53,910:INFO:              optuna: Not installed
2025-10-30 23:46:53,910:INFO:               skopt: Not installed
2025-10-30 23:46:53,910:INFO:              mlflow: 3.5.1
2025-10-30 23:46:53,910:INFO:              gradio: Not installed
2025-10-30 23:46:53,910:INFO:             fastapi: 0.120.2
2025-10-30 23:46:53,910:INFO:             uvicorn: 0.38.0
2025-10-30 23:46:53,910:INFO:              m2cgen: Not installed
2025-10-30 23:46:53,910:INFO:           evidently: Not installed
2025-10-30 23:46:53,910:INFO:               fugue: Not installed
2025-10-30 23:46:53,910:INFO:           streamlit: Not installed
2025-10-30 23:46:53,910:INFO:             prophet: Not installed
2025-10-30 23:46:53,910:INFO:None
2025-10-30 23:46:53,910:INFO:Set up data.
2025-10-30 23:46:53,948:INFO:Set up folding strategy.
2025-10-30 23:46:53,948:INFO:Set up train/test split.
2025-10-30 23:46:53,976:INFO:Set up index.
2025-10-30 23:46:53,977:INFO:Assigning column types.
2025-10-30 23:46:53,978:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-30 23:46:53,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-30 23:46:53,992:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:46:54,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-30 23:46:54,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:46:54,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,025:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-30 23:46:54,039:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:46:54,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:46:54,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,071:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-30 23:46:54,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:46:54,118:INFO:Preparing preprocessing pipeline...
2025-10-30 23:46:54,119:INFO:Set up label encoding.
2025-10-30 23:46:54,119:INFO:Set up simple imputation.
2025-10-30 23:46:54,119:INFO:Set up text embedding.
2025-10-30 23:46:54,119:INFO:Set up feature normalization.
2025-10-30 23:47:36,011:INFO:Finished creating preprocessing pipeline.
2025-10-30 23:47:36,014:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['target'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              kee...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['text'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-30 23:47:36,014:INFO:Creating final display dataframe.
2025-10-30 23:48:14,503:INFO:Setup _display_container:                        Description  \
0                       Session id   
1                           Target   
2                      Target type   
3                   Target mapping   
4              Original data shape   
5           Transformed data shape   
6      Transformed train set shape   
7       Transformed test set shape   
8                 Numeric features   
9                    Text features   
10                      Preprocess   
11                 Imputation type   
12              Numeric imputation   
13          Categorical imputation   
14  Text features embedding method   
15                       Normalize   
16                Normalize method   
17                  Fold Generator   
18                     Fold Number   
19                        CPU Jobs   
20                         Use GPU   
21                  Log Experiment   
22                 Experiment Name   
23                             USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                          (15076, 3)  
5                                     (15076, 102949)  
6                                     (10553, 102949)  
7                                      (4523, 102949)  
8                                                   1  
9                                                   1  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                             tf-idf  
15                                               True  
16                                             zscore  
17                                    StratifiedKFold  
18                                                 10  
19                                                 -1  
20                                              False  
21                                              False  
22                                   clf-default-name  
23                                               3813  
2025-10-30 23:48:14,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:48:14,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:48:14,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:48:14,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:48:14,569:INFO:setup() successfully completed in 80.77s...............
2025-10-30 23:48:23,729:INFO:Initializing compare_models()
2025-10-30 23:48:23,738:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17c0f5840>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x17c0f5840>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-10-30 23:48:23,738:INFO:Checking exceptions
2025-10-30 23:48:23,743:INFO:Preparing display monitor
2025-10-30 23:48:24,082:INFO:Initializing Logistic Regression
2025-10-30 23:48:24,082:INFO:Total runtime is 7.402896881103516e-06 minutes
2025-10-30 23:48:24,084:INFO:SubProcess create_model() called ==================================
2025-10-30 23:48:24,084:INFO:Initializing create_model()
2025-10-30 23:48:24,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17c0f5840>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c0f6080>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-30 23:48:24,085:INFO:Checking exceptions
2025-10-30 23:48:24,085:INFO:Importing libraries
2025-10-30 23:48:24,085:INFO:Copying training dataset
2025-10-30 23:48:24,089:INFO:Defining folds
2025-10-30 23:48:24,089:INFO:Declaring metric variables
2025-10-30 23:48:24,090:INFO:Importing untrained model
2025-10-30 23:48:24,091:INFO:Logistic Regression Imported successfully
2025-10-30 23:48:24,094:INFO:Starting cross validation
2025-10-30 23:48:24,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-30 23:57:06,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:57:06,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:57:06,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:57:06,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-30 23:57:22,144:INFO:PyCaret ClassificationExperiment
2025-10-30 23:57:22,144:INFO:Logging name: clf-default-name
2025-10-30 23:57:22,144:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-30 23:57:22,144:INFO:version 3.3.2
2025-10-30 23:57:22,144:INFO:Initializing setup()
2025-10-30 23:57:22,145:INFO:self.USI: c6fb
2025-10-30 23:57:22,145:INFO:self._variable_keys: {'fix_imbalance', 'fold_generator', 'y_test', 'is_multiclass', 'fold_shuffle_param', 'data', 'y', 'USI', 'X', 'gpu_n_jobs_param', 'memory', '_ml_usecase', 'X_test', 'n_jobs_param', 'fold_groups_param', 'exp_name_log', 'gpu_param', 'seed', 'pipeline', 'exp_id', 'X_train', '_available_plots', 'html_param', 'target_param', 'idx', 'log_plots_param', 'logging_param', 'y_train'}
2025-10-30 23:57:22,145:INFO:Checking environment
2025-10-30 23:57:22,145:INFO:python_version: 3.10.15
2025-10-30 23:57:22,145:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-30 23:57:22,145:INFO:machine: arm64
2025-10-30 23:57:22,145:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-30 23:57:22,145:INFO:Memory: svmem(total=17179869184, available=5775933440, percent=66.4, used=7584481280, free=110149632, active=5687066624, inactive=5564432384, wired=1897414656)
2025-10-30 23:57:22,145:INFO:Physical Core: 10
2025-10-30 23:57:22,145:INFO:Logical Core: 10
2025-10-30 23:57:22,145:INFO:Checking libraries
2025-10-30 23:57:22,145:INFO:System:
2025-10-30 23:57:22,145:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-30 23:57:22,145:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-30 23:57:22,145:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-30 23:57:22,145:INFO:PyCaret required dependencies:
2025-10-30 23:57:22,147:INFO:                 pip: 25.2
2025-10-30 23:57:22,147:INFO:          setuptools: 80.9.0
2025-10-30 23:57:22,147:INFO:             pycaret: 3.3.2
2025-10-30 23:57:22,147:INFO:             IPython: 8.37.0
2025-10-30 23:57:22,147:INFO:          ipywidgets: 8.1.7
2025-10-30 23:57:22,147:INFO:                tqdm: 4.67.1
2025-10-30 23:57:22,147:INFO:               numpy: 1.26.4
2025-10-30 23:57:22,147:INFO:              pandas: 2.1.4
2025-10-30 23:57:22,147:INFO:              jinja2: 3.1.6
2025-10-30 23:57:22,148:INFO:               scipy: 1.11.4
2025-10-30 23:57:22,148:INFO:              joblib: 1.3.2
2025-10-30 23:57:22,148:INFO:             sklearn: 1.4.2
2025-10-30 23:57:22,148:INFO:                pyod: 2.0.5
2025-10-30 23:57:22,148:INFO:            imblearn: 0.14.0
2025-10-30 23:57:22,148:INFO:   category_encoders: 2.7.0
2025-10-30 23:57:22,148:INFO:            lightgbm: 4.6.0
2025-10-30 23:57:22,148:INFO:               numba: 0.62.1
2025-10-30 23:57:22,148:INFO:            requests: 2.32.5
2025-10-30 23:57:22,148:INFO:          matplotlib: 3.10.7
2025-10-30 23:57:22,148:INFO:          scikitplot: 0.3.7
2025-10-30 23:57:22,148:INFO:         yellowbrick: 1.5
2025-10-30 23:57:22,148:INFO:              plotly: 6.3.1
2025-10-30 23:57:22,148:INFO:    plotly-resampler: Not installed
2025-10-30 23:57:22,148:INFO:             kaleido: 0.2.1
2025-10-30 23:57:22,148:INFO:           schemdraw: 0.15
2025-10-30 23:57:22,148:INFO:         statsmodels: 0.14.5
2025-10-30 23:57:22,148:INFO:              sktime: 0.26.0
2025-10-30 23:57:22,148:INFO:               tbats: 1.1.3
2025-10-30 23:57:22,148:INFO:            pmdarima: 2.0.4
2025-10-30 23:57:22,148:INFO:              psutil: 7.1.2
2025-10-30 23:57:22,148:INFO:          markupsafe: 3.0.3
2025-10-30 23:57:22,148:INFO:             pickle5: Not installed
2025-10-30 23:57:22,148:INFO:         cloudpickle: 3.1.1
2025-10-30 23:57:22,148:INFO:         deprecation: 2.1.0
2025-10-30 23:57:22,148:INFO:              xxhash: 3.6.0
2025-10-30 23:57:22,148:INFO:           wurlitzer: 3.1.1
2025-10-30 23:57:22,148:INFO:PyCaret optional dependencies:
2025-10-30 23:57:22,315:INFO:                shap: Not installed
2025-10-30 23:57:22,316:INFO:           interpret: Not installed
2025-10-30 23:57:22,316:INFO:                umap: 0.5.9.post2
2025-10-30 23:57:22,316:INFO:     ydata_profiling: Not installed
2025-10-30 23:57:22,316:INFO:  explainerdashboard: Not installed
2025-10-30 23:57:22,316:INFO:             autoviz: Not installed
2025-10-30 23:57:22,316:INFO:           fairlearn: Not installed
2025-10-30 23:57:22,316:INFO:          deepchecks: Not installed
2025-10-30 23:57:22,316:INFO:             xgboost: Not installed
2025-10-30 23:57:22,316:INFO:            catboost: Not installed
2025-10-30 23:57:22,316:INFO:              kmodes: Not installed
2025-10-30 23:57:22,316:INFO:             mlxtend: Not installed
2025-10-30 23:57:22,316:INFO:       statsforecast: Not installed
2025-10-30 23:57:22,316:INFO:        tune_sklearn: Not installed
2025-10-30 23:57:22,316:INFO:                 ray: Not installed
2025-10-30 23:57:22,316:INFO:            hyperopt: Not installed
2025-10-30 23:57:22,316:INFO:              optuna: Not installed
2025-10-30 23:57:22,316:INFO:               skopt: Not installed
2025-10-30 23:57:22,316:INFO:              mlflow: 3.5.1
2025-10-30 23:57:22,316:INFO:              gradio: Not installed
2025-10-30 23:57:22,316:INFO:             fastapi: 0.120.2
2025-10-30 23:57:22,316:INFO:             uvicorn: 0.38.0
2025-10-30 23:57:22,316:INFO:              m2cgen: Not installed
2025-10-30 23:57:22,316:INFO:           evidently: Not installed
2025-10-30 23:57:22,316:INFO:               fugue: Not installed
2025-10-30 23:57:22,316:INFO:           streamlit: Not installed
2025-10-30 23:57:22,316:INFO:             prophet: Not installed
2025-10-30 23:57:22,316:INFO:None
2025-10-30 23:57:22,316:INFO:Set up data.
2025-10-30 23:57:22,357:INFO:Set up folding strategy.
2025-10-30 23:57:22,357:INFO:Set up train/test split.
2025-10-30 23:57:22,386:INFO:Set up index.
2025-10-30 23:57:22,387:INFO:Assigning column types.
2025-10-30 23:57:22,388:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-30 23:57:22,401:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-30 23:57:22,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:57:22,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-30 23:57:22,509:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:57:22,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,517:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-30 23:57:22,530:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:57:22,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-30 23:57:22,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,558:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-30 23:57:22,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:57:22,601:INFO:Preparing preprocessing pipeline...
2025-10-30 23:57:22,602:INFO:Set up label encoding.
2025-10-30 23:57:22,602:INFO:Set up simple imputation.
2025-10-30 23:57:22,602:INFO:Set up text embedding.
2025-10-30 23:57:22,602:INFO:Set up feature normalization.
2025-10-30 23:58:06,909:INFO:Finished creating preprocessing pipeline.
2025-10-30 23:58:06,912:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['target'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              kee...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['text'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-30 23:58:06,912:INFO:Creating final display dataframe.
2025-10-30 23:59:18,090:INFO:Setup _display_container:                        Description  \
0                       Session id   
1                           Target   
2                      Target type   
3                   Target mapping   
4              Original data shape   
5           Transformed data shape   
6      Transformed train set shape   
7       Transformed test set shape   
8                 Numeric features   
9                    Text features   
10                      Preprocess   
11                 Imputation type   
12              Numeric imputation   
13          Categorical imputation   
14  Text features embedding method   
15                       Normalize   
16                Normalize method   
17                  Fold Generator   
18                     Fold Number   
19                        CPU Jobs   
20                         Use GPU   
21                  Log Experiment   
22                 Experiment Name   
23                             USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                          (15076, 3)  
5                                     (15076, 102949)  
6                                     (10553, 102949)  
7                                      (4523, 102949)  
8                                                   1  
9                                                   1  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                             tf-idf  
15                                               True  
16                                             zscore  
17                                    StratifiedKFold  
18                                                 10  
19                                                 -1  
20                                              False  
21                                              False  
22                                   clf-default-name  
23                                               c6fb  
2025-10-30 23:59:18,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:59:18,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:59:18,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:59:18,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-30 23:59:18,152:INFO:setup() successfully completed in 116.01s...............
2025-10-30 23:59:45,245:INFO:Initializing compare_models()
2025-10-30 23:59:45,246:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3133b67a0>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3133b67a0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-10-30 23:59:45,247:INFO:Checking exceptions
2025-10-30 23:59:45,257:INFO:Preparing display monitor
2025-10-30 23:59:45,324:INFO:Initializing Logistic Regression
2025-10-30 23:59:45,325:INFO:Total runtime is 4.34716542561849e-06 minutes
2025-10-30 23:59:45,326:INFO:SubProcess create_model() called ==================================
2025-10-30 23:59:45,326:INFO:Initializing create_model()
2025-10-30 23:59:45,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3133b67a0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3133b69e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-30 23:59:45,326:INFO:Checking exceptions
2025-10-30 23:59:45,326:INFO:Importing libraries
2025-10-30 23:59:45,326:INFO:Copying training dataset
2025-10-30 23:59:45,330:INFO:Defining folds
2025-10-30 23:59:45,330:INFO:Declaring metric variables
2025-10-30 23:59:45,331:INFO:Importing untrained model
2025-10-30 23:59:45,332:INFO:Logistic Regression Imported successfully
2025-10-30 23:59:45,335:INFO:Starting cross validation
2025-10-30 23:59:45,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:06:20,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:06:20,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:06:20,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:06:20,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:07:36,933:INFO:PyCaret ClassificationExperiment
2025-10-31 00:07:36,933:INFO:Logging name: 20ng_optimized_run
2025-10-31 00:07:36,933:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 00:07:36,933:INFO:version 3.3.2
2025-10-31 00:07:36,933:INFO:Initializing setup()
2025-10-31 00:07:36,933:INFO:self.USI: 86bd
2025-10-31 00:07:36,934:INFO:self._variable_keys: {'y_train', 'html_param', 'memory', 'fold_shuffle_param', 'target_param', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'logging_param', 'fold_generator', 'is_multiclass', 'gpu_param', 'pipeline', 'y', 'fix_imbalance', '_ml_usecase', 'log_plots_param', 'X', 'exp_id', 'X_train', 'idx', 'USI', 'y_test', 'fold_groups_param', 'X_test', 'data', '_available_plots'}
2025-10-31 00:07:36,934:INFO:Checking environment
2025-10-31 00:07:36,934:INFO:python_version: 3.10.15
2025-10-31 00:07:36,934:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 00:07:36,934:INFO:machine: arm64
2025-10-31 00:07:36,934:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:07:36,934:INFO:Memory: svmem(total=17179869184, available=6759858176, percent=60.7, used=8336850944, free=165068800, active=6610386944, inactive=6575243264, wired=1726464000)
2025-10-31 00:07:36,934:INFO:Physical Core: 10
2025-10-31 00:07:36,934:INFO:Logical Core: 10
2025-10-31 00:07:36,934:INFO:Checking libraries
2025-10-31 00:07:36,934:INFO:System:
2025-10-31 00:07:36,934:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 00:07:36,934:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 00:07:36,934:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:07:36,934:INFO:PyCaret required dependencies:
2025-10-31 00:07:36,935:INFO:                 pip: 25.2
2025-10-31 00:07:36,935:INFO:          setuptools: 80.9.0
2025-10-31 00:07:36,935:INFO:             pycaret: 3.3.2
2025-10-31 00:07:36,935:INFO:             IPython: 8.37.0
2025-10-31 00:07:36,935:INFO:          ipywidgets: 8.1.7
2025-10-31 00:07:36,935:INFO:                tqdm: 4.67.1
2025-10-31 00:07:36,935:INFO:               numpy: 1.26.4
2025-10-31 00:07:36,935:INFO:              pandas: 2.1.4
2025-10-31 00:07:36,935:INFO:              jinja2: 3.1.6
2025-10-31 00:07:36,935:INFO:               scipy: 1.11.4
2025-10-31 00:07:36,935:INFO:              joblib: 1.3.2
2025-10-31 00:07:36,935:INFO:             sklearn: 1.4.2
2025-10-31 00:07:36,935:INFO:                pyod: 2.0.5
2025-10-31 00:07:36,935:INFO:            imblearn: 0.14.0
2025-10-31 00:07:36,935:INFO:   category_encoders: 2.7.0
2025-10-31 00:07:36,935:INFO:            lightgbm: 4.6.0
2025-10-31 00:07:36,935:INFO:               numba: 0.62.1
2025-10-31 00:07:36,935:INFO:            requests: 2.32.5
2025-10-31 00:07:36,935:INFO:          matplotlib: 3.10.7
2025-10-31 00:07:36,935:INFO:          scikitplot: 0.3.7
2025-10-31 00:07:36,936:INFO:         yellowbrick: 1.5
2025-10-31 00:07:36,936:INFO:              plotly: 6.3.1
2025-10-31 00:07:36,936:INFO:    plotly-resampler: Not installed
2025-10-31 00:07:36,936:INFO:             kaleido: 0.2.1
2025-10-31 00:07:36,936:INFO:           schemdraw: 0.15
2025-10-31 00:07:36,936:INFO:         statsmodels: 0.14.5
2025-10-31 00:07:36,936:INFO:              sktime: 0.26.0
2025-10-31 00:07:36,936:INFO:               tbats: 1.1.3
2025-10-31 00:07:36,936:INFO:            pmdarima: 2.0.4
2025-10-31 00:07:36,936:INFO:              psutil: 7.1.2
2025-10-31 00:07:36,936:INFO:          markupsafe: 3.0.3
2025-10-31 00:07:36,936:INFO:             pickle5: Not installed
2025-10-31 00:07:36,936:INFO:         cloudpickle: 3.1.1
2025-10-31 00:07:36,936:INFO:         deprecation: 2.1.0
2025-10-31 00:07:36,936:INFO:              xxhash: 3.6.0
2025-10-31 00:07:36,936:INFO:           wurlitzer: 3.1.1
2025-10-31 00:07:36,936:INFO:PyCaret optional dependencies:
2025-10-31 00:07:37,112:INFO:                shap: Not installed
2025-10-31 00:07:37,112:INFO:           interpret: Not installed
2025-10-31 00:07:37,112:INFO:                umap: 0.5.9.post2
2025-10-31 00:07:37,112:INFO:     ydata_profiling: Not installed
2025-10-31 00:07:37,112:INFO:  explainerdashboard: Not installed
2025-10-31 00:07:37,112:INFO:             autoviz: Not installed
2025-10-31 00:07:37,112:INFO:           fairlearn: Not installed
2025-10-31 00:07:37,112:INFO:          deepchecks: Not installed
2025-10-31 00:07:37,112:INFO:             xgboost: Not installed
2025-10-31 00:07:37,112:INFO:            catboost: Not installed
2025-10-31 00:07:37,112:INFO:              kmodes: Not installed
2025-10-31 00:07:37,112:INFO:             mlxtend: Not installed
2025-10-31 00:07:37,112:INFO:       statsforecast: Not installed
2025-10-31 00:07:37,112:INFO:        tune_sklearn: Not installed
2025-10-31 00:07:37,112:INFO:                 ray: Not installed
2025-10-31 00:07:37,112:INFO:            hyperopt: Not installed
2025-10-31 00:07:37,112:INFO:              optuna: Not installed
2025-10-31 00:07:37,112:INFO:               skopt: Not installed
2025-10-31 00:07:37,112:INFO:              mlflow: 3.5.1
2025-10-31 00:07:37,112:INFO:              gradio: Not installed
2025-10-31 00:07:37,112:INFO:             fastapi: 0.120.2
2025-10-31 00:07:37,112:INFO:             uvicorn: 0.38.0
2025-10-31 00:07:37,112:INFO:              m2cgen: Not installed
2025-10-31 00:07:37,112:INFO:           evidently: Not installed
2025-10-31 00:07:37,112:INFO:               fugue: Not installed
2025-10-31 00:07:37,112:INFO:           streamlit: Not installed
2025-10-31 00:07:37,112:INFO:             prophet: Not installed
2025-10-31 00:07:37,112:INFO:None
2025-10-31 00:07:37,112:INFO:Set up data.
2025-10-31 00:07:37,156:INFO:Set up folding strategy.
2025-10-31 00:07:37,156:INFO:Set up train/test split.
2025-10-31 00:07:37,188:INFO:Set up index.
2025-10-31 00:07:37,188:INFO:Assigning column types.
2025-10-31 00:07:37,189:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 00:07:37,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:07:37,203:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:07:37,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:07:37,310:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:07:37,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,318:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 00:07:37,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:07:37,338:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,351:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:07:37,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,359:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 00:07:37,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,402:INFO:Preparing preprocessing pipeline...
2025-10-31 00:07:37,402:INFO:Set up label encoding.
2025-10-31 00:07:37,402:INFO:Set up simple imputation.
2025-10-31 00:07:37,403:INFO:Set up text embedding.
2025-10-31 00:07:37,403:INFO:Set up feature normalization.
2025-10-31 00:07:37,403:INFO:Set up feature selection.
2025-10-31 00:07:37,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:07:37,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:35,530:INFO:PyCaret ClassificationExperiment
2025-10-31 00:10:35,530:INFO:Logging name: clf-default-name
2025-10-31 00:10:35,530:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 00:10:35,531:INFO:version 3.3.2
2025-10-31 00:10:35,531:INFO:Initializing setup()
2025-10-31 00:10:35,531:INFO:self.USI: e9bf
2025-10-31 00:10:35,531:INFO:self._variable_keys: {'y_train', 'html_param', 'memory', 'fold_shuffle_param', 'target_param', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'logging_param', 'fold_generator', 'is_multiclass', 'gpu_param', 'pipeline', 'y', 'fix_imbalance', '_ml_usecase', 'log_plots_param', 'X', 'exp_id', 'X_train', 'idx', 'USI', 'y_test', 'fold_groups_param', 'X_test', 'data', '_available_plots'}
2025-10-31 00:10:35,531:INFO:Checking environment
2025-10-31 00:10:35,531:INFO:python_version: 3.10.15
2025-10-31 00:10:35,531:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 00:10:35,531:INFO:machine: arm64
2025-10-31 00:10:35,531:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:10:35,531:INFO:Memory: svmem(total=17179869184, available=6499598336, percent=62.2, used=8061288448, free=155959296, active=6361939968, inactive=6333825024, wired=1699348480)
2025-10-31 00:10:35,531:INFO:Physical Core: 10
2025-10-31 00:10:35,531:INFO:Logical Core: 10
2025-10-31 00:10:35,531:INFO:Checking libraries
2025-10-31 00:10:35,531:INFO:System:
2025-10-31 00:10:35,531:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 00:10:35,531:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 00:10:35,531:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:10:35,531:INFO:PyCaret required dependencies:
2025-10-31 00:10:35,531:INFO:                 pip: 25.2
2025-10-31 00:10:35,531:INFO:          setuptools: 80.9.0
2025-10-31 00:10:35,531:INFO:             pycaret: 3.3.2
2025-10-31 00:10:35,531:INFO:             IPython: 8.37.0
2025-10-31 00:10:35,531:INFO:          ipywidgets: 8.1.7
2025-10-31 00:10:35,531:INFO:                tqdm: 4.67.1
2025-10-31 00:10:35,531:INFO:               numpy: 1.26.4
2025-10-31 00:10:35,531:INFO:              pandas: 2.1.4
2025-10-31 00:10:35,531:INFO:              jinja2: 3.1.6
2025-10-31 00:10:35,531:INFO:               scipy: 1.11.4
2025-10-31 00:10:35,531:INFO:              joblib: 1.3.2
2025-10-31 00:10:35,531:INFO:             sklearn: 1.4.2
2025-10-31 00:10:35,531:INFO:                pyod: 2.0.5
2025-10-31 00:10:35,531:INFO:            imblearn: 0.14.0
2025-10-31 00:10:35,531:INFO:   category_encoders: 2.7.0
2025-10-31 00:10:35,531:INFO:            lightgbm: 4.6.0
2025-10-31 00:10:35,532:INFO:               numba: 0.62.1
2025-10-31 00:10:35,532:INFO:            requests: 2.32.5
2025-10-31 00:10:35,532:INFO:          matplotlib: 3.10.7
2025-10-31 00:10:35,532:INFO:          scikitplot: 0.3.7
2025-10-31 00:10:35,532:INFO:         yellowbrick: 1.5
2025-10-31 00:10:35,532:INFO:              plotly: 6.3.1
2025-10-31 00:10:35,532:INFO:    plotly-resampler: Not installed
2025-10-31 00:10:35,532:INFO:             kaleido: 0.2.1
2025-10-31 00:10:35,532:INFO:           schemdraw: 0.15
2025-10-31 00:10:35,532:INFO:         statsmodels: 0.14.5
2025-10-31 00:10:35,532:INFO:              sktime: 0.26.0
2025-10-31 00:10:35,532:INFO:               tbats: 1.1.3
2025-10-31 00:10:35,532:INFO:            pmdarima: 2.0.4
2025-10-31 00:10:35,532:INFO:              psutil: 7.1.2
2025-10-31 00:10:35,532:INFO:          markupsafe: 3.0.3
2025-10-31 00:10:35,532:INFO:             pickle5: Not installed
2025-10-31 00:10:35,532:INFO:         cloudpickle: 3.1.1
2025-10-31 00:10:35,532:INFO:         deprecation: 2.1.0
2025-10-31 00:10:35,532:INFO:              xxhash: 3.6.0
2025-10-31 00:10:35,532:INFO:           wurlitzer: 3.1.1
2025-10-31 00:10:35,532:INFO:PyCaret optional dependencies:
2025-10-31 00:10:35,532:INFO:                shap: Not installed
2025-10-31 00:10:35,532:INFO:           interpret: Not installed
2025-10-31 00:10:35,532:INFO:                umap: 0.5.9.post2
2025-10-31 00:10:35,532:INFO:     ydata_profiling: Not installed
2025-10-31 00:10:35,532:INFO:  explainerdashboard: Not installed
2025-10-31 00:10:35,532:INFO:             autoviz: Not installed
2025-10-31 00:10:35,532:INFO:           fairlearn: Not installed
2025-10-31 00:10:35,532:INFO:          deepchecks: Not installed
2025-10-31 00:10:35,532:INFO:             xgboost: Not installed
2025-10-31 00:10:35,532:INFO:            catboost: Not installed
2025-10-31 00:10:35,532:INFO:              kmodes: Not installed
2025-10-31 00:10:35,532:INFO:             mlxtend: Not installed
2025-10-31 00:10:35,532:INFO:       statsforecast: Not installed
2025-10-31 00:10:35,532:INFO:        tune_sklearn: Not installed
2025-10-31 00:10:35,532:INFO:                 ray: Not installed
2025-10-31 00:10:35,532:INFO:            hyperopt: Not installed
2025-10-31 00:10:35,532:INFO:              optuna: Not installed
2025-10-31 00:10:35,532:INFO:               skopt: Not installed
2025-10-31 00:10:35,532:INFO:              mlflow: 3.5.1
2025-10-31 00:10:35,532:INFO:              gradio: Not installed
2025-10-31 00:10:35,532:INFO:             fastapi: 0.120.2
2025-10-31 00:10:35,532:INFO:             uvicorn: 0.38.0
2025-10-31 00:10:35,532:INFO:              m2cgen: Not installed
2025-10-31 00:10:35,533:INFO:           evidently: Not installed
2025-10-31 00:10:35,533:INFO:               fugue: Not installed
2025-10-31 00:10:35,533:INFO:           streamlit: Not installed
2025-10-31 00:10:35,533:INFO:             prophet: Not installed
2025-10-31 00:10:35,533:INFO:None
2025-10-31 00:10:35,533:INFO:Set up data.
2025-10-31 00:10:35,884:INFO:Set up folding strategy.
2025-10-31 00:10:35,884:INFO:Set up train/test split.
2025-10-31 00:10:36,221:INFO:Set up index.
2025-10-31 00:10:36,230:INFO:Assigning column types.
2025-10-31 00:10:36,555:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 00:10:36,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:10:36,569:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:10:36,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,577:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,590:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:10:36,590:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:10:36,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,599:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 00:10:36,612:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:10:36,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,633:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:10:36,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,642:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 00:10:36,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,684:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:36,684:INFO:Preparing preprocessing pipeline...
2025-10-31 00:10:36,725:INFO:Set up label encoding.
2025-10-31 00:10:36,725:INFO:Set up simple imputation.
2025-10-31 00:10:36,725:INFO:Set up feature normalization.
2025-10-31 00:10:37,535:INFO:Finished creating preprocessing pipeline.
2025-10-31 00:10:37,541:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfid...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-31 00:10:37,541:INFO:Creating final display dataframe.
2025-10-31 00:10:39,837:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8               Ignore features   
9              Numeric features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14                    Normalize   
15             Normalize method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                       (15076, 2002)  
5                                       (15076, 2001)  
6                                       (10553, 2001)  
7                                        (4523, 2001)  
8                                                   1  
9                                                2000  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                               True  
15                                             zscore  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               e9bf  
2025-10-31 00:10:39,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:39,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:39,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:39,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:39,886:INFO:setup() successfully completed in 4.36s...............
2025-10-31 00:10:51,936:INFO:PyCaret ClassificationExperiment
2025-10-31 00:10:51,937:INFO:Logging name: clf-default-name
2025-10-31 00:10:51,937:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 00:10:51,937:INFO:version 3.3.2
2025-10-31 00:10:51,937:INFO:Initializing setup()
2025-10-31 00:10:51,937:INFO:self.USI: 7e77
2025-10-31 00:10:51,937:INFO:self._variable_keys: {'y_train', 'html_param', 'memory', 'fold_shuffle_param', 'target_param', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'logging_param', 'fold_generator', 'is_multiclass', 'gpu_param', 'pipeline', 'y', 'fix_imbalance', '_ml_usecase', 'log_plots_param', 'X', 'exp_id', 'X_train', 'idx', 'USI', 'y_test', 'fold_groups_param', 'X_test', 'data', '_available_plots'}
2025-10-31 00:10:51,937:INFO:Checking environment
2025-10-31 00:10:51,937:INFO:python_version: 3.10.15
2025-10-31 00:10:51,937:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 00:10:51,937:INFO:machine: arm64
2025-10-31 00:10:51,937:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:10:51,937:INFO:Memory: svmem(total=17179869184, available=6132744192, percent=64.3, used=7803600896, free=66830336, active=6077874176, inactive=6061031424, wired=1725726720)
2025-10-31 00:10:51,938:INFO:Physical Core: 10
2025-10-31 00:10:51,938:INFO:Logical Core: 10
2025-10-31 00:10:51,938:INFO:Checking libraries
2025-10-31 00:10:51,938:INFO:System:
2025-10-31 00:10:51,938:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 00:10:51,938:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 00:10:51,938:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:10:51,938:INFO:PyCaret required dependencies:
2025-10-31 00:10:51,938:INFO:                 pip: 25.2
2025-10-31 00:10:51,938:INFO:          setuptools: 80.9.0
2025-10-31 00:10:51,938:INFO:             pycaret: 3.3.2
2025-10-31 00:10:51,938:INFO:             IPython: 8.37.0
2025-10-31 00:10:51,938:INFO:          ipywidgets: 8.1.7
2025-10-31 00:10:51,938:INFO:                tqdm: 4.67.1
2025-10-31 00:10:51,938:INFO:               numpy: 1.26.4
2025-10-31 00:10:51,938:INFO:              pandas: 2.1.4
2025-10-31 00:10:51,938:INFO:              jinja2: 3.1.6
2025-10-31 00:10:51,938:INFO:               scipy: 1.11.4
2025-10-31 00:10:51,938:INFO:              joblib: 1.3.2
2025-10-31 00:10:51,938:INFO:             sklearn: 1.4.2
2025-10-31 00:10:51,938:INFO:                pyod: 2.0.5
2025-10-31 00:10:51,938:INFO:            imblearn: 0.14.0
2025-10-31 00:10:51,938:INFO:   category_encoders: 2.7.0
2025-10-31 00:10:51,938:INFO:            lightgbm: 4.6.0
2025-10-31 00:10:51,938:INFO:               numba: 0.62.1
2025-10-31 00:10:51,938:INFO:            requests: 2.32.5
2025-10-31 00:10:51,938:INFO:          matplotlib: 3.10.7
2025-10-31 00:10:51,938:INFO:          scikitplot: 0.3.7
2025-10-31 00:10:51,938:INFO:         yellowbrick: 1.5
2025-10-31 00:10:51,938:INFO:              plotly: 6.3.1
2025-10-31 00:10:51,938:INFO:    plotly-resampler: Not installed
2025-10-31 00:10:51,938:INFO:             kaleido: 0.2.1
2025-10-31 00:10:51,938:INFO:           schemdraw: 0.15
2025-10-31 00:10:51,938:INFO:         statsmodels: 0.14.5
2025-10-31 00:10:51,938:INFO:              sktime: 0.26.0
2025-10-31 00:10:51,938:INFO:               tbats: 1.1.3
2025-10-31 00:10:51,938:INFO:            pmdarima: 2.0.4
2025-10-31 00:10:51,938:INFO:              psutil: 7.1.2
2025-10-31 00:10:51,938:INFO:          markupsafe: 3.0.3
2025-10-31 00:10:51,938:INFO:             pickle5: Not installed
2025-10-31 00:10:51,939:INFO:         cloudpickle: 3.1.1
2025-10-31 00:10:51,939:INFO:         deprecation: 2.1.0
2025-10-31 00:10:51,939:INFO:              xxhash: 3.6.0
2025-10-31 00:10:51,939:INFO:           wurlitzer: 3.1.1
2025-10-31 00:10:51,939:INFO:PyCaret optional dependencies:
2025-10-31 00:10:51,939:INFO:                shap: Not installed
2025-10-31 00:10:51,939:INFO:           interpret: Not installed
2025-10-31 00:10:51,939:INFO:                umap: 0.5.9.post2
2025-10-31 00:10:51,939:INFO:     ydata_profiling: Not installed
2025-10-31 00:10:51,939:INFO:  explainerdashboard: Not installed
2025-10-31 00:10:51,939:INFO:             autoviz: Not installed
2025-10-31 00:10:51,939:INFO:           fairlearn: Not installed
2025-10-31 00:10:51,939:INFO:          deepchecks: Not installed
2025-10-31 00:10:51,939:INFO:             xgboost: Not installed
2025-10-31 00:10:51,939:INFO:            catboost: Not installed
2025-10-31 00:10:51,939:INFO:              kmodes: Not installed
2025-10-31 00:10:51,939:INFO:             mlxtend: Not installed
2025-10-31 00:10:51,939:INFO:       statsforecast: Not installed
2025-10-31 00:10:51,939:INFO:        tune_sklearn: Not installed
2025-10-31 00:10:51,939:INFO:                 ray: Not installed
2025-10-31 00:10:51,939:INFO:            hyperopt: Not installed
2025-10-31 00:10:51,939:INFO:              optuna: Not installed
2025-10-31 00:10:51,940:INFO:               skopt: Not installed
2025-10-31 00:10:51,940:INFO:              mlflow: 3.5.1
2025-10-31 00:10:51,940:INFO:              gradio: Not installed
2025-10-31 00:10:51,940:INFO:             fastapi: 0.120.2
2025-10-31 00:10:51,940:INFO:             uvicorn: 0.38.0
2025-10-31 00:10:51,940:INFO:              m2cgen: Not installed
2025-10-31 00:10:51,940:INFO:           evidently: Not installed
2025-10-31 00:10:51,940:INFO:               fugue: Not installed
2025-10-31 00:10:51,940:INFO:           streamlit: Not installed
2025-10-31 00:10:51,940:INFO:             prophet: Not installed
2025-10-31 00:10:51,940:INFO:None
2025-10-31 00:10:51,940:INFO:Set up data.
2025-10-31 00:10:52,324:INFO:Set up folding strategy.
2025-10-31 00:10:52,324:INFO:Set up train/test split.
2025-10-31 00:10:52,574:INFO:Set up index.
2025-10-31 00:10:52,579:INFO:Assigning column types.
2025-10-31 00:10:52,933:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 00:10:52,946:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:10:52,946:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:10:52,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:52,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:52,968:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:10:52,968:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:10:52,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:52,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:52,976:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 00:10:52,990:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:10:52,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:52,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:53,012:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:10:53,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:53,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:53,020:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 00:10:53,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:53,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:53,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:53,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:53,063:INFO:Preparing preprocessing pipeline...
2025-10-31 00:10:53,105:INFO:Set up label encoding.
2025-10-31 00:10:53,105:INFO:Set up simple imputation.
2025-10-31 00:10:53,105:INFO:Set up feature normalization.
2025-10-31 00:10:53,926:INFO:Finished creating preprocessing pipeline.
2025-10-31 00:10:53,931:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfid...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-31 00:10:53,931:INFO:Creating final display dataframe.
2025-10-31 00:10:55,493:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8               Ignore features   
9              Numeric features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14                    Normalize   
15             Normalize method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                       (15076, 2002)  
5                                       (15076, 2001)  
6                                       (10553, 2001)  
7                                        (4523, 2001)  
8                                                   1  
9                                                2000  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                               True  
15                                             zscore  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               7e77  
2025-10-31 00:10:55,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:55,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:55,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:55,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:10:55,540:INFO:setup() successfully completed in 3.61s...............
2025-10-31 00:11:05,432:INFO:Initializing compare_models()
2025-10-31 00:11:05,433:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, include=None, fold=3, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, 'include': None, 'exclude': ['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'], 'fold': 3, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'])
2025-10-31 00:11:05,433:INFO:Checking exceptions
2025-10-31 00:11:05,676:INFO:Preparing display monitor
2025-10-31 00:11:05,732:INFO:Initializing Logistic Regression
2025-10-31 00:11:05,733:INFO:Total runtime is 4.029273986816406e-06 minutes
2025-10-31 00:11:05,734:INFO:SubProcess create_model() called ==================================
2025-10-31 00:11:05,734:INFO:Initializing create_model()
2025-10-31 00:11:05,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=lr, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:11:05,734:INFO:Checking exceptions
2025-10-31 00:11:05,734:INFO:Importing libraries
2025-10-31 00:11:05,734:INFO:Copying training dataset
2025-10-31 00:11:06,207:INFO:Defining folds
2025-10-31 00:11:06,207:INFO:Declaring metric variables
2025-10-31 00:11:06,208:INFO:Importing untrained model
2025-10-31 00:11:06,210:INFO:Logistic Regression Imported successfully
2025-10-31 00:11:06,212:INFO:Starting cross validation
2025-10-31 00:11:06,216:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:11:11,126:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:11,132:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,143:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,154:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,677:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:11,683:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,694:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,704:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,848:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:11,852:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,862:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,872:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:11,897:INFO:Calculating mean and std
2025-10-31 00:11:11,899:INFO:Creating metrics dataframe
2025-10-31 00:11:11,901:INFO:Uploading results into container
2025-10-31 00:11:11,901:INFO:Uploading model into container now
2025-10-31 00:11:11,901:INFO:_master_model_container: 1
2025-10-31 00:11:11,902:INFO:_display_container: 2
2025-10-31 00:11:11,903:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 00:11:11,903:INFO:create_model() successfully completed......................................
2025-10-31 00:11:12,005:INFO:SubProcess create_model() end ==================================
2025-10-31 00:11:12,005:INFO:Creating metrics dataframe
2025-10-31 00:11:12,007:INFO:Initializing Naive Bayes
2025-10-31 00:11:12,008:INFO:Total runtime is 0.10458759466807048 minutes
2025-10-31 00:11:12,009:INFO:SubProcess create_model() called ==================================
2025-10-31 00:11:12,009:INFO:Initializing create_model()
2025-10-31 00:11:12,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=nb, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:11:12,009:INFO:Checking exceptions
2025-10-31 00:11:12,009:INFO:Importing libraries
2025-10-31 00:11:12,009:INFO:Copying training dataset
2025-10-31 00:11:12,396:INFO:Defining folds
2025-10-31 00:11:12,396:INFO:Declaring metric variables
2025-10-31 00:11:12,398:INFO:Importing untrained model
2025-10-31 00:11:12,399:INFO:Naive Bayes Imported successfully
2025-10-31 00:11:12,402:INFO:Starting cross validation
2025-10-31 00:11:12,405:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:11:14,161:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:14,172:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:14,183:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:15,200:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:15,210:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:15,221:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:15,295:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:15,304:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:15,314:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:15,330:INFO:Calculating mean and std
2025-10-31 00:11:15,331:INFO:Creating metrics dataframe
2025-10-31 00:11:15,333:INFO:Uploading results into container
2025-10-31 00:11:15,333:INFO:Uploading model into container now
2025-10-31 00:11:15,334:INFO:_master_model_container: 2
2025-10-31 00:11:15,334:INFO:_display_container: 2
2025-10-31 00:11:15,334:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-10-31 00:11:15,334:INFO:create_model() successfully completed......................................
2025-10-31 00:11:15,462:INFO:SubProcess create_model() end ==================================
2025-10-31 00:11:15,462:INFO:Creating metrics dataframe
2025-10-31 00:11:15,465:INFO:Initializing SVM - Linear Kernel
2025-10-31 00:11:15,465:INFO:Total runtime is 0.16221493085225425 minutes
2025-10-31 00:11:15,466:INFO:SubProcess create_model() called ==================================
2025-10-31 00:11:15,467:INFO:Initializing create_model()
2025-10-31 00:11:15,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=svm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:11:15,467:INFO:Checking exceptions
2025-10-31 00:11:15,467:INFO:Importing libraries
2025-10-31 00:11:15,467:INFO:Copying training dataset
2025-10-31 00:11:15,841:INFO:Defining folds
2025-10-31 00:11:15,841:INFO:Declaring metric variables
2025-10-31 00:11:15,843:INFO:Importing untrained model
2025-10-31 00:11:15,844:INFO:SVM - Linear Kernel Imported successfully
2025-10-31 00:11:15,846:INFO:Starting cross validation
2025-10-31 00:11:15,850:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:11:29,254:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:29,259:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:29,269:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:29,280:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:30,933:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:30,938:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:30,949:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:30,959:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:31,097:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:31,101:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:31,111:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:31,121:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:31,149:INFO:Calculating mean and std
2025-10-31 00:11:31,150:INFO:Creating metrics dataframe
2025-10-31 00:11:31,151:INFO:Uploading results into container
2025-10-31 00:11:31,152:INFO:Uploading model into container now
2025-10-31 00:11:31,152:INFO:_master_model_container: 3
2025-10-31 00:11:31,152:INFO:_display_container: 2
2025-10-31 00:11:31,153:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-10-31 00:11:31,153:INFO:create_model() successfully completed......................................
2025-10-31 00:11:31,239:INFO:SubProcess create_model() end ==================================
2025-10-31 00:11:31,239:INFO:Creating metrics dataframe
2025-10-31 00:11:31,241:INFO:Initializing Ridge Classifier
2025-10-31 00:11:31,242:INFO:Total runtime is 0.42515416542689005 minutes
2025-10-31 00:11:31,243:INFO:SubProcess create_model() called ==================================
2025-10-31 00:11:31,243:INFO:Initializing create_model()
2025-10-31 00:11:31,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=ridge, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:11:31,243:INFO:Checking exceptions
2025-10-31 00:11:31,243:INFO:Importing libraries
2025-10-31 00:11:31,243:INFO:Copying training dataset
2025-10-31 00:11:31,656:INFO:Defining folds
2025-10-31 00:11:31,656:INFO:Declaring metric variables
2025-10-31 00:11:31,657:INFO:Importing untrained model
2025-10-31 00:11:31,659:INFO:Ridge Classifier Imported successfully
2025-10-31 00:11:31,662:INFO:Starting cross validation
2025-10-31 00:11:31,665:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:11:32,686:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:32,690:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:32,700:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:32,709:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:33,000:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:33,004:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:33,014:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:33,025:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:34,216:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:11:34,220:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:34,230:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:34,240:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:34,258:INFO:Calculating mean and std
2025-10-31 00:11:34,259:INFO:Creating metrics dataframe
2025-10-31 00:11:34,260:INFO:Uploading results into container
2025-10-31 00:11:34,260:INFO:Uploading model into container now
2025-10-31 00:11:34,261:INFO:_master_model_container: 4
2025-10-31 00:11:34,261:INFO:_display_container: 2
2025-10-31 00:11:34,261:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-10-31 00:11:34,261:INFO:create_model() successfully completed......................................
2025-10-31 00:11:34,351:INFO:SubProcess create_model() end ==================================
2025-10-31 00:11:34,351:INFO:Creating metrics dataframe
2025-10-31 00:11:34,354:INFO:Initializing Random Forest Classifier
2025-10-31 00:11:34,354:INFO:Total runtime is 0.47702693144480385 minutes
2025-10-31 00:11:34,355:INFO:SubProcess create_model() called ==================================
2025-10-31 00:11:34,355:INFO:Initializing create_model()
2025-10-31 00:11:34,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=rf, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:11:34,356:INFO:Checking exceptions
2025-10-31 00:11:34,356:INFO:Importing libraries
2025-10-31 00:11:34,356:INFO:Copying training dataset
2025-10-31 00:11:34,724:INFO:Defining folds
2025-10-31 00:11:34,724:INFO:Declaring metric variables
2025-10-31 00:11:34,726:INFO:Importing untrained model
2025-10-31 00:11:34,727:INFO:Random Forest Classifier Imported successfully
2025-10-31 00:11:34,729:INFO:Starting cross validation
2025-10-31 00:11:34,733:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:11:37,733:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:37,743:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:37,757:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:37,801:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:37,812:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:37,822:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:39,131:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:39,140:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:39,149:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:11:39,172:INFO:Calculating mean and std
2025-10-31 00:11:39,173:INFO:Creating metrics dataframe
2025-10-31 00:11:39,174:INFO:Uploading results into container
2025-10-31 00:11:39,174:INFO:Uploading model into container now
2025-10-31 00:11:39,175:INFO:_master_model_container: 5
2025-10-31 00:11:39,175:INFO:_display_container: 2
2025-10-31 00:11:39,175:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-10-31 00:11:39,175:INFO:create_model() successfully completed......................................
2025-10-31 00:11:39,265:INFO:SubProcess create_model() end ==================================
2025-10-31 00:11:39,265:INFO:Creating metrics dataframe
2025-10-31 00:11:39,269:INFO:Initializing Gradient Boosting Classifier
2025-10-31 00:11:39,269:INFO:Total runtime is 0.5589392463366191 minutes
2025-10-31 00:11:39,270:INFO:SubProcess create_model() called ==================================
2025-10-31 00:11:39,270:INFO:Initializing create_model()
2025-10-31 00:11:39,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=gbc, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:11:39,270:INFO:Checking exceptions
2025-10-31 00:11:39,270:INFO:Importing libraries
2025-10-31 00:11:39,270:INFO:Copying training dataset
2025-10-31 00:11:39,646:INFO:Defining folds
2025-10-31 00:11:39,646:INFO:Declaring metric variables
2025-10-31 00:11:39,648:INFO:Importing untrained model
2025-10-31 00:11:39,650:INFO:Gradient Boosting Classifier Imported successfully
2025-10-31 00:11:39,652:INFO:Starting cross validation
2025-10-31 00:11:39,655:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:14:40,610:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:14:40,615:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:40,626:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:40,636:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:42,378:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:14:42,382:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:42,392:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:42,402:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:43,731:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:14:43,735:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:43,744:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:43,754:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:43,776:INFO:Calculating mean and std
2025-10-31 00:14:43,777:INFO:Creating metrics dataframe
2025-10-31 00:14:43,780:INFO:Uploading results into container
2025-10-31 00:14:43,781:INFO:Uploading model into container now
2025-10-31 00:14:43,781:INFO:_master_model_container: 6
2025-10-31 00:14:43,782:INFO:_display_container: 2
2025-10-31 00:14:43,782:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-10-31 00:14:43,782:INFO:create_model() successfully completed......................................
2025-10-31 00:14:43,942:INFO:SubProcess create_model() end ==================================
2025-10-31 00:14:43,942:INFO:Creating metrics dataframe
2025-10-31 00:14:43,945:INFO:Initializing Linear Discriminant Analysis
2025-10-31 00:14:43,945:INFO:Total runtime is 3.636881613731384 minutes
2025-10-31 00:14:43,947:INFO:SubProcess create_model() called ==================================
2025-10-31 00:14:43,947:INFO:Initializing create_model()
2025-10-31 00:14:43,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=lda, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:14:43,947:INFO:Checking exceptions
2025-10-31 00:14:43,947:INFO:Importing libraries
2025-10-31 00:14:43,947:INFO:Copying training dataset
2025-10-31 00:14:44,343:INFO:Defining folds
2025-10-31 00:14:44,343:INFO:Declaring metric variables
2025-10-31 00:14:44,345:INFO:Importing untrained model
2025-10-31 00:14:44,346:INFO:Linear Discriminant Analysis Imported successfully
2025-10-31 00:14:44,348:INFO:Starting cross validation
2025-10-31 00:14:44,352:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:14:48,559:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:14:48,564:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:48,574:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:48,584:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:48,838:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:14:48,842:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:48,852:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:48,862:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:49,029:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:14:49,033:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:49,044:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:49,053:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:49,081:INFO:Calculating mean and std
2025-10-31 00:14:49,082:INFO:Creating metrics dataframe
2025-10-31 00:14:49,084:INFO:Uploading results into container
2025-10-31 00:14:49,084:INFO:Uploading model into container now
2025-10-31 00:14:49,084:INFO:_master_model_container: 7
2025-10-31 00:14:49,084:INFO:_display_container: 2
2025-10-31 00:14:49,084:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-10-31 00:14:49,085:INFO:create_model() successfully completed......................................
2025-10-31 00:14:49,170:INFO:SubProcess create_model() end ==================================
2025-10-31 00:14:49,170:INFO:Creating metrics dataframe
2025-10-31 00:14:49,173:INFO:Initializing Extra Trees Classifier
2025-10-31 00:14:49,173:INFO:Total runtime is 3.724018665154775 minutes
2025-10-31 00:14:49,175:INFO:SubProcess create_model() called ==================================
2025-10-31 00:14:49,175:INFO:Initializing create_model()
2025-10-31 00:14:49,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=et, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:14:49,175:INFO:Checking exceptions
2025-10-31 00:14:49,175:INFO:Importing libraries
2025-10-31 00:14:49,175:INFO:Copying training dataset
2025-10-31 00:14:49,601:INFO:Defining folds
2025-10-31 00:14:49,601:INFO:Declaring metric variables
2025-10-31 00:14:49,603:INFO:Importing untrained model
2025-10-31 00:14:49,604:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:14:49,607:INFO:Starting cross validation
2025-10-31 00:14:49,611:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:14:54,503:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:54,519:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:54,533:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:54,737:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:54,754:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:54,767:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:55,021:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:55,031:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:55,041:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:14:55,064:INFO:Calculating mean and std
2025-10-31 00:14:55,065:INFO:Creating metrics dataframe
2025-10-31 00:14:55,066:INFO:Uploading results into container
2025-10-31 00:14:55,067:INFO:Uploading model into container now
2025-10-31 00:14:55,067:INFO:_master_model_container: 8
2025-10-31 00:14:55,067:INFO:_display_container: 2
2025-10-31 00:14:55,067:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:14:55,068:INFO:create_model() successfully completed......................................
2025-10-31 00:14:55,175:INFO:SubProcess create_model() end ==================================
2025-10-31 00:14:55,175:INFO:Creating metrics dataframe
2025-10-31 00:14:55,178:INFO:Initializing Light Gradient Boosting Machine
2025-10-31 00:14:55,178:INFO:Total runtime is 3.8240968147913614 minutes
2025-10-31 00:14:55,180:INFO:SubProcess create_model() called ==================================
2025-10-31 00:14:55,180:INFO:Initializing create_model()
2025-10-31 00:14:55,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314ba52d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:14:55,180:INFO:Checking exceptions
2025-10-31 00:14:55,180:INFO:Importing libraries
2025-10-31 00:14:55,180:INFO:Copying training dataset
2025-10-31 00:14:55,552:INFO:Defining folds
2025-10-31 00:14:55,552:INFO:Declaring metric variables
2025-10-31 00:14:55,554:INFO:Importing untrained model
2025-10-31 00:14:55,556:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-31 00:14:55,558:INFO:Starting cross validation
2025-10-31 00:14:55,562:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:15:29,631:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,642:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,652:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,703:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,719:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,735:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,922:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,932:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,942:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:15:29,967:INFO:Calculating mean and std
2025-10-31 00:15:29,971:INFO:Creating metrics dataframe
2025-10-31 00:15:29,974:INFO:Uploading results into container
2025-10-31 00:15:29,975:INFO:Uploading model into container now
2025-10-31 00:15:29,976:INFO:_master_model_container: 9
2025-10-31 00:15:29,976:INFO:_display_container: 2
2025-10-31 00:15:29,977:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-10-31 00:15:29,977:INFO:create_model() successfully completed......................................
2025-10-31 00:15:30,083:INFO:SubProcess create_model() end ==================================
2025-10-31 00:15:30,083:INFO:Creating metrics dataframe
2025-10-31 00:15:30,089:INFO:Initializing create_model()
2025-10-31 00:15:30,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:15:30,090:INFO:Checking exceptions
2025-10-31 00:15:30,090:INFO:Importing libraries
2025-10-31 00:15:30,090:INFO:Copying training dataset
2025-10-31 00:15:30,482:INFO:Defining folds
2025-10-31 00:15:30,482:INFO:Declaring metric variables
2025-10-31 00:15:30,482:INFO:Importing untrained model
2025-10-31 00:15:30,482:INFO:Declaring custom model
2025-10-31 00:15:30,482:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:15:30,486:INFO:Cross validation set to False
2025-10-31 00:15:30,486:INFO:Fitting Model
2025-10-31 00:15:33,192:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:15:33,192:INFO:create_model() successfully completed......................................
2025-10-31 00:15:33,279:INFO:_master_model_container: 9
2025-10-31 00:15:33,280:INFO:_display_container: 2
2025-10-31 00:15:33,280:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:15:33,280:INFO:compare_models() successfully completed......................................
2025-10-31 00:15:37,213:INFO:Initializing tune_model()
2025-10-31 00:15:37,214:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=3, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>)
2025-10-31 00:15:37,214:INFO:Checking exceptions
2025-10-31 00:15:37,359:INFO:Copying training dataset
2025-10-31 00:15:37,595:INFO:Checking base model
2025-10-31 00:15:37,595:INFO:Base model : Extra Trees Classifier
2025-10-31 00:15:37,596:INFO:Declaring metric variables
2025-10-31 00:15:37,598:INFO:Defining Hyperparameters
2025-10-31 00:15:37,683:INFO:Tuning with n_jobs=-1
2025-10-31 00:15:37,683:INFO:Initializing RandomizedSearchCV
2025-10-31 00:16:01,911:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2025-10-31 00:16:01,913:INFO:Hyperparameter search completed
2025-10-31 00:16:01,913:INFO:SubProcess create_model() called ==================================
2025-10-31 00:16:01,915:INFO:Initializing create_model()
2025-10-31 00:16:01,915:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x333b705b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2025-10-31 00:16:01,915:INFO:Checking exceptions
2025-10-31 00:16:01,915:INFO:Importing libraries
2025-10-31 00:16:01,915:INFO:Copying training dataset
2025-10-31 00:16:02,352:INFO:Defining folds
2025-10-31 00:16:02,352:INFO:Declaring metric variables
2025-10-31 00:16:02,355:INFO:Importing untrained model
2025-10-31 00:16:02,355:INFO:Declaring custom model
2025-10-31 00:16:02,357:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:16:02,359:INFO:Starting cross validation
2025-10-31 00:16:02,364:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:16:03,432:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,443:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,453:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,595:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,605:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,615:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,735:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,744:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,754:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:03,780:INFO:Calculating mean and std
2025-10-31 00:16:03,781:INFO:Creating metrics dataframe
2025-10-31 00:16:03,783:INFO:Finalizing model
2025-10-31 00:16:04,334:INFO:Uploading results into container
2025-10-31 00:16:04,335:INFO:Uploading model into container now
2025-10-31 00:16:04,336:INFO:_master_model_container: 10
2025-10-31 00:16:04,336:INFO:_display_container: 3
2025-10-31 00:16:04,336:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-10-31 00:16:04,336:INFO:create_model() successfully completed......................................
2025-10-31 00:16:04,456:INFO:SubProcess create_model() end ==================================
2025-10-31 00:16:04,456:INFO:choose_better activated
2025-10-31 00:16:04,458:INFO:SubProcess create_model() called ==================================
2025-10-31 00:16:04,458:INFO:Initializing create_model()
2025-10-31 00:16:04,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:16:04,458:INFO:Checking exceptions
2025-10-31 00:16:04,459:INFO:Importing libraries
2025-10-31 00:16:04,459:INFO:Copying training dataset
2025-10-31 00:16:04,819:INFO:Defining folds
2025-10-31 00:16:04,819:INFO:Declaring metric variables
2025-10-31 00:16:04,820:INFO:Importing untrained model
2025-10-31 00:16:04,820:INFO:Declaring custom model
2025-10-31 00:16:04,820:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:16:04,820:INFO:Starting cross validation
2025-10-31 00:16:04,823:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:16:09,439:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:09,451:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:09,474:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:09,805:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:09,819:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:09,831:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:10,107:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:10,118:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:10,128:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:16:10,145:INFO:Calculating mean and std
2025-10-31 00:16:10,145:INFO:Creating metrics dataframe
2025-10-31 00:16:10,146:INFO:Finalizing model
2025-10-31 00:16:12,859:INFO:Uploading results into container
2025-10-31 00:16:12,860:INFO:Uploading model into container now
2025-10-31 00:16:12,860:INFO:_master_model_container: 11
2025-10-31 00:16:12,860:INFO:_display_container: 4
2025-10-31 00:16:12,860:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:16:12,860:INFO:create_model() successfully completed......................................
2025-10-31 00:16:12,940:INFO:SubProcess create_model() end ==================================
2025-10-31 00:16:12,940:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for Accuracy is 0.5868
2025-10-31 00:16:12,940:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.5101
2025-10-31 00:16:12,940:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2025-10-31 00:16:12,940:INFO:choose_better completed
2025-10-31 00:16:12,940:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-10-31 00:16:12,944:INFO:_master_model_container: 11
2025-10-31 00:16:12,944:INFO:_display_container: 3
2025-10-31 00:16:12,944:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:16:12,944:INFO:tune_model() successfully completed......................................
2025-10-31 00:16:13,023:INFO:Initializing finalize_model()
2025-10-31 00:16:13,023:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-10-31 00:16:13,024:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:16:13,213:INFO:Initializing create_model()
2025-10-31 00:16:13,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:16:13,213:INFO:Checking exceptions
2025-10-31 00:16:13,214:INFO:Importing libraries
2025-10-31 00:16:13,214:INFO:Copying training dataset
2025-10-31 00:16:13,247:INFO:Defining folds
2025-10-31 00:16:13,247:INFO:Declaring metric variables
2025-10-31 00:16:13,247:INFO:Importing untrained model
2025-10-31 00:16:13,247:INFO:Declaring custom model
2025-10-31 00:16:13,247:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:16:13,251:INFO:Cross validation set to False
2025-10-31 00:16:13,251:INFO:Fitting Model
2025-10-31 00:16:17,522:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 00:16:17,522:INFO:create_model() successfully completed......................................
2025-10-31 00:16:17,623:INFO:_master_model_container: 11
2025-10-31 00:16:17,623:INFO:_display_container: 3
2025-10-31 00:16:17,629:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 00:16:17,629:INFO:finalize_model() successfully completed......................................
2025-10-31 00:16:20,854:INFO:Initializing predict_model()
2025-10-31 00:16:20,855:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x339cf09d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x333c38c10>)
2025-10-31 00:16:20,855:INFO:Checking exceptions
2025-10-31 00:16:20,855:INFO:Preloading libraries
2025-10-31 00:16:20,857:INFO:Set up data.
2025-10-31 00:16:21,012:INFO:Set up index.
2025-10-31 00:23:37,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:23:37,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:23:37,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:23:37,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:23:43,514:INFO:PyCaret ClassificationExperiment
2025-10-31 00:23:43,515:INFO:Logging name: clf-default-name
2025-10-31 00:23:43,515:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 00:23:43,515:INFO:version 3.3.2
2025-10-31 00:23:43,515:INFO:Initializing setup()
2025-10-31 00:23:43,515:INFO:self.USI: 0c76
2025-10-31 00:23:43,515:INFO:self._variable_keys: {'idx', 'target_param', 'y_test', 'log_plots_param', 'n_jobs_param', '_ml_usecase', '_available_plots', 'X', 'data', 'seed', 'logging_param', 'pipeline', 'exp_name_log', 'gpu_n_jobs_param', 'is_multiclass', 'y_train', 'memory', 'fold_shuffle_param', 'X_train', 'exp_id', 'fix_imbalance', 'X_test', 'fold_groups_param', 'y', 'USI', 'fold_generator', 'gpu_param', 'html_param'}
2025-10-31 00:23:43,515:INFO:Checking environment
2025-10-31 00:23:43,515:INFO:python_version: 3.10.15
2025-10-31 00:23:43,515:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 00:23:43,515:INFO:machine: arm64
2025-10-31 00:23:43,515:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:23:43,515:INFO:Memory: svmem(total=17179869184, available=6175326208, percent=64.1, used=6916603904, free=1262419968, active=5219450880, inactive=4590272512, wired=1697153024)
2025-10-31 00:23:43,515:INFO:Physical Core: 10
2025-10-31 00:23:43,515:INFO:Logical Core: 10
2025-10-31 00:23:43,515:INFO:Checking libraries
2025-10-31 00:23:43,515:INFO:System:
2025-10-31 00:23:43,515:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 00:23:43,515:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 00:23:43,515:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:23:43,515:INFO:PyCaret required dependencies:
2025-10-31 00:23:43,516:INFO:                 pip: 25.2
2025-10-31 00:23:43,516:INFO:          setuptools: 80.9.0
2025-10-31 00:23:43,516:INFO:             pycaret: 3.3.2
2025-10-31 00:23:43,516:INFO:             IPython: 8.37.0
2025-10-31 00:23:43,516:INFO:          ipywidgets: 8.1.7
2025-10-31 00:23:43,516:INFO:                tqdm: 4.67.1
2025-10-31 00:23:43,516:INFO:               numpy: 1.26.4
2025-10-31 00:23:43,516:INFO:              pandas: 2.1.4
2025-10-31 00:23:43,516:INFO:              jinja2: 3.1.6
2025-10-31 00:23:43,516:INFO:               scipy: 1.11.4
2025-10-31 00:23:43,516:INFO:              joblib: 1.3.2
2025-10-31 00:23:43,516:INFO:             sklearn: 1.4.2
2025-10-31 00:23:43,516:INFO:                pyod: 2.0.5
2025-10-31 00:23:43,516:INFO:            imblearn: 0.14.0
2025-10-31 00:23:43,516:INFO:   category_encoders: 2.7.0
2025-10-31 00:23:43,516:INFO:            lightgbm: 4.6.0
2025-10-31 00:23:43,516:INFO:               numba: 0.62.1
2025-10-31 00:23:43,516:INFO:            requests: 2.32.5
2025-10-31 00:23:43,516:INFO:          matplotlib: 3.10.7
2025-10-31 00:23:43,516:INFO:          scikitplot: 0.3.7
2025-10-31 00:23:43,516:INFO:         yellowbrick: 1.5
2025-10-31 00:23:43,516:INFO:              plotly: 6.3.1
2025-10-31 00:23:43,516:INFO:    plotly-resampler: Not installed
2025-10-31 00:23:43,516:INFO:             kaleido: 0.2.1
2025-10-31 00:23:43,516:INFO:           schemdraw: 0.15
2025-10-31 00:23:43,516:INFO:         statsmodels: 0.14.5
2025-10-31 00:23:43,516:INFO:              sktime: 0.26.0
2025-10-31 00:23:43,516:INFO:               tbats: 1.1.3
2025-10-31 00:23:43,516:INFO:            pmdarima: 2.0.4
2025-10-31 00:23:43,516:INFO:              psutil: 7.1.2
2025-10-31 00:23:43,516:INFO:          markupsafe: 3.0.3
2025-10-31 00:23:43,516:INFO:             pickle5: Not installed
2025-10-31 00:23:43,516:INFO:         cloudpickle: 3.1.1
2025-10-31 00:23:43,516:INFO:         deprecation: 2.1.0
2025-10-31 00:23:43,516:INFO:              xxhash: 3.6.0
2025-10-31 00:23:43,516:INFO:           wurlitzer: 3.1.1
2025-10-31 00:23:43,516:INFO:PyCaret optional dependencies:
2025-10-31 00:23:43,673:INFO:                shap: Not installed
2025-10-31 00:23:43,673:INFO:           interpret: Not installed
2025-10-31 00:23:43,673:INFO:                umap: 0.5.9.post2
2025-10-31 00:23:43,673:INFO:     ydata_profiling: Not installed
2025-10-31 00:23:43,673:INFO:  explainerdashboard: Not installed
2025-10-31 00:23:43,673:INFO:             autoviz: Not installed
2025-10-31 00:23:43,673:INFO:           fairlearn: Not installed
2025-10-31 00:23:43,673:INFO:          deepchecks: Not installed
2025-10-31 00:23:43,673:INFO:             xgboost: Not installed
2025-10-31 00:23:43,673:INFO:            catboost: Not installed
2025-10-31 00:23:43,673:INFO:              kmodes: Not installed
2025-10-31 00:23:43,673:INFO:             mlxtend: Not installed
2025-10-31 00:23:43,673:INFO:       statsforecast: Not installed
2025-10-31 00:23:43,673:INFO:        tune_sklearn: Not installed
2025-10-31 00:23:43,673:INFO:                 ray: Not installed
2025-10-31 00:23:43,673:INFO:            hyperopt: Not installed
2025-10-31 00:23:43,673:INFO:              optuna: Not installed
2025-10-31 00:23:43,673:INFO:               skopt: Not installed
2025-10-31 00:23:43,673:INFO:              mlflow: 3.5.1
2025-10-31 00:23:43,673:INFO:              gradio: Not installed
2025-10-31 00:23:43,673:INFO:             fastapi: 0.120.2
2025-10-31 00:23:43,673:INFO:             uvicorn: 0.38.0
2025-10-31 00:23:43,673:INFO:              m2cgen: Not installed
2025-10-31 00:23:43,673:INFO:           evidently: Not installed
2025-10-31 00:23:43,673:INFO:               fugue: Not installed
2025-10-31 00:23:43,673:INFO:           streamlit: Not installed
2025-10-31 00:23:43,673:INFO:             prophet: Not installed
2025-10-31 00:23:43,673:INFO:None
2025-10-31 00:23:43,673:INFO:Set up data.
2025-10-31 00:23:44,040:INFO:Set up folding strategy.
2025-10-31 00:23:44,040:INFO:Set up train/test split.
2025-10-31 00:23:44,294:INFO:Set up index.
2025-10-31 00:23:44,303:INFO:Assigning column types.
2025-10-31 00:23:44,630:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 00:23:44,642:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:23:44,644:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:23:44,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:23:44,705:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:23:44,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,714:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 00:23:44,727:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:23:44,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,749:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:23:44,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,757:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 00:23:44,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:44,801:INFO:Preparing preprocessing pipeline...
2025-10-31 00:23:44,841:INFO:Set up label encoding.
2025-10-31 00:23:44,841:INFO:Set up simple imputation.
2025-10-31 00:23:44,841:INFO:Set up feature normalization.
2025-10-31 00:23:45,598:INFO:Finished creating preprocessing pipeline.
2025-10-31 00:23:45,603:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfid...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-31 00:23:45,603:INFO:Creating final display dataframe.
2025-10-31 00:23:47,043:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8               Ignore features   
9              Numeric features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14                    Normalize   
15             Normalize method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                       (15076, 2002)  
5                                       (15076, 2001)  
6                                       (10553, 2001)  
7                                        (4523, 2001)  
8                                                   1  
9                                                2000  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                               True  
15                                             zscore  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               0c76  
2025-10-31 00:23:47,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:47,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:47,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:47,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:23:47,091:INFO:setup() successfully completed in 3.58s...............
2025-10-31 00:23:47,095:INFO:Initializing compare_models()
2025-10-31 00:23:47,095:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, include=None, fold=3, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, 'include': None, 'exclude': ['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'], 'fold': 3, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'])
2025-10-31 00:23:47,095:INFO:Checking exceptions
2025-10-31 00:23:47,373:INFO:Preparing display monitor
2025-10-31 00:23:47,412:INFO:Initializing Logistic Regression
2025-10-31 00:23:47,412:INFO:Total runtime is 3.0001004536946616e-06 minutes
2025-10-31 00:23:47,413:INFO:SubProcess create_model() called ==================================
2025-10-31 00:23:47,414:INFO:Initializing create_model()
2025-10-31 00:23:47,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=lr, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:23:47,414:INFO:Checking exceptions
2025-10-31 00:23:47,414:INFO:Importing libraries
2025-10-31 00:23:47,414:INFO:Copying training dataset
2025-10-31 00:23:47,760:INFO:Defining folds
2025-10-31 00:23:47,760:INFO:Declaring metric variables
2025-10-31 00:23:47,761:INFO:Importing untrained model
2025-10-31 00:23:47,762:INFO:Logistic Regression Imported successfully
2025-10-31 00:23:47,765:INFO:Starting cross validation
2025-10-31 00:23:47,768:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:23:52,552:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:23:52,558:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:52,568:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:52,579:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:53,074:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:23:53,079:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:53,089:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:53,099:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:53,260:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:23:53,264:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:53,273:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:53,282:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:53,311:INFO:Calculating mean and std
2025-10-31 00:23:53,312:INFO:Creating metrics dataframe
2025-10-31 00:23:53,315:INFO:Uploading results into container
2025-10-31 00:23:53,315:INFO:Uploading model into container now
2025-10-31 00:23:53,316:INFO:_master_model_container: 1
2025-10-31 00:23:53,316:INFO:_display_container: 2
2025-10-31 00:23:53,316:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 00:23:53,316:INFO:create_model() successfully completed......................................
2025-10-31 00:23:53,426:INFO:SubProcess create_model() end ==================================
2025-10-31 00:23:53,426:INFO:Creating metrics dataframe
2025-10-31 00:23:53,428:INFO:Initializing Naive Bayes
2025-10-31 00:23:53,428:INFO:Total runtime is 0.10027111371358235 minutes
2025-10-31 00:23:53,430:INFO:SubProcess create_model() called ==================================
2025-10-31 00:23:53,430:INFO:Initializing create_model()
2025-10-31 00:23:53,430:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=nb, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:23:53,430:INFO:Checking exceptions
2025-10-31 00:23:53,430:INFO:Importing libraries
2025-10-31 00:23:53,430:INFO:Copying training dataset
2025-10-31 00:23:53,793:INFO:Defining folds
2025-10-31 00:23:53,794:INFO:Declaring metric variables
2025-10-31 00:23:53,795:INFO:Importing untrained model
2025-10-31 00:23:53,796:INFO:Naive Bayes Imported successfully
2025-10-31 00:23:53,798:INFO:Starting cross validation
2025-10-31 00:23:53,802:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:23:55,627:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:55,639:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:55,649:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:56,460:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:56,470:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:56,480:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:56,569:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:56,578:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:56,588:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:23:56,612:INFO:Calculating mean and std
2025-10-31 00:23:56,613:INFO:Creating metrics dataframe
2025-10-31 00:23:56,614:INFO:Uploading results into container
2025-10-31 00:23:56,614:INFO:Uploading model into container now
2025-10-31 00:23:56,614:INFO:_master_model_container: 2
2025-10-31 00:23:56,615:INFO:_display_container: 2
2025-10-31 00:23:56,615:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-10-31 00:23:56,615:INFO:create_model() successfully completed......................................
2025-10-31 00:23:56,704:INFO:SubProcess create_model() end ==================================
2025-10-31 00:23:56,704:INFO:Creating metrics dataframe
2025-10-31 00:23:56,707:INFO:Initializing SVM - Linear Kernel
2025-10-31 00:23:56,707:INFO:Total runtime is 0.15492103497187296 minutes
2025-10-31 00:23:56,709:INFO:SubProcess create_model() called ==================================
2025-10-31 00:23:56,709:INFO:Initializing create_model()
2025-10-31 00:23:56,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=svm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:23:56,709:INFO:Checking exceptions
2025-10-31 00:23:56,709:INFO:Importing libraries
2025-10-31 00:23:56,709:INFO:Copying training dataset
2025-10-31 00:23:57,069:INFO:Defining folds
2025-10-31 00:23:57,069:INFO:Declaring metric variables
2025-10-31 00:23:57,070:INFO:Importing untrained model
2025-10-31 00:23:57,072:INFO:SVM - Linear Kernel Imported successfully
2025-10-31 00:23:57,074:INFO:Starting cross validation
2025-10-31 00:23:57,077:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:24:10,953:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:24:10,957:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:10,967:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:10,980:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:11,838:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:24:11,843:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:11,853:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:11,863:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:11,977:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:24:11,981:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:11,991:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:12,001:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:12,026:INFO:Calculating mean and std
2025-10-31 00:24:12,027:INFO:Creating metrics dataframe
2025-10-31 00:24:12,027:INFO:Uploading results into container
2025-10-31 00:24:12,028:INFO:Uploading model into container now
2025-10-31 00:24:12,028:INFO:_master_model_container: 3
2025-10-31 00:24:12,028:INFO:_display_container: 2
2025-10-31 00:24:12,028:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-10-31 00:24:12,028:INFO:create_model() successfully completed......................................
2025-10-31 00:24:12,111:INFO:SubProcess create_model() end ==================================
2025-10-31 00:24:12,111:INFO:Creating metrics dataframe
2025-10-31 00:24:12,114:INFO:Initializing Ridge Classifier
2025-10-31 00:24:12,114:INFO:Total runtime is 0.4117047309875488 minutes
2025-10-31 00:24:12,115:INFO:SubProcess create_model() called ==================================
2025-10-31 00:24:12,116:INFO:Initializing create_model()
2025-10-31 00:24:12,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=ridge, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:24:12,116:INFO:Checking exceptions
2025-10-31 00:24:12,116:INFO:Importing libraries
2025-10-31 00:24:12,116:INFO:Copying training dataset
2025-10-31 00:24:12,481:INFO:Defining folds
2025-10-31 00:24:12,481:INFO:Declaring metric variables
2025-10-31 00:24:12,482:INFO:Importing untrained model
2025-10-31 00:24:12,484:INFO:Ridge Classifier Imported successfully
2025-10-31 00:24:12,486:INFO:Starting cross validation
2025-10-31 00:24:12,489:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:24:13,459:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:24:13,463:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:13,473:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:13,482:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:13,699:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:24:13,703:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:13,713:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:13,723:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:15,104:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:24:15,108:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:15,118:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:15,127:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:15,145:INFO:Calculating mean and std
2025-10-31 00:24:15,145:INFO:Creating metrics dataframe
2025-10-31 00:24:15,146:INFO:Uploading results into container
2025-10-31 00:24:15,146:INFO:Uploading model into container now
2025-10-31 00:24:15,147:INFO:_master_model_container: 4
2025-10-31 00:24:15,147:INFO:_display_container: 2
2025-10-31 00:24:15,147:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-10-31 00:24:15,147:INFO:create_model() successfully completed......................................
2025-10-31 00:24:15,231:INFO:SubProcess create_model() end ==================================
2025-10-31 00:24:15,232:INFO:Creating metrics dataframe
2025-10-31 00:24:15,234:INFO:Initializing Random Forest Classifier
2025-10-31 00:24:15,234:INFO:Total runtime is 0.46370583375295 minutes
2025-10-31 00:24:15,238:INFO:SubProcess create_model() called ==================================
2025-10-31 00:24:15,238:INFO:Initializing create_model()
2025-10-31 00:24:15,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=rf, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:24:15,239:INFO:Checking exceptions
2025-10-31 00:24:15,239:INFO:Importing libraries
2025-10-31 00:24:15,239:INFO:Copying training dataset
2025-10-31 00:24:15,599:INFO:Defining folds
2025-10-31 00:24:15,600:INFO:Declaring metric variables
2025-10-31 00:24:15,601:INFO:Importing untrained model
2025-10-31 00:24:15,603:INFO:Random Forest Classifier Imported successfully
2025-10-31 00:24:15,605:INFO:Starting cross validation
2025-10-31 00:24:15,608:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:24:19,623:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:19,634:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:19,652:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:19,873:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:19,884:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:19,895:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:20,102:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:20,112:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:20,122:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:24:20,142:INFO:Calculating mean and std
2025-10-31 00:24:20,143:INFO:Creating metrics dataframe
2025-10-31 00:24:20,145:INFO:Uploading results into container
2025-10-31 00:24:20,145:INFO:Uploading model into container now
2025-10-31 00:24:20,145:INFO:_master_model_container: 5
2025-10-31 00:24:20,146:INFO:_display_container: 2
2025-10-31 00:24:20,146:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-10-31 00:24:20,146:INFO:create_model() successfully completed......................................
2025-10-31 00:24:20,246:INFO:SubProcess create_model() end ==================================
2025-10-31 00:24:20,246:INFO:Creating metrics dataframe
2025-10-31 00:24:20,249:INFO:Initializing Gradient Boosting Classifier
2025-10-31 00:24:20,249:INFO:Total runtime is 0.5472790002822876 minutes
2025-10-31 00:24:20,250:INFO:SubProcess create_model() called ==================================
2025-10-31 00:24:20,250:INFO:Initializing create_model()
2025-10-31 00:24:20,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=gbc, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:24:20,250:INFO:Checking exceptions
2025-10-31 00:24:20,251:INFO:Importing libraries
2025-10-31 00:24:20,251:INFO:Copying training dataset
2025-10-31 00:24:20,703:INFO:Defining folds
2025-10-31 00:24:20,703:INFO:Declaring metric variables
2025-10-31 00:24:20,706:INFO:Importing untrained model
2025-10-31 00:24:20,708:INFO:Gradient Boosting Classifier Imported successfully
2025-10-31 00:24:20,710:INFO:Starting cross validation
2025-10-31 00:24:20,714:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:27:24,209:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:27:24,215:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:24,225:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:24,236:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:24,627:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:27:24,631:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:24,641:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:24,651:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:27,322:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:27:27,326:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:27,336:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:27,345:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:27,367:INFO:Calculating mean and std
2025-10-31 00:27:27,368:INFO:Creating metrics dataframe
2025-10-31 00:27:27,370:INFO:Uploading results into container
2025-10-31 00:27:27,370:INFO:Uploading model into container now
2025-10-31 00:27:27,370:INFO:_master_model_container: 6
2025-10-31 00:27:27,371:INFO:_display_container: 2
2025-10-31 00:27:27,371:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-10-31 00:27:27,371:INFO:create_model() successfully completed......................................
2025-10-31 00:27:27,497:INFO:SubProcess create_model() end ==================================
2025-10-31 00:27:27,497:INFO:Creating metrics dataframe
2025-10-31 00:27:27,500:INFO:Initializing Linear Discriminant Analysis
2025-10-31 00:27:27,500:INFO:Total runtime is 3.668132201830546 minutes
2025-10-31 00:27:27,501:INFO:SubProcess create_model() called ==================================
2025-10-31 00:27:27,501:INFO:Initializing create_model()
2025-10-31 00:27:27,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=lda, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:27:27,501:INFO:Checking exceptions
2025-10-31 00:27:27,501:INFO:Importing libraries
2025-10-31 00:27:27,501:INFO:Copying training dataset
2025-10-31 00:27:27,905:INFO:Defining folds
2025-10-31 00:27:27,905:INFO:Declaring metric variables
2025-10-31 00:27:27,907:INFO:Importing untrained model
2025-10-31 00:27:27,908:INFO:Linear Discriminant Analysis Imported successfully
2025-10-31 00:27:27,911:INFO:Starting cross validation
2025-10-31 00:27:27,915:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:27:32,138:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:27:32,143:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,153:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,163:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,271:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:27:32,275:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,285:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,294:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,494:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:27:32,498:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,507:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,517:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:32,542:INFO:Calculating mean and std
2025-10-31 00:27:32,543:INFO:Creating metrics dataframe
2025-10-31 00:27:32,545:INFO:Uploading results into container
2025-10-31 00:27:32,545:INFO:Uploading model into container now
2025-10-31 00:27:32,545:INFO:_master_model_container: 7
2025-10-31 00:27:32,545:INFO:_display_container: 2
2025-10-31 00:27:32,546:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-10-31 00:27:32,546:INFO:create_model() successfully completed......................................
2025-10-31 00:27:32,642:INFO:SubProcess create_model() end ==================================
2025-10-31 00:27:32,642:INFO:Creating metrics dataframe
2025-10-31 00:27:32,646:INFO:Initializing Extra Trees Classifier
2025-10-31 00:27:32,646:INFO:Total runtime is 3.753896733125051 minutes
2025-10-31 00:27:32,647:INFO:SubProcess create_model() called ==================================
2025-10-31 00:27:32,648:INFO:Initializing create_model()
2025-10-31 00:27:32,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=et, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:27:32,648:INFO:Checking exceptions
2025-10-31 00:27:32,648:INFO:Importing libraries
2025-10-31 00:27:32,648:INFO:Copying training dataset
2025-10-31 00:27:33,051:INFO:Defining folds
2025-10-31 00:27:33,052:INFO:Declaring metric variables
2025-10-31 00:27:33,054:INFO:Importing untrained model
2025-10-31 00:27:33,055:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:27:33,057:INFO:Starting cross validation
2025-10-31 00:27:33,061:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:27:37,863:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:37,882:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:37,900:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:38,153:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:38,163:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:38,173:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:38,277:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:38,287:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:38,297:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:27:38,319:INFO:Calculating mean and std
2025-10-31 00:27:38,320:INFO:Creating metrics dataframe
2025-10-31 00:27:38,322:INFO:Uploading results into container
2025-10-31 00:27:38,322:INFO:Uploading model into container now
2025-10-31 00:27:38,322:INFO:_master_model_container: 8
2025-10-31 00:27:38,322:INFO:_display_container: 2
2025-10-31 00:27:38,323:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:27:38,323:INFO:create_model() successfully completed......................................
2025-10-31 00:27:38,410:INFO:SubProcess create_model() end ==================================
2025-10-31 00:27:38,410:INFO:Creating metrics dataframe
2025-10-31 00:27:38,414:INFO:Initializing Light Gradient Boosting Machine
2025-10-31 00:27:38,414:INFO:Total runtime is 3.850029500325521 minutes
2025-10-31 00:27:38,415:INFO:SubProcess create_model() called ==================================
2025-10-31 00:27:38,415:INFO:Initializing create_model()
2025-10-31 00:27:38,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x156a05840>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:27:38,415:INFO:Checking exceptions
2025-10-31 00:27:38,415:INFO:Importing libraries
2025-10-31 00:27:38,415:INFO:Copying training dataset
2025-10-31 00:27:38,801:INFO:Defining folds
2025-10-31 00:27:38,801:INFO:Declaring metric variables
2025-10-31 00:27:38,802:INFO:Importing untrained model
2025-10-31 00:27:38,805:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-31 00:27:38,807:INFO:Starting cross validation
2025-10-31 00:27:38,811:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:28:12,085:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,096:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,106:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,602:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,615:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,625:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,698:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,708:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,718:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:12,737:INFO:Calculating mean and std
2025-10-31 00:28:12,740:INFO:Creating metrics dataframe
2025-10-31 00:28:12,744:INFO:Uploading results into container
2025-10-31 00:28:12,745:INFO:Uploading model into container now
2025-10-31 00:28:12,746:INFO:_master_model_container: 9
2025-10-31 00:28:12,746:INFO:_display_container: 2
2025-10-31 00:28:12,746:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-10-31 00:28:12,747:INFO:create_model() successfully completed......................................
2025-10-31 00:28:12,898:INFO:SubProcess create_model() end ==================================
2025-10-31 00:28:12,898:INFO:Creating metrics dataframe
2025-10-31 00:28:12,905:INFO:Initializing create_model()
2025-10-31 00:28:12,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:28:12,905:INFO:Checking exceptions
2025-10-31 00:28:12,906:INFO:Importing libraries
2025-10-31 00:28:12,906:INFO:Copying training dataset
2025-10-31 00:28:13,318:INFO:Defining folds
2025-10-31 00:28:13,318:INFO:Declaring metric variables
2025-10-31 00:28:13,318:INFO:Importing untrained model
2025-10-31 00:28:13,318:INFO:Declaring custom model
2025-10-31 00:28:13,318:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:28:13,322:INFO:Cross validation set to False
2025-10-31 00:28:13,322:INFO:Fitting Model
2025-10-31 00:28:15,978:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:28:15,978:INFO:create_model() successfully completed......................................
2025-10-31 00:28:16,064:INFO:_master_model_container: 9
2025-10-31 00:28:16,064:INFO:_display_container: 2
2025-10-31 00:28:16,065:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:28:16,065:INFO:compare_models() successfully completed......................................
2025-10-31 00:28:16,073:INFO:Initializing tune_model()
2025-10-31 00:28:16,073:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=3, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>)
2025-10-31 00:28:16,073:INFO:Checking exceptions
2025-10-31 00:28:16,232:INFO:Copying training dataset
2025-10-31 00:28:16,466:INFO:Checking base model
2025-10-31 00:28:16,466:INFO:Base model : Extra Trees Classifier
2025-10-31 00:28:16,467:INFO:Declaring metric variables
2025-10-31 00:28:16,468:INFO:Defining Hyperparameters
2025-10-31 00:28:16,546:INFO:Tuning with n_jobs=-1
2025-10-31 00:28:16,546:INFO:Initializing RandomizedSearchCV
2025-10-31 00:28:39,445:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2025-10-31 00:28:39,447:INFO:Hyperparameter search completed
2025-10-31 00:28:39,447:INFO:SubProcess create_model() called ==================================
2025-10-31 00:28:39,448:INFO:Initializing create_model()
2025-10-31 00:28:39,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15fc3cd60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2025-10-31 00:28:39,448:INFO:Checking exceptions
2025-10-31 00:28:39,449:INFO:Importing libraries
2025-10-31 00:28:39,449:INFO:Copying training dataset
2025-10-31 00:28:39,863:INFO:Defining folds
2025-10-31 00:28:39,863:INFO:Declaring metric variables
2025-10-31 00:28:39,865:INFO:Importing untrained model
2025-10-31 00:28:39,866:INFO:Declaring custom model
2025-10-31 00:28:39,868:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:28:39,871:INFO:Starting cross validation
2025-10-31 00:28:39,875:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:28:40,987:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:40,998:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:41,008:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:41,172:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:41,182:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:41,192:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:41,315:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:41,324:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:41,333:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:41,358:INFO:Calculating mean and std
2025-10-31 00:28:41,358:INFO:Creating metrics dataframe
2025-10-31 00:28:41,361:INFO:Finalizing model
2025-10-31 00:28:41,906:INFO:Uploading results into container
2025-10-31 00:28:41,907:INFO:Uploading model into container now
2025-10-31 00:28:41,908:INFO:_master_model_container: 10
2025-10-31 00:28:41,908:INFO:_display_container: 3
2025-10-31 00:28:41,908:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-10-31 00:28:41,908:INFO:create_model() successfully completed......................................
2025-10-31 00:28:42,026:INFO:SubProcess create_model() end ==================================
2025-10-31 00:28:42,026:INFO:choose_better activated
2025-10-31 00:28:42,027:INFO:SubProcess create_model() called ==================================
2025-10-31 00:28:42,027:INFO:Initializing create_model()
2025-10-31 00:28:42,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:28:42,027:INFO:Checking exceptions
2025-10-31 00:28:42,028:INFO:Importing libraries
2025-10-31 00:28:42,028:INFO:Copying training dataset
2025-10-31 00:28:42,380:INFO:Defining folds
2025-10-31 00:28:42,380:INFO:Declaring metric variables
2025-10-31 00:28:42,380:INFO:Importing untrained model
2025-10-31 00:28:42,380:INFO:Declaring custom model
2025-10-31 00:28:42,381:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:28:42,381:INFO:Starting cross validation
2025-10-31 00:28:42,384:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:28:46,812:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:46,849:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:46,866:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:47,374:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:47,385:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:47,395:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:47,544:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:47,554:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:47,564:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:28:47,593:INFO:Calculating mean and std
2025-10-31 00:28:47,594:INFO:Creating metrics dataframe
2025-10-31 00:28:47,595:INFO:Finalizing model
2025-10-31 00:28:50,247:INFO:Uploading results into container
2025-10-31 00:28:50,248:INFO:Uploading model into container now
2025-10-31 00:28:50,248:INFO:_master_model_container: 11
2025-10-31 00:28:50,248:INFO:_display_container: 4
2025-10-31 00:28:50,248:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:28:50,248:INFO:create_model() successfully completed......................................
2025-10-31 00:28:50,334:INFO:SubProcess create_model() end ==================================
2025-10-31 00:28:50,334:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for Accuracy is 0.5868
2025-10-31 00:28:50,334:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.5101
2025-10-31 00:28:50,334:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2025-10-31 00:28:50,334:INFO:choose_better completed
2025-10-31 00:28:50,334:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-10-31 00:28:50,338:INFO:_master_model_container: 11
2025-10-31 00:28:50,338:INFO:_display_container: 3
2025-10-31 00:28:50,338:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:28:50,338:INFO:tune_model() successfully completed......................................
2025-10-31 00:28:50,420:INFO:Initializing finalize_model()
2025-10-31 00:28:50,421:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-10-31 00:28:50,421:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:28:50,632:INFO:Initializing create_model()
2025-10-31 00:28:50,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:28:50,633:INFO:Checking exceptions
2025-10-31 00:28:50,633:INFO:Importing libraries
2025-10-31 00:28:50,633:INFO:Copying training dataset
2025-10-31 00:28:50,684:INFO:Defining folds
2025-10-31 00:28:50,684:INFO:Declaring metric variables
2025-10-31 00:28:50,684:INFO:Importing untrained model
2025-10-31 00:28:50,684:INFO:Declaring custom model
2025-10-31 00:28:50,684:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:28:50,687:INFO:Cross validation set to False
2025-10-31 00:28:50,687:INFO:Fitting Model
2025-10-31 00:28:55,046:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 00:28:55,047:INFO:create_model() successfully completed......................................
2025-10-31 00:28:55,124:INFO:_master_model_container: 11
2025-10-31 00:28:55,124:INFO:_display_container: 3
2025-10-31 00:28:55,130:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 00:28:55,130:INFO:finalize_model() successfully completed......................................
2025-10-31 00:28:55,215:INFO:Initializing predict_model()
2025-10-31 00:28:55,215:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b4abfd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f800ca0>)
2025-10-31 00:28:55,215:INFO:Checking exceptions
2025-10-31 00:28:55,215:INFO:Preloading libraries
2025-10-31 00:28:55,217:INFO:Set up data.
2025-10-31 00:28:55,385:INFO:Set up index.
2025-10-31 00:38:15,136:INFO:PyCaret ClassificationExperiment
2025-10-31 00:38:15,136:INFO:Logging name: clf-default-name
2025-10-31 00:38:15,136:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 00:38:15,136:INFO:version 3.3.2
2025-10-31 00:38:15,136:INFO:Initializing setup()
2025-10-31 00:38:15,136:INFO:self.USI: d75c
2025-10-31 00:38:15,136:INFO:self._variable_keys: {'idx', 'target_param', 'y_test', 'log_plots_param', 'n_jobs_param', '_ml_usecase', '_available_plots', 'X', 'data', 'seed', 'logging_param', 'pipeline', 'exp_name_log', 'gpu_n_jobs_param', 'is_multiclass', 'y_train', 'memory', 'fold_shuffle_param', 'X_train', 'exp_id', 'fix_imbalance', 'X_test', 'fold_groups_param', 'y', 'USI', 'fold_generator', 'gpu_param', 'html_param'}
2025-10-31 00:38:15,136:INFO:Checking environment
2025-10-31 00:38:15,136:INFO:python_version: 3.10.15
2025-10-31 00:38:15,136:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 00:38:15,136:INFO:machine: arm64
2025-10-31 00:38:15,136:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:38:15,136:INFO:Memory: svmem(total=17179869184, available=5664342016, percent=67.0, used=7423918080, free=59604992, active=5620842496, inactive=5604032512, wired=1803075584)
2025-10-31 00:38:15,136:INFO:Physical Core: 10
2025-10-31 00:38:15,136:INFO:Logical Core: 10
2025-10-31 00:38:15,136:INFO:Checking libraries
2025-10-31 00:38:15,136:INFO:System:
2025-10-31 00:38:15,136:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 00:38:15,136:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 00:38:15,136:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:38:15,136:INFO:PyCaret required dependencies:
2025-10-31 00:38:15,136:INFO:                 pip: 25.2
2025-10-31 00:38:15,136:INFO:          setuptools: 80.9.0
2025-10-31 00:38:15,136:INFO:             pycaret: 3.3.2
2025-10-31 00:38:15,136:INFO:             IPython: 8.37.0
2025-10-31 00:38:15,136:INFO:          ipywidgets: 8.1.7
2025-10-31 00:38:15,136:INFO:                tqdm: 4.67.1
2025-10-31 00:38:15,136:INFO:               numpy: 1.26.4
2025-10-31 00:38:15,136:INFO:              pandas: 2.1.4
2025-10-31 00:38:15,136:INFO:              jinja2: 3.1.6
2025-10-31 00:38:15,136:INFO:               scipy: 1.11.4
2025-10-31 00:38:15,136:INFO:              joblib: 1.3.2
2025-10-31 00:38:15,136:INFO:             sklearn: 1.4.2
2025-10-31 00:38:15,136:INFO:                pyod: 2.0.5
2025-10-31 00:38:15,136:INFO:            imblearn: 0.14.0
2025-10-31 00:38:15,136:INFO:   category_encoders: 2.7.0
2025-10-31 00:38:15,136:INFO:            lightgbm: 4.6.0
2025-10-31 00:38:15,136:INFO:               numba: 0.62.1
2025-10-31 00:38:15,136:INFO:            requests: 2.32.5
2025-10-31 00:38:15,136:INFO:          matplotlib: 3.10.7
2025-10-31 00:38:15,136:INFO:          scikitplot: 0.3.7
2025-10-31 00:38:15,136:INFO:         yellowbrick: 1.5
2025-10-31 00:38:15,136:INFO:              plotly: 6.3.1
2025-10-31 00:38:15,136:INFO:    plotly-resampler: Not installed
2025-10-31 00:38:15,136:INFO:             kaleido: 0.2.1
2025-10-31 00:38:15,136:INFO:           schemdraw: 0.15
2025-10-31 00:38:15,136:INFO:         statsmodels: 0.14.5
2025-10-31 00:38:15,136:INFO:              sktime: 0.26.0
2025-10-31 00:38:15,136:INFO:               tbats: 1.1.3
2025-10-31 00:38:15,136:INFO:            pmdarima: 2.0.4
2025-10-31 00:38:15,136:INFO:              psutil: 7.1.2
2025-10-31 00:38:15,136:INFO:          markupsafe: 3.0.3
2025-10-31 00:38:15,136:INFO:             pickle5: Not installed
2025-10-31 00:38:15,136:INFO:         cloudpickle: 3.1.1
2025-10-31 00:38:15,136:INFO:         deprecation: 2.1.0
2025-10-31 00:38:15,136:INFO:              xxhash: 3.6.0
2025-10-31 00:38:15,136:INFO:           wurlitzer: 3.1.1
2025-10-31 00:38:15,136:INFO:PyCaret optional dependencies:
2025-10-31 00:38:15,136:INFO:                shap: Not installed
2025-10-31 00:38:15,136:INFO:           interpret: Not installed
2025-10-31 00:38:15,136:INFO:                umap: 0.5.9.post2
2025-10-31 00:38:15,136:INFO:     ydata_profiling: Not installed
2025-10-31 00:38:15,136:INFO:  explainerdashboard: Not installed
2025-10-31 00:38:15,136:INFO:             autoviz: Not installed
2025-10-31 00:38:15,137:INFO:           fairlearn: Not installed
2025-10-31 00:38:15,137:INFO:          deepchecks: Not installed
2025-10-31 00:38:15,137:INFO:             xgboost: Not installed
2025-10-31 00:38:15,137:INFO:            catboost: Not installed
2025-10-31 00:38:15,137:INFO:              kmodes: Not installed
2025-10-31 00:38:15,137:INFO:             mlxtend: Not installed
2025-10-31 00:38:15,137:INFO:       statsforecast: Not installed
2025-10-31 00:38:15,137:INFO:        tune_sklearn: Not installed
2025-10-31 00:38:15,137:INFO:                 ray: Not installed
2025-10-31 00:38:15,137:INFO:            hyperopt: Not installed
2025-10-31 00:38:15,137:INFO:              optuna: Not installed
2025-10-31 00:38:15,137:INFO:               skopt: Not installed
2025-10-31 00:38:15,137:INFO:              mlflow: 3.5.1
2025-10-31 00:38:15,137:INFO:              gradio: Not installed
2025-10-31 00:38:15,137:INFO:             fastapi: 0.120.2
2025-10-31 00:38:15,137:INFO:             uvicorn: 0.38.0
2025-10-31 00:38:15,137:INFO:              m2cgen: Not installed
2025-10-31 00:38:15,137:INFO:           evidently: Not installed
2025-10-31 00:38:15,137:INFO:               fugue: Not installed
2025-10-31 00:38:15,137:INFO:           streamlit: Not installed
2025-10-31 00:38:15,137:INFO:             prophet: Not installed
2025-10-31 00:38:15,137:INFO:None
2025-10-31 00:38:15,137:INFO:Set up data.
2025-10-31 00:38:15,472:INFO:Set up folding strategy.
2025-10-31 00:38:15,472:INFO:Set up train/test split.
2025-10-31 00:38:15,844:INFO:Set up index.
2025-10-31 00:38:15,848:INFO:Assigning column types.
2025-10-31 00:38:16,095:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 00:38:16,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:38:16,108:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:38:16,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,130:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:38:16,130:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:38:16,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,139:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 00:38:16,152:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:38:16,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,175:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:38:16,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,184:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 00:38:16,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:16,229:INFO:Preparing preprocessing pipeline...
2025-10-31 00:38:16,266:INFO:Set up label encoding.
2025-10-31 00:38:16,266:INFO:Set up simple imputation.
2025-10-31 00:38:16,266:INFO:Set up feature normalization.
2025-10-31 00:38:17,108:INFO:Finished creating preprocessing pipeline.
2025-10-31 00:38:17,113:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfid...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-31 00:38:17,113:INFO:Creating final display dataframe.
2025-10-31 00:38:18,598:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8               Ignore features   
9              Numeric features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14                    Normalize   
15             Normalize method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                       (15076, 2002)  
5                                       (15076, 2001)  
6                                       (10553, 2001)  
7                                        (4523, 2001)  
8                                                   1  
9                                                2000  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                               True  
15                                             zscore  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               d75c  
2025-10-31 00:38:18,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:18,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:18,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:18,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:38:18,644:INFO:setup() successfully completed in 3.51s...............
2025-10-31 00:38:18,661:INFO:Initializing compare_models()
2025-10-31 00:38:18,661:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, include=None, fold=3, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, 'include': None, 'exclude': ['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'], 'fold': 3, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'])
2025-10-31 00:38:18,661:INFO:Checking exceptions
2025-10-31 00:38:18,851:INFO:Preparing display monitor
2025-10-31 00:38:18,859:INFO:Initializing Logistic Regression
2025-10-31 00:38:18,859:INFO:Total runtime is 2.7338663736979167e-06 minutes
2025-10-31 00:38:18,860:INFO:SubProcess create_model() called ==================================
2025-10-31 00:38:18,861:INFO:Initializing create_model()
2025-10-31 00:38:18,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=lr, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:38:18,861:INFO:Checking exceptions
2025-10-31 00:38:18,861:INFO:Importing libraries
2025-10-31 00:38:18,861:INFO:Copying training dataset
2025-10-31 00:38:19,253:INFO:Defining folds
2025-10-31 00:38:19,253:INFO:Declaring metric variables
2025-10-31 00:38:19,254:INFO:Importing untrained model
2025-10-31 00:38:19,255:INFO:Logistic Regression Imported successfully
2025-10-31 00:38:19,258:INFO:Starting cross validation
2025-10-31 00:38:19,261:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:38:23,111:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:23,117:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:23,127:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:23,137:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:24,478:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:24,484:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:24,494:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:24,504:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:24,978:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:24,982:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:24,992:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:25,000:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:25,024:INFO:Calculating mean and std
2025-10-31 00:38:25,025:INFO:Creating metrics dataframe
2025-10-31 00:38:25,026:INFO:Uploading results into container
2025-10-31 00:38:25,027:INFO:Uploading model into container now
2025-10-31 00:38:25,027:INFO:_master_model_container: 1
2025-10-31 00:38:25,027:INFO:_display_container: 2
2025-10-31 00:38:25,027:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 00:38:25,027:INFO:create_model() successfully completed......................................
2025-10-31 00:38:25,118:INFO:SubProcess create_model() end ==================================
2025-10-31 00:38:25,118:INFO:Creating metrics dataframe
2025-10-31 00:38:25,121:INFO:Initializing Naive Bayes
2025-10-31 00:38:25,121:INFO:Total runtime is 0.10436101754506429 minutes
2025-10-31 00:38:25,122:INFO:SubProcess create_model() called ==================================
2025-10-31 00:38:25,122:INFO:Initializing create_model()
2025-10-31 00:38:25,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=nb, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:38:25,122:INFO:Checking exceptions
2025-10-31 00:38:25,123:INFO:Importing libraries
2025-10-31 00:38:25,123:INFO:Copying training dataset
2025-10-31 00:38:25,458:INFO:Defining folds
2025-10-31 00:38:25,458:INFO:Declaring metric variables
2025-10-31 00:38:25,460:INFO:Importing untrained model
2025-10-31 00:38:25,461:INFO:Naive Bayes Imported successfully
2025-10-31 00:38:25,463:INFO:Starting cross validation
2025-10-31 00:38:25,467:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:38:28,427:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,439:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,450:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,550:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,560:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,570:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,738:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,747:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,757:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:28,783:INFO:Calculating mean and std
2025-10-31 00:38:28,785:INFO:Creating metrics dataframe
2025-10-31 00:38:28,787:INFO:Uploading results into container
2025-10-31 00:38:28,787:INFO:Uploading model into container now
2025-10-31 00:38:28,788:INFO:_master_model_container: 2
2025-10-31 00:38:28,788:INFO:_display_container: 2
2025-10-31 00:38:28,788:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-10-31 00:38:28,788:INFO:create_model() successfully completed......................................
2025-10-31 00:38:28,889:INFO:SubProcess create_model() end ==================================
2025-10-31 00:38:28,889:INFO:Creating metrics dataframe
2025-10-31 00:38:28,892:INFO:Initializing SVM - Linear Kernel
2025-10-31 00:38:28,892:INFO:Total runtime is 0.16721753676732382 minutes
2025-10-31 00:38:28,893:INFO:SubProcess create_model() called ==================================
2025-10-31 00:38:28,894:INFO:Initializing create_model()
2025-10-31 00:38:28,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=svm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:38:28,894:INFO:Checking exceptions
2025-10-31 00:38:28,894:INFO:Importing libraries
2025-10-31 00:38:28,894:INFO:Copying training dataset
2025-10-31 00:38:29,245:INFO:Defining folds
2025-10-31 00:38:29,245:INFO:Declaring metric variables
2025-10-31 00:38:29,247:INFO:Importing untrained model
2025-10-31 00:38:29,248:INFO:SVM - Linear Kernel Imported successfully
2025-10-31 00:38:29,251:INFO:Starting cross validation
2025-10-31 00:38:29,254:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:38:42,812:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:42,818:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:42,828:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:42,841:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:42,857:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:42,862:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:42,879:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:42,890:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:44,556:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:44,561:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:44,571:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:44,581:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:44,599:INFO:Calculating mean and std
2025-10-31 00:38:44,600:INFO:Creating metrics dataframe
2025-10-31 00:38:44,601:INFO:Uploading results into container
2025-10-31 00:38:44,601:INFO:Uploading model into container now
2025-10-31 00:38:44,602:INFO:_master_model_container: 3
2025-10-31 00:38:44,602:INFO:_display_container: 2
2025-10-31 00:38:44,602:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-10-31 00:38:44,603:INFO:create_model() successfully completed......................................
2025-10-31 00:38:44,729:INFO:SubProcess create_model() end ==================================
2025-10-31 00:38:44,729:INFO:Creating metrics dataframe
2025-10-31 00:38:44,732:INFO:Initializing Ridge Classifier
2025-10-31 00:38:44,732:INFO:Total runtime is 0.4312252998352051 minutes
2025-10-31 00:38:44,734:INFO:SubProcess create_model() called ==================================
2025-10-31 00:38:44,734:INFO:Initializing create_model()
2025-10-31 00:38:44,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=ridge, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:38:44,734:INFO:Checking exceptions
2025-10-31 00:38:44,734:INFO:Importing libraries
2025-10-31 00:38:44,734:INFO:Copying training dataset
2025-10-31 00:38:45,158:INFO:Defining folds
2025-10-31 00:38:45,159:INFO:Declaring metric variables
2025-10-31 00:38:45,161:INFO:Importing untrained model
2025-10-31 00:38:45,162:INFO:Ridge Classifier Imported successfully
2025-10-31 00:38:45,164:INFO:Starting cross validation
2025-10-31 00:38:45,168:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:38:46,327:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:46,331:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:46,341:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:46,351:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:47,573:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:47,578:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:47,587:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:47,597:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:47,638:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:38:47,642:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:47,653:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:47,663:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:47,693:INFO:Calculating mean and std
2025-10-31 00:38:47,693:INFO:Creating metrics dataframe
2025-10-31 00:38:47,694:INFO:Uploading results into container
2025-10-31 00:38:47,695:INFO:Uploading model into container now
2025-10-31 00:38:47,695:INFO:_master_model_container: 4
2025-10-31 00:38:47,695:INFO:_display_container: 2
2025-10-31 00:38:47,695:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-10-31 00:38:47,695:INFO:create_model() successfully completed......................................
2025-10-31 00:38:47,779:INFO:SubProcess create_model() end ==================================
2025-10-31 00:38:47,779:INFO:Creating metrics dataframe
2025-10-31 00:38:47,782:INFO:Initializing Random Forest Classifier
2025-10-31 00:38:47,782:INFO:Total runtime is 0.4820536494255066 minutes
2025-10-31 00:38:47,784:INFO:SubProcess create_model() called ==================================
2025-10-31 00:38:47,784:INFO:Initializing create_model()
2025-10-31 00:38:47,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=rf, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:38:47,784:INFO:Checking exceptions
2025-10-31 00:38:47,784:INFO:Importing libraries
2025-10-31 00:38:47,784:INFO:Copying training dataset
2025-10-31 00:38:48,140:INFO:Defining folds
2025-10-31 00:38:48,140:INFO:Declaring metric variables
2025-10-31 00:38:48,141:INFO:Importing untrained model
2025-10-31 00:38:48,143:INFO:Random Forest Classifier Imported successfully
2025-10-31 00:38:48,145:INFO:Starting cross validation
2025-10-31 00:38:48,149:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:38:51,466:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:51,477:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:51,515:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:51,919:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:51,931:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:51,942:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:52,198:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:52,208:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:52,218:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:38:52,247:INFO:Calculating mean and std
2025-10-31 00:38:52,248:INFO:Creating metrics dataframe
2025-10-31 00:38:52,249:INFO:Uploading results into container
2025-10-31 00:38:52,249:INFO:Uploading model into container now
2025-10-31 00:38:52,249:INFO:_master_model_container: 5
2025-10-31 00:38:52,249:INFO:_display_container: 2
2025-10-31 00:38:52,250:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-10-31 00:38:52,250:INFO:create_model() successfully completed......................................
2025-10-31 00:38:52,331:INFO:SubProcess create_model() end ==================================
2025-10-31 00:38:52,332:INFO:Creating metrics dataframe
2025-10-31 00:38:52,334:INFO:Initializing Gradient Boosting Classifier
2025-10-31 00:38:52,335:INFO:Total runtime is 0.5579268177350363 minutes
2025-10-31 00:38:52,336:INFO:SubProcess create_model() called ==================================
2025-10-31 00:38:52,336:INFO:Initializing create_model()
2025-10-31 00:38:52,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=gbc, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:38:52,336:INFO:Checking exceptions
2025-10-31 00:38:52,336:INFO:Importing libraries
2025-10-31 00:38:52,336:INFO:Copying training dataset
2025-10-31 00:38:52,688:INFO:Defining folds
2025-10-31 00:38:52,688:INFO:Declaring metric variables
2025-10-31 00:38:52,689:INFO:Importing untrained model
2025-10-31 00:38:52,691:INFO:Gradient Boosting Classifier Imported successfully
2025-10-31 00:38:52,694:INFO:Starting cross validation
2025-10-31 00:38:52,697:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:41:54,474:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:41:54,480:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:54,490:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:54,500:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:55,778:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:41:55,783:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:55,793:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:55,802:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:56,017:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:41:56,022:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:56,031:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:56,041:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:41:56,060:INFO:Calculating mean and std
2025-10-31 00:41:56,061:INFO:Creating metrics dataframe
2025-10-31 00:41:56,062:INFO:Uploading results into container
2025-10-31 00:41:56,062:INFO:Uploading model into container now
2025-10-31 00:41:56,063:INFO:_master_model_container: 6
2025-10-31 00:41:56,063:INFO:_display_container: 2
2025-10-31 00:41:56,063:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-10-31 00:41:56,063:INFO:create_model() successfully completed......................................
2025-10-31 00:41:56,174:INFO:SubProcess create_model() end ==================================
2025-10-31 00:41:56,174:INFO:Creating metrics dataframe
2025-10-31 00:41:56,177:INFO:Initializing Linear Discriminant Analysis
2025-10-31 00:41:56,177:INFO:Total runtime is 3.6219661990801493 minutes
2025-10-31 00:41:56,178:INFO:SubProcess create_model() called ==================================
2025-10-31 00:41:56,178:INFO:Initializing create_model()
2025-10-31 00:41:56,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=lda, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:41:56,178:INFO:Checking exceptions
2025-10-31 00:41:56,179:INFO:Importing libraries
2025-10-31 00:41:56,179:INFO:Copying training dataset
2025-10-31 00:41:56,539:INFO:Defining folds
2025-10-31 00:41:56,540:INFO:Declaring metric variables
2025-10-31 00:41:56,541:INFO:Importing untrained model
2025-10-31 00:41:56,543:INFO:Linear Discriminant Analysis Imported successfully
2025-10-31 00:41:56,545:INFO:Starting cross validation
2025-10-31 00:41:56,549:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:42:00,869:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:42:00,873:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:00,883:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:00,893:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:01,020:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:42:01,024:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:01,034:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:01,044:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:01,206:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:42:01,210:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:01,220:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:01,230:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:01,247:INFO:Calculating mean and std
2025-10-31 00:42:01,248:INFO:Creating metrics dataframe
2025-10-31 00:42:01,249:INFO:Uploading results into container
2025-10-31 00:42:01,250:INFO:Uploading model into container now
2025-10-31 00:42:01,250:INFO:_master_model_container: 7
2025-10-31 00:42:01,250:INFO:_display_container: 2
2025-10-31 00:42:01,250:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-10-31 00:42:01,250:INFO:create_model() successfully completed......................................
2025-10-31 00:42:01,334:INFO:SubProcess create_model() end ==================================
2025-10-31 00:42:01,334:INFO:Creating metrics dataframe
2025-10-31 00:42:01,337:INFO:Initializing Extra Trees Classifier
2025-10-31 00:42:01,337:INFO:Total runtime is 3.7079683661460874 minutes
2025-10-31 00:42:01,338:INFO:SubProcess create_model() called ==================================
2025-10-31 00:42:01,339:INFO:Initializing create_model()
2025-10-31 00:42:01,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=et, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:42:01,339:INFO:Checking exceptions
2025-10-31 00:42:01,339:INFO:Importing libraries
2025-10-31 00:42:01,339:INFO:Copying training dataset
2025-10-31 00:42:01,689:INFO:Defining folds
2025-10-31 00:42:01,689:INFO:Declaring metric variables
2025-10-31 00:42:01,691:INFO:Importing untrained model
2025-10-31 00:42:01,692:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:42:01,694:INFO:Starting cross validation
2025-10-31 00:42:01,698:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:42:06,498:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:06,510:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:06,521:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:06,834:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:06,845:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:06,856:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:07,065:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:07,074:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:07,084:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:07,102:INFO:Calculating mean and std
2025-10-31 00:42:07,103:INFO:Creating metrics dataframe
2025-10-31 00:42:07,104:INFO:Uploading results into container
2025-10-31 00:42:07,104:INFO:Uploading model into container now
2025-10-31 00:42:07,104:INFO:_master_model_container: 8
2025-10-31 00:42:07,104:INFO:_display_container: 2
2025-10-31 00:42:07,104:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:42:07,104:INFO:create_model() successfully completed......................................
2025-10-31 00:42:07,200:INFO:SubProcess create_model() end ==================================
2025-10-31 00:42:07,200:INFO:Creating metrics dataframe
2025-10-31 00:42:07,203:INFO:Initializing Light Gradient Boosting Machine
2025-10-31 00:42:07,203:INFO:Total runtime is 3.805739303429921 minutes
2025-10-31 00:42:07,205:INFO:SubProcess create_model() called ==================================
2025-10-31 00:42:07,205:INFO:Initializing create_model()
2025-10-31 00:42:07,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111a43490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:42:07,205:INFO:Checking exceptions
2025-10-31 00:42:07,205:INFO:Importing libraries
2025-10-31 00:42:07,205:INFO:Copying training dataset
2025-10-31 00:42:07,563:INFO:Defining folds
2025-10-31 00:42:07,563:INFO:Declaring metric variables
2025-10-31 00:42:07,565:INFO:Importing untrained model
2025-10-31 00:42:07,567:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-31 00:42:07,569:INFO:Starting cross validation
2025-10-31 00:42:07,573:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:42:40,882:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:40,893:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:40,904:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:41,583:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:41,597:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:41,614:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:41,701:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:41,710:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:41,720:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:42:41,748:INFO:Calculating mean and std
2025-10-31 00:42:41,752:INFO:Creating metrics dataframe
2025-10-31 00:42:41,756:INFO:Uploading results into container
2025-10-31 00:42:41,756:INFO:Uploading model into container now
2025-10-31 00:42:41,757:INFO:_master_model_container: 9
2025-10-31 00:42:41,757:INFO:_display_container: 2
2025-10-31 00:42:41,757:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-10-31 00:42:41,757:INFO:create_model() successfully completed......................................
2025-10-31 00:42:41,862:INFO:SubProcess create_model() end ==================================
2025-10-31 00:42:41,862:INFO:Creating metrics dataframe
2025-10-31 00:42:41,869:INFO:Initializing create_model()
2025-10-31 00:42:41,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:42:41,869:INFO:Checking exceptions
2025-10-31 00:42:41,870:INFO:Importing libraries
2025-10-31 00:42:41,870:INFO:Copying training dataset
2025-10-31 00:42:42,238:INFO:Defining folds
2025-10-31 00:42:42,238:INFO:Declaring metric variables
2025-10-31 00:42:42,238:INFO:Importing untrained model
2025-10-31 00:42:42,238:INFO:Declaring custom model
2025-10-31 00:42:42,238:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:42:42,242:INFO:Cross validation set to False
2025-10-31 00:42:42,242:INFO:Fitting Model
2025-10-31 00:42:44,884:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:42:44,884:INFO:create_model() successfully completed......................................
2025-10-31 00:42:44,966:INFO:_master_model_container: 9
2025-10-31 00:42:44,966:INFO:_display_container: 2
2025-10-31 00:42:44,967:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:42:44,967:INFO:compare_models() successfully completed......................................
2025-10-31 00:42:44,982:INFO:Initializing tune_model()
2025-10-31 00:42:44,982:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=3, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>)
2025-10-31 00:42:44,982:INFO:Checking exceptions
2025-10-31 00:42:45,122:INFO:Copying training dataset
2025-10-31 00:42:45,354:INFO:Checking base model
2025-10-31 00:42:45,355:INFO:Base model : Extra Trees Classifier
2025-10-31 00:42:45,356:INFO:Declaring metric variables
2025-10-31 00:42:45,357:INFO:Defining Hyperparameters
2025-10-31 00:42:45,437:INFO:Tuning with n_jobs=-1
2025-10-31 00:42:45,438:INFO:Initializing RandomizedSearchCV
2025-10-31 00:43:08,224:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2025-10-31 00:43:08,227:INFO:Hyperparameter search completed
2025-10-31 00:43:08,227:INFO:SubProcess create_model() called ==================================
2025-10-31 00:43:08,228:INFO:Initializing create_model()
2025-10-31 00:43:08,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x111dc4490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2025-10-31 00:43:08,228:INFO:Checking exceptions
2025-10-31 00:43:08,228:INFO:Importing libraries
2025-10-31 00:43:08,228:INFO:Copying training dataset
2025-10-31 00:43:08,635:INFO:Defining folds
2025-10-31 00:43:08,635:INFO:Declaring metric variables
2025-10-31 00:43:08,638:INFO:Importing untrained model
2025-10-31 00:43:08,638:INFO:Declaring custom model
2025-10-31 00:43:08,641:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:43:08,643:INFO:Starting cross validation
2025-10-31 00:43:08,648:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:43:09,783:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,793:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,803:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,880:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,890:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,901:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,953:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,962:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,972:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:09,996:INFO:Calculating mean and std
2025-10-31 00:43:09,997:INFO:Creating metrics dataframe
2025-10-31 00:43:10,000:INFO:Finalizing model
2025-10-31 00:43:10,540:INFO:Uploading results into container
2025-10-31 00:43:10,541:INFO:Uploading model into container now
2025-10-31 00:43:10,542:INFO:_master_model_container: 10
2025-10-31 00:43:10,542:INFO:_display_container: 3
2025-10-31 00:43:10,542:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-10-31 00:43:10,542:INFO:create_model() successfully completed......................................
2025-10-31 00:43:10,662:INFO:SubProcess create_model() end ==================================
2025-10-31 00:43:10,662:INFO:choose_better activated
2025-10-31 00:43:10,664:INFO:SubProcess create_model() called ==================================
2025-10-31 00:43:10,664:INFO:Initializing create_model()
2025-10-31 00:43:10,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:43:10,664:INFO:Checking exceptions
2025-10-31 00:43:10,665:INFO:Importing libraries
2025-10-31 00:43:10,665:INFO:Copying training dataset
2025-10-31 00:43:11,008:INFO:Defining folds
2025-10-31 00:43:11,008:INFO:Declaring metric variables
2025-10-31 00:43:11,008:INFO:Importing untrained model
2025-10-31 00:43:11,008:INFO:Declaring custom model
2025-10-31 00:43:11,009:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:43:11,009:INFO:Starting cross validation
2025-10-31 00:43:11,012:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:43:15,413:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:15,430:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:15,446:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:15,966:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:15,977:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:15,988:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:16,217:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:16,227:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:16,237:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:43:16,259:INFO:Calculating mean and std
2025-10-31 00:43:16,260:INFO:Creating metrics dataframe
2025-10-31 00:43:16,260:INFO:Finalizing model
2025-10-31 00:43:19,079:INFO:Uploading results into container
2025-10-31 00:43:19,080:INFO:Uploading model into container now
2025-10-31 00:43:19,080:INFO:_master_model_container: 11
2025-10-31 00:43:19,080:INFO:_display_container: 4
2025-10-31 00:43:19,080:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:43:19,080:INFO:create_model() successfully completed......................................
2025-10-31 00:43:19,171:INFO:SubProcess create_model() end ==================================
2025-10-31 00:43:19,171:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for Accuracy is 0.5868
2025-10-31 00:43:19,171:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.5101
2025-10-31 00:43:19,171:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2025-10-31 00:43:19,171:INFO:choose_better completed
2025-10-31 00:43:19,171:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-10-31 00:43:19,175:INFO:_master_model_container: 11
2025-10-31 00:43:19,175:INFO:_display_container: 3
2025-10-31 00:43:19,175:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:43:19,175:INFO:tune_model() successfully completed......................................
2025-10-31 00:43:19,272:INFO:Initializing finalize_model()
2025-10-31 00:43:19,272:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-10-31 00:43:19,273:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:43:19,511:INFO:Initializing create_model()
2025-10-31 00:43:19,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:43:19,512:INFO:Checking exceptions
2025-10-31 00:43:19,512:INFO:Importing libraries
2025-10-31 00:43:19,512:INFO:Copying training dataset
2025-10-31 00:43:19,566:INFO:Defining folds
2025-10-31 00:43:19,566:INFO:Declaring metric variables
2025-10-31 00:43:19,566:INFO:Importing untrained model
2025-10-31 00:43:19,566:INFO:Declaring custom model
2025-10-31 00:43:19,567:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:43:19,570:INFO:Cross validation set to False
2025-10-31 00:43:19,570:INFO:Fitting Model
2025-10-31 00:43:24,217:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 00:43:24,218:INFO:create_model() successfully completed......................................
2025-10-31 00:43:24,299:INFO:_master_model_container: 11
2025-10-31 00:43:24,300:INFO:_display_container: 3
2025-10-31 00:43:24,305:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 00:43:24,305:INFO:finalize_model() successfully completed......................................
2025-10-31 00:43:24,407:INFO:Initializing predict_model()
2025-10-31 00:43:24,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17fd8cca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f711ab0>)
2025-10-31 00:43:24,407:INFO:Checking exceptions
2025-10-31 00:43:24,407:INFO:Preloading libraries
2025-10-31 00:43:24,409:INFO:Set up data.
2025-10-31 00:43:24,587:INFO:Set up index.
2025-10-31 00:45:58,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:45:58,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:45:58,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:45:58,170:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:51:01,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:51:01,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:51:01,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:51:01,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-31 00:52:47,878:INFO:PyCaret ClassificationExperiment
2025-10-31 00:52:47,878:INFO:Logging name: clf-default-name
2025-10-31 00:52:47,878:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 00:52:47,878:INFO:version 3.3.2
2025-10-31 00:52:47,878:INFO:Initializing setup()
2025-10-31 00:52:47,878:INFO:self.USI: 279c
2025-10-31 00:52:47,878:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'memory', 'USI', 'fix_imbalance', 'logging_param', 'X', 'X_train', 'y', 'data', 'gpu_n_jobs_param', 'idx', 'is_multiclass', 'html_param', 'y_test', '_available_plots', 'exp_id', 'target_param', 'y_train', 'fold_generator', 'fold_groups_param', 'X_test', 'exp_name_log', 'gpu_param', 'log_plots_param', 'seed', '_ml_usecase'}
2025-10-31 00:52:47,878:INFO:Checking environment
2025-10-31 00:52:47,878:INFO:python_version: 3.10.15
2025-10-31 00:52:47,878:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 00:52:47,878:INFO:machine: arm64
2025-10-31 00:52:47,878:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:52:47,878:INFO:Memory: svmem(total=17179869184, available=6569492480, percent=61.8, used=6550372352, free=1697824768, active=4885790720, inactive=4611948544, wired=1664581632)
2025-10-31 00:52:47,878:INFO:Physical Core: 10
2025-10-31 00:52:47,878:INFO:Logical Core: 10
2025-10-31 00:52:47,879:INFO:Checking libraries
2025-10-31 00:52:47,879:INFO:System:
2025-10-31 00:52:47,879:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 00:52:47,879:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 00:52:47,879:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 00:52:47,879:INFO:PyCaret required dependencies:
2025-10-31 00:52:47,880:INFO:                 pip: 25.2
2025-10-31 00:52:47,880:INFO:          setuptools: 80.9.0
2025-10-31 00:52:47,880:INFO:             pycaret: 3.3.2
2025-10-31 00:52:47,880:INFO:             IPython: 8.37.0
2025-10-31 00:52:47,880:INFO:          ipywidgets: 8.1.7
2025-10-31 00:52:47,880:INFO:                tqdm: 4.67.1
2025-10-31 00:52:47,880:INFO:               numpy: 1.26.4
2025-10-31 00:52:47,880:INFO:              pandas: 2.1.4
2025-10-31 00:52:47,880:INFO:              jinja2: 3.1.6
2025-10-31 00:52:47,880:INFO:               scipy: 1.11.4
2025-10-31 00:52:47,880:INFO:              joblib: 1.3.2
2025-10-31 00:52:47,880:INFO:             sklearn: 1.4.2
2025-10-31 00:52:47,880:INFO:                pyod: 2.0.5
2025-10-31 00:52:47,880:INFO:            imblearn: 0.14.0
2025-10-31 00:52:47,880:INFO:   category_encoders: 2.7.0
2025-10-31 00:52:47,880:INFO:            lightgbm: 4.6.0
2025-10-31 00:52:47,880:INFO:               numba: 0.62.1
2025-10-31 00:52:47,880:INFO:            requests: 2.32.5
2025-10-31 00:52:47,880:INFO:          matplotlib: 3.10.7
2025-10-31 00:52:47,880:INFO:          scikitplot: 0.3.7
2025-10-31 00:52:47,880:INFO:         yellowbrick: 1.5
2025-10-31 00:52:47,880:INFO:              plotly: 6.3.1
2025-10-31 00:52:47,881:INFO:    plotly-resampler: Not installed
2025-10-31 00:52:47,881:INFO:             kaleido: 0.2.1
2025-10-31 00:52:47,881:INFO:           schemdraw: 0.15
2025-10-31 00:52:47,881:INFO:         statsmodels: 0.14.5
2025-10-31 00:52:47,881:INFO:              sktime: 0.26.0
2025-10-31 00:52:47,881:INFO:               tbats: 1.1.3
2025-10-31 00:52:47,881:INFO:            pmdarima: 2.0.4
2025-10-31 00:52:47,881:INFO:              psutil: 7.1.2
2025-10-31 00:52:47,881:INFO:          markupsafe: 3.0.3
2025-10-31 00:52:47,881:INFO:             pickle5: Not installed
2025-10-31 00:52:47,881:INFO:         cloudpickle: 3.1.1
2025-10-31 00:52:47,881:INFO:         deprecation: 2.1.0
2025-10-31 00:52:47,881:INFO:              xxhash: 3.6.0
2025-10-31 00:52:47,881:INFO:           wurlitzer: 3.1.1
2025-10-31 00:52:47,881:INFO:PyCaret optional dependencies:
2025-10-31 00:52:48,025:INFO:                shap: Not installed
2025-10-31 00:52:48,025:INFO:           interpret: Not installed
2025-10-31 00:52:48,025:INFO:                umap: 0.5.9.post2
2025-10-31 00:52:48,025:INFO:     ydata_profiling: Not installed
2025-10-31 00:52:48,025:INFO:  explainerdashboard: Not installed
2025-10-31 00:52:48,025:INFO:             autoviz: Not installed
2025-10-31 00:52:48,025:INFO:           fairlearn: Not installed
2025-10-31 00:52:48,025:INFO:          deepchecks: Not installed
2025-10-31 00:52:48,025:INFO:             xgboost: Not installed
2025-10-31 00:52:48,025:INFO:            catboost: Not installed
2025-10-31 00:52:48,025:INFO:              kmodes: Not installed
2025-10-31 00:52:48,025:INFO:             mlxtend: Not installed
2025-10-31 00:52:48,026:INFO:       statsforecast: Not installed
2025-10-31 00:52:48,026:INFO:        tune_sklearn: Not installed
2025-10-31 00:52:48,026:INFO:                 ray: Not installed
2025-10-31 00:52:48,026:INFO:            hyperopt: Not installed
2025-10-31 00:52:48,026:INFO:              optuna: Not installed
2025-10-31 00:52:48,026:INFO:               skopt: Not installed
2025-10-31 00:52:48,026:INFO:              mlflow: 3.5.1
2025-10-31 00:52:48,026:INFO:              gradio: Not installed
2025-10-31 00:52:48,026:INFO:             fastapi: 0.120.2
2025-10-31 00:52:48,026:INFO:             uvicorn: 0.38.0
2025-10-31 00:52:48,026:INFO:              m2cgen: Not installed
2025-10-31 00:52:48,026:INFO:           evidently: Not installed
2025-10-31 00:52:48,026:INFO:               fugue: Not installed
2025-10-31 00:52:48,026:INFO:           streamlit: Not installed
2025-10-31 00:52:48,026:INFO:             prophet: Not installed
2025-10-31 00:52:48,026:INFO:None
2025-10-31 00:52:48,026:INFO:Set up data.
2025-10-31 00:52:48,354:INFO:Set up folding strategy.
2025-10-31 00:52:48,354:INFO:Set up train/test split.
2025-10-31 00:52:48,628:INFO:Set up index.
2025-10-31 00:52:48,634:INFO:Assigning column types.
2025-10-31 00:52:48,975:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 00:52:48,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:52:48,990:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:52:49,001:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 00:52:49,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:52:49,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,063:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 00:52:49,076:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:52:49,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,098:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 00:52:49,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,106:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 00:52:49,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:49,152:INFO:Preparing preprocessing pipeline...
2025-10-31 00:52:49,193:INFO:Set up label encoding.
2025-10-31 00:52:49,193:INFO:Set up simple imputation.
2025-10-31 00:52:49,193:INFO:Set up feature normalization.
2025-10-31 00:52:49,946:INFO:Finished creating preprocessing pipeline.
2025-10-31 00:52:49,952:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfid...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-31 00:52:49,952:INFO:Creating final display dataframe.
2025-10-31 00:52:51,535:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8               Ignore features   
9              Numeric features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14                    Normalize   
15             Normalize method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                       (15076, 2002)  
5                                       (15076, 2001)  
6                                       (10553, 2001)  
7                                        (4523, 2001)  
8                                                   2  
9                                                2000  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                               True  
15                                             zscore  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               279c  
2025-10-31 00:52:51,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:51,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:51,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:51,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 00:52:51,579:INFO:setup() successfully completed in 3.7s...............
2025-10-31 00:53:10,584:INFO:Initializing compare_models()
2025-10-31 00:53:10,584:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, include=None, fold=3, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, 'include': None, 'exclude': ['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'], 'fold': 3, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'])
2025-10-31 00:53:10,584:INFO:Checking exceptions
2025-10-31 00:53:10,820:INFO:Preparing display monitor
2025-10-31 00:53:10,868:INFO:Initializing Logistic Regression
2025-10-31 00:53:10,868:INFO:Total runtime is 2.884864807128906e-06 minutes
2025-10-31 00:53:10,870:INFO:SubProcess create_model() called ==================================
2025-10-31 00:53:10,870:INFO:Initializing create_model()
2025-10-31 00:53:10,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=lr, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:53:10,870:INFO:Checking exceptions
2025-10-31 00:53:10,870:INFO:Importing libraries
2025-10-31 00:53:10,870:INFO:Copying training dataset
2025-10-31 00:53:11,324:INFO:Defining folds
2025-10-31 00:53:11,324:INFO:Declaring metric variables
2025-10-31 00:53:11,326:INFO:Importing untrained model
2025-10-31 00:53:11,327:INFO:Logistic Regression Imported successfully
2025-10-31 00:53:11,329:INFO:Starting cross validation
2025-10-31 00:53:11,333:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:53:16,264:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:16,270:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:16,280:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:16,291:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:16,855:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:16,860:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:16,870:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:16,881:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:17,026:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:17,031:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:17,040:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:17,050:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:17,073:INFO:Calculating mean and std
2025-10-31 00:53:17,074:INFO:Creating metrics dataframe
2025-10-31 00:53:17,076:INFO:Uploading results into container
2025-10-31 00:53:17,077:INFO:Uploading model into container now
2025-10-31 00:53:17,077:INFO:_master_model_container: 1
2025-10-31 00:53:17,077:INFO:_display_container: 2
2025-10-31 00:53:17,078:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 00:53:17,078:INFO:create_model() successfully completed......................................
2025-10-31 00:53:17,180:INFO:SubProcess create_model() end ==================================
2025-10-31 00:53:17,180:INFO:Creating metrics dataframe
2025-10-31 00:53:17,183:INFO:Initializing Naive Bayes
2025-10-31 00:53:17,183:INFO:Total runtime is 0.10525033473968505 minutes
2025-10-31 00:53:17,184:INFO:SubProcess create_model() called ==================================
2025-10-31 00:53:17,184:INFO:Initializing create_model()
2025-10-31 00:53:17,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=nb, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:53:17,185:INFO:Checking exceptions
2025-10-31 00:53:17,185:INFO:Importing libraries
2025-10-31 00:53:17,185:INFO:Copying training dataset
2025-10-31 00:53:17,599:INFO:Defining folds
2025-10-31 00:53:17,599:INFO:Declaring metric variables
2025-10-31 00:53:17,601:INFO:Importing untrained model
2025-10-31 00:53:17,603:INFO:Naive Bayes Imported successfully
2025-10-31 00:53:17,605:INFO:Starting cross validation
2025-10-31 00:53:17,609:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:53:20,486:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,498:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,508:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,623:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,634:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,645:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,751:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,761:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,771:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:20,798:INFO:Calculating mean and std
2025-10-31 00:53:20,799:INFO:Creating metrics dataframe
2025-10-31 00:53:20,800:INFO:Uploading results into container
2025-10-31 00:53:20,801:INFO:Uploading model into container now
2025-10-31 00:53:20,801:INFO:_master_model_container: 2
2025-10-31 00:53:20,801:INFO:_display_container: 2
2025-10-31 00:53:20,802:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-10-31 00:53:20,802:INFO:create_model() successfully completed......................................
2025-10-31 00:53:20,942:INFO:SubProcess create_model() end ==================================
2025-10-31 00:53:20,942:INFO:Creating metrics dataframe
2025-10-31 00:53:20,945:INFO:Initializing SVM - Linear Kernel
2025-10-31 00:53:20,945:INFO:Total runtime is 0.167960786819458 minutes
2025-10-31 00:53:20,948:INFO:SubProcess create_model() called ==================================
2025-10-31 00:53:20,948:INFO:Initializing create_model()
2025-10-31 00:53:20,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=svm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:53:20,948:INFO:Checking exceptions
2025-10-31 00:53:20,948:INFO:Importing libraries
2025-10-31 00:53:20,948:INFO:Copying training dataset
2025-10-31 00:53:21,331:INFO:Defining folds
2025-10-31 00:53:21,331:INFO:Declaring metric variables
2025-10-31 00:53:21,333:INFO:Importing untrained model
2025-10-31 00:53:21,335:INFO:SVM - Linear Kernel Imported successfully
2025-10-31 00:53:21,337:INFO:Starting cross validation
2025-10-31 00:53:21,341:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:53:35,959:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:35,966:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:35,978:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:35,993:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:37,650:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:37,655:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:37,666:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:37,676:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:38,045:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:38,049:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:38,059:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:38,068:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:38,087:INFO:Calculating mean and std
2025-10-31 00:53:38,088:INFO:Creating metrics dataframe
2025-10-31 00:53:38,089:INFO:Uploading results into container
2025-10-31 00:53:38,090:INFO:Uploading model into container now
2025-10-31 00:53:38,090:INFO:_master_model_container: 3
2025-10-31 00:53:38,090:INFO:_display_container: 2
2025-10-31 00:53:38,091:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-10-31 00:53:38,091:INFO:create_model() successfully completed......................................
2025-10-31 00:53:38,192:INFO:SubProcess create_model() end ==================================
2025-10-31 00:53:38,192:INFO:Creating metrics dataframe
2025-10-31 00:53:38,195:INFO:Initializing Ridge Classifier
2025-10-31 00:53:38,195:INFO:Total runtime is 0.455456813176473 minutes
2025-10-31 00:53:38,197:INFO:SubProcess create_model() called ==================================
2025-10-31 00:53:38,197:INFO:Initializing create_model()
2025-10-31 00:53:38,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=ridge, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:53:38,197:INFO:Checking exceptions
2025-10-31 00:53:38,197:INFO:Importing libraries
2025-10-31 00:53:38,197:INFO:Copying training dataset
2025-10-31 00:53:38,630:INFO:Defining folds
2025-10-31 00:53:38,631:INFO:Declaring metric variables
2025-10-31 00:53:38,632:INFO:Importing untrained model
2025-10-31 00:53:38,634:INFO:Ridge Classifier Imported successfully
2025-10-31 00:53:38,636:INFO:Starting cross validation
2025-10-31 00:53:38,641:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:53:39,693:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:39,698:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:39,708:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:39,718:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:39,846:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:39,851:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:39,860:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:39,871:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:39,981:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:53:39,987:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:39,997:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:40,007:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:40,031:INFO:Calculating mean and std
2025-10-31 00:53:40,031:INFO:Creating metrics dataframe
2025-10-31 00:53:40,032:INFO:Uploading results into container
2025-10-31 00:53:40,033:INFO:Uploading model into container now
2025-10-31 00:53:40,033:INFO:_master_model_container: 4
2025-10-31 00:53:40,033:INFO:_display_container: 2
2025-10-31 00:53:40,033:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-10-31 00:53:40,033:INFO:create_model() successfully completed......................................
2025-10-31 00:53:40,126:INFO:SubProcess create_model() end ==================================
2025-10-31 00:53:40,126:INFO:Creating metrics dataframe
2025-10-31 00:53:40,129:INFO:Initializing Random Forest Classifier
2025-10-31 00:53:40,129:INFO:Total runtime is 0.48768920103708907 minutes
2025-10-31 00:53:40,130:INFO:SubProcess create_model() called ==================================
2025-10-31 00:53:40,131:INFO:Initializing create_model()
2025-10-31 00:53:40,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=rf, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:53:40,131:INFO:Checking exceptions
2025-10-31 00:53:40,131:INFO:Importing libraries
2025-10-31 00:53:40,131:INFO:Copying training dataset
2025-10-31 00:53:40,512:INFO:Defining folds
2025-10-31 00:53:40,512:INFO:Declaring metric variables
2025-10-31 00:53:40,514:INFO:Importing untrained model
2025-10-31 00:53:40,515:INFO:Random Forest Classifier Imported successfully
2025-10-31 00:53:40,517:INFO:Starting cross validation
2025-10-31 00:53:40,521:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:53:42,606:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:42,616:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:42,625:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:45,519:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:45,529:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:45,539:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:45,646:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:45,656:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:45,666:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:53:45,698:INFO:Calculating mean and std
2025-10-31 00:53:45,700:INFO:Creating metrics dataframe
2025-10-31 00:53:45,702:INFO:Uploading results into container
2025-10-31 00:53:45,702:INFO:Uploading model into container now
2025-10-31 00:53:45,703:INFO:_master_model_container: 5
2025-10-31 00:53:45,703:INFO:_display_container: 2
2025-10-31 00:53:45,703:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-10-31 00:53:45,703:INFO:create_model() successfully completed......................................
2025-10-31 00:53:45,816:INFO:SubProcess create_model() end ==================================
2025-10-31 00:53:45,816:INFO:Creating metrics dataframe
2025-10-31 00:53:45,819:INFO:Initializing Gradient Boosting Classifier
2025-10-31 00:53:45,819:INFO:Total runtime is 0.5825222492218018 minutes
2025-10-31 00:53:45,821:INFO:SubProcess create_model() called ==================================
2025-10-31 00:53:45,821:INFO:Initializing create_model()
2025-10-31 00:53:45,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=gbc, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:53:45,821:INFO:Checking exceptions
2025-10-31 00:53:45,821:INFO:Importing libraries
2025-10-31 00:53:45,821:INFO:Copying training dataset
2025-10-31 00:53:46,211:INFO:Defining folds
2025-10-31 00:53:46,211:INFO:Declaring metric variables
2025-10-31 00:53:46,212:INFO:Importing untrained model
2025-10-31 00:53:46,214:INFO:Gradient Boosting Classifier Imported successfully
2025-10-31 00:53:46,216:INFO:Starting cross validation
2025-10-31 00:53:46,220:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:56:48,024:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:56:48,029:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:48,039:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:48,050:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:49,934:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:56:49,939:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:49,948:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:49,958:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:50,850:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:56:50,855:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:50,864:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:50,873:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:50,897:INFO:Calculating mean and std
2025-10-31 00:56:50,898:INFO:Creating metrics dataframe
2025-10-31 00:56:50,900:INFO:Uploading results into container
2025-10-31 00:56:50,900:INFO:Uploading model into container now
2025-10-31 00:56:50,900:INFO:_master_model_container: 6
2025-10-31 00:56:50,900:INFO:_display_container: 2
2025-10-31 00:56:50,901:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-10-31 00:56:50,901:INFO:create_model() successfully completed......................................
2025-10-31 00:56:50,994:INFO:SubProcess create_model() end ==================================
2025-10-31 00:56:50,994:INFO:Creating metrics dataframe
2025-10-31 00:56:50,997:INFO:Initializing Linear Discriminant Analysis
2025-10-31 00:56:50,997:INFO:Total runtime is 3.66882400115331 minutes
2025-10-31 00:56:50,999:INFO:SubProcess create_model() called ==================================
2025-10-31 00:56:50,999:INFO:Initializing create_model()
2025-10-31 00:56:50,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=lda, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:56:50,999:INFO:Checking exceptions
2025-10-31 00:56:50,999:INFO:Importing libraries
2025-10-31 00:56:50,999:INFO:Copying training dataset
2025-10-31 00:56:51,390:INFO:Defining folds
2025-10-31 00:56:51,390:INFO:Declaring metric variables
2025-10-31 00:56:51,391:INFO:Importing untrained model
2025-10-31 00:56:51,393:INFO:Linear Discriminant Analysis Imported successfully
2025-10-31 00:56:51,395:INFO:Starting cross validation
2025-10-31 00:56:51,399:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:56:55,540:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:56:55,545:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:55,555:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:55,565:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:55,806:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:56:55,811:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:55,820:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:55,830:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:56,033:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 00:56:56,037:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:56,047:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:56,056:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:56:56,074:INFO:Calculating mean and std
2025-10-31 00:56:56,075:INFO:Creating metrics dataframe
2025-10-31 00:56:56,076:INFO:Uploading results into container
2025-10-31 00:56:56,076:INFO:Uploading model into container now
2025-10-31 00:56:56,076:INFO:_master_model_container: 7
2025-10-31 00:56:56,076:INFO:_display_container: 2
2025-10-31 00:56:56,076:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-10-31 00:56:56,077:INFO:create_model() successfully completed......................................
2025-10-31 00:56:56,172:INFO:SubProcess create_model() end ==================================
2025-10-31 00:56:56,172:INFO:Creating metrics dataframe
2025-10-31 00:56:56,175:INFO:Initializing Extra Trees Classifier
2025-10-31 00:56:56,175:INFO:Total runtime is 3.7551268974939984 minutes
2025-10-31 00:56:56,177:INFO:SubProcess create_model() called ==================================
2025-10-31 00:56:56,177:INFO:Initializing create_model()
2025-10-31 00:56:56,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=et, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:56:56,177:INFO:Checking exceptions
2025-10-31 00:56:56,177:INFO:Importing libraries
2025-10-31 00:56:56,177:INFO:Copying training dataset
2025-10-31 00:56:56,566:INFO:Defining folds
2025-10-31 00:56:56,566:INFO:Declaring metric variables
2025-10-31 00:56:56,568:INFO:Importing untrained model
2025-10-31 00:56:56,570:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:56:56,572:INFO:Starting cross validation
2025-10-31 00:56:56,576:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:57:00,440:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:00,454:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:00,478:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:00,884:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:00,895:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:00,906:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:01,968:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:01,977:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:01,986:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:02,007:INFO:Calculating mean and std
2025-10-31 00:57:02,008:INFO:Creating metrics dataframe
2025-10-31 00:57:02,009:INFO:Uploading results into container
2025-10-31 00:57:02,010:INFO:Uploading model into container now
2025-10-31 00:57:02,010:INFO:_master_model_container: 8
2025-10-31 00:57:02,010:INFO:_display_container: 2
2025-10-31 00:57:02,010:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:57:02,010:INFO:create_model() successfully completed......................................
2025-10-31 00:57:02,135:INFO:SubProcess create_model() end ==================================
2025-10-31 00:57:02,135:INFO:Creating metrics dataframe
2025-10-31 00:57:02,138:INFO:Initializing Light Gradient Boosting Machine
2025-10-31 00:57:02,139:INFO:Total runtime is 3.8545122345288596 minutes
2025-10-31 00:57:02,140:INFO:SubProcess create_model() called ==================================
2025-10-31 00:57:02,140:INFO:Initializing create_model()
2025-10-31 00:57:02,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107e76320>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:57:02,140:INFO:Checking exceptions
2025-10-31 00:57:02,140:INFO:Importing libraries
2025-10-31 00:57:02,140:INFO:Copying training dataset
2025-10-31 00:57:02,534:INFO:Defining folds
2025-10-31 00:57:02,534:INFO:Declaring metric variables
2025-10-31 00:57:02,536:INFO:Importing untrained model
2025-10-31 00:57:02,538:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-31 00:57:02,540:INFO:Starting cross validation
2025-10-31 00:57:02,544:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:57:36,166:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,178:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,202:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,248:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,259:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,269:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,810:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,820:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,830:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:57:36,850:INFO:Calculating mean and std
2025-10-31 00:57:36,853:INFO:Creating metrics dataframe
2025-10-31 00:57:36,855:INFO:Uploading results into container
2025-10-31 00:57:36,855:INFO:Uploading model into container now
2025-10-31 00:57:36,856:INFO:_master_model_container: 9
2025-10-31 00:57:36,856:INFO:_display_container: 2
2025-10-31 00:57:36,857:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-10-31 00:57:36,857:INFO:create_model() successfully completed......................................
2025-10-31 00:57:36,979:INFO:SubProcess create_model() end ==================================
2025-10-31 00:57:36,979:INFO:Creating metrics dataframe
2025-10-31 00:57:36,986:INFO:Initializing create_model()
2025-10-31 00:57:36,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:57:36,986:INFO:Checking exceptions
2025-10-31 00:57:36,987:INFO:Importing libraries
2025-10-31 00:57:36,987:INFO:Copying training dataset
2025-10-31 00:57:37,427:INFO:Defining folds
2025-10-31 00:57:37,427:INFO:Declaring metric variables
2025-10-31 00:57:37,427:INFO:Importing untrained model
2025-10-31 00:57:37,427:INFO:Declaring custom model
2025-10-31 00:57:37,427:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:57:37,431:INFO:Cross validation set to False
2025-10-31 00:57:37,431:INFO:Fitting Model
2025-10-31 00:57:40,033:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:57:40,033:INFO:create_model() successfully completed......................................
2025-10-31 00:57:40,118:INFO:_master_model_container: 9
2025-10-31 00:57:40,119:INFO:_display_container: 2
2025-10-31 00:57:40,119:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:57:40,119:INFO:compare_models() successfully completed......................................
2025-10-31 00:57:45,861:INFO:Initializing tune_model()
2025-10-31 00:57:45,861:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=3, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>)
2025-10-31 00:57:45,861:INFO:Checking exceptions
2025-10-31 00:57:46,007:INFO:Copying training dataset
2025-10-31 00:57:46,245:INFO:Checking base model
2025-10-31 00:57:46,245:INFO:Base model : Extra Trees Classifier
2025-10-31 00:57:46,247:INFO:Declaring metric variables
2025-10-31 00:57:46,248:INFO:Defining Hyperparameters
2025-10-31 00:57:46,335:INFO:Tuning with n_jobs=-1
2025-10-31 00:57:46,335:INFO:Initializing RandomizedSearchCV
2025-10-31 00:58:09,070:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2025-10-31 00:58:09,072:INFO:Hyperparameter search completed
2025-10-31 00:58:09,073:INFO:SubProcess create_model() called ==================================
2025-10-31 00:58:09,073:INFO:Initializing create_model()
2025-10-31 00:58:09,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107cd9d50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2025-10-31 00:58:09,074:INFO:Checking exceptions
2025-10-31 00:58:09,074:INFO:Importing libraries
2025-10-31 00:58:09,074:INFO:Copying training dataset
2025-10-31 00:58:09,469:INFO:Defining folds
2025-10-31 00:58:09,469:INFO:Declaring metric variables
2025-10-31 00:58:09,471:INFO:Importing untrained model
2025-10-31 00:58:09,472:INFO:Declaring custom model
2025-10-31 00:58:09,474:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:58:09,477:INFO:Starting cross validation
2025-10-31 00:58:09,481:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:58:10,479:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,490:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,502:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,678:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,688:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,698:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,823:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,832:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,843:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:10,858:INFO:Calculating mean and std
2025-10-31 00:58:10,859:INFO:Creating metrics dataframe
2025-10-31 00:58:10,861:INFO:Finalizing model
2025-10-31 00:58:11,388:INFO:Uploading results into container
2025-10-31 00:58:11,388:INFO:Uploading model into container now
2025-10-31 00:58:11,389:INFO:_master_model_container: 10
2025-10-31 00:58:11,389:INFO:_display_container: 3
2025-10-31 00:58:11,389:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-10-31 00:58:11,389:INFO:create_model() successfully completed......................................
2025-10-31 00:58:11,508:INFO:SubProcess create_model() end ==================================
2025-10-31 00:58:11,508:INFO:choose_better activated
2025-10-31 00:58:11,510:INFO:SubProcess create_model() called ==================================
2025-10-31 00:58:11,510:INFO:Initializing create_model()
2025-10-31 00:58:11,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:58:11,510:INFO:Checking exceptions
2025-10-31 00:58:11,511:INFO:Importing libraries
2025-10-31 00:58:11,511:INFO:Copying training dataset
2025-10-31 00:58:11,884:INFO:Defining folds
2025-10-31 00:58:11,884:INFO:Declaring metric variables
2025-10-31 00:58:11,884:INFO:Importing untrained model
2025-10-31 00:58:11,884:INFO:Declaring custom model
2025-10-31 00:58:11,884:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:58:11,885:INFO:Starting cross validation
2025-10-31 00:58:11,888:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 00:58:16,440:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:16,458:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:16,473:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:16,925:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:16,935:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:16,945:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:17,164:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:17,174:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:17,184:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 00:58:17,203:INFO:Calculating mean and std
2025-10-31 00:58:17,203:INFO:Creating metrics dataframe
2025-10-31 00:58:17,203:INFO:Finalizing model
2025-10-31 00:58:19,837:INFO:Uploading results into container
2025-10-31 00:58:19,838:INFO:Uploading model into container now
2025-10-31 00:58:19,838:INFO:_master_model_container: 11
2025-10-31 00:58:19,838:INFO:_display_container: 4
2025-10-31 00:58:19,838:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:58:19,838:INFO:create_model() successfully completed......................................
2025-10-31 00:58:19,918:INFO:SubProcess create_model() end ==================================
2025-10-31 00:58:19,918:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for Accuracy is 0.5868
2025-10-31 00:58:19,918:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.5101
2025-10-31 00:58:19,918:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2025-10-31 00:58:19,919:INFO:choose_better completed
2025-10-31 00:58:19,919:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-10-31 00:58:19,922:INFO:_master_model_container: 11
2025-10-31 00:58:19,922:INFO:_display_container: 3
2025-10-31 00:58:19,922:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:58:19,922:INFO:tune_model() successfully completed......................................
2025-10-31 00:58:20,006:INFO:Initializing finalize_model()
2025-10-31 00:58:20,006:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-10-31 00:58:20,007:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 00:58:20,224:INFO:Initializing create_model()
2025-10-31 00:58:20,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 00:58:20,224:INFO:Checking exceptions
2025-10-31 00:58:20,224:INFO:Importing libraries
2025-10-31 00:58:20,224:INFO:Copying training dataset
2025-10-31 00:58:20,278:INFO:Defining folds
2025-10-31 00:58:20,278:INFO:Declaring metric variables
2025-10-31 00:58:20,278:INFO:Importing untrained model
2025-10-31 00:58:20,278:INFO:Declaring custom model
2025-10-31 00:58:20,278:INFO:Extra Trees Classifier Imported successfully
2025-10-31 00:58:20,282:INFO:Cross validation set to False
2025-10-31 00:58:20,282:INFO:Fitting Model
2025-10-31 00:58:24,634:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 00:58:24,635:INFO:create_model() successfully completed......................................
2025-10-31 00:58:24,714:INFO:_master_model_container: 11
2025-10-31 00:58:24,714:INFO:_display_container: 3
2025-10-31 00:58:24,720:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 00:58:24,720:INFO:finalize_model() successfully completed......................................
2025-10-31 00:59:34,375:INFO:Initializing predict_model()
2025-10-31 00:59:34,376:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30c3e7490>)
2025-10-31 00:59:34,376:INFO:Checking exceptions
2025-10-31 00:59:34,376:INFO:Preloading libraries
2025-10-31 00:59:34,378:INFO:Set up data.
2025-10-31 00:59:34,546:INFO:Set up index.
2025-10-31 01:00:36,031:INFO:Initializing predict_model()
2025-10-31 01:00:36,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x305882d40>)
2025-10-31 01:00:36,032:INFO:Checking exceptions
2025-10-31 01:00:36,032:INFO:Preloading libraries
2025-10-31 01:00:36,033:INFO:Set up data.
2025-10-31 01:00:36,251:INFO:Set up index.
2025-10-31 01:03:29,032:INFO:Initializing predict_model()
2025-10-31 01:03:29,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x310cf1ed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db7f400>)
2025-10-31 01:03:29,032:INFO:Checking exceptions
2025-10-31 01:03:29,033:INFO:Preloading libraries
2025-10-31 01:03:29,034:INFO:Set up data.
2025-10-31 01:03:29,155:INFO:Set up index.
2025-10-31 09:59:10,087:INFO:PyCaret ClassificationExperiment
2025-10-31 09:59:10,088:INFO:Logging name: 20ng_optimized_run
2025-10-31 09:59:10,088:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 09:59:10,088:INFO:version 3.3.2
2025-10-31 09:59:10,088:INFO:Initializing setup()
2025-10-31 09:59:10,088:INFO:self.USI: c56a
2025-10-31 09:59:10,088:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'memory', 'USI', 'fix_imbalance', 'logging_param', 'X', 'X_train', 'y', 'data', 'gpu_n_jobs_param', 'idx', 'is_multiclass', 'html_param', 'y_test', '_available_plots', 'exp_id', 'target_param', 'y_train', 'fold_generator', 'fold_groups_param', 'X_test', 'exp_name_log', 'gpu_param', 'log_plots_param', 'seed', '_ml_usecase'}
2025-10-31 09:59:10,088:INFO:Checking environment
2025-10-31 09:59:10,088:INFO:python_version: 3.10.15
2025-10-31 09:59:10,088:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 09:59:10,088:INFO:machine: arm64
2025-10-31 09:59:10,088:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 09:59:10,089:INFO:Memory: svmem(total=17179869184, available=5406064640, percent=68.5, used=7174373376, free=110231552, active=5315969024, inactive=5294456832, wired=1858404352)
2025-10-31 09:59:10,089:INFO:Physical Core: 10
2025-10-31 09:59:10,089:INFO:Logical Core: 10
2025-10-31 09:59:10,089:INFO:Checking libraries
2025-10-31 09:59:10,089:INFO:System:
2025-10-31 09:59:10,089:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 09:59:10,089:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 09:59:10,089:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 09:59:10,089:INFO:PyCaret required dependencies:
2025-10-31 09:59:10,090:INFO:                 pip: 25.2
2025-10-31 09:59:10,090:INFO:          setuptools: 80.9.0
2025-10-31 09:59:10,091:INFO:             pycaret: 3.3.2
2025-10-31 09:59:10,091:INFO:             IPython: 8.37.0
2025-10-31 09:59:10,091:INFO:          ipywidgets: 8.1.7
2025-10-31 09:59:10,091:INFO:                tqdm: 4.67.1
2025-10-31 09:59:10,091:INFO:               numpy: 1.26.4
2025-10-31 09:59:10,091:INFO:              pandas: 2.1.4
2025-10-31 09:59:10,091:INFO:              jinja2: 3.1.6
2025-10-31 09:59:10,092:INFO:               scipy: 1.11.4
2025-10-31 09:59:10,092:INFO:              joblib: 1.3.2
2025-10-31 09:59:10,092:INFO:             sklearn: 1.4.2
2025-10-31 09:59:10,092:INFO:                pyod: 2.0.5
2025-10-31 09:59:10,092:INFO:            imblearn: 0.14.0
2025-10-31 09:59:10,092:INFO:   category_encoders: 2.7.0
2025-10-31 09:59:10,092:INFO:            lightgbm: 4.6.0
2025-10-31 09:59:10,092:INFO:               numba: 0.62.1
2025-10-31 09:59:10,092:INFO:            requests: 2.32.5
2025-10-31 09:59:10,092:INFO:          matplotlib: 3.10.7
2025-10-31 09:59:10,092:INFO:          scikitplot: 0.3.7
2025-10-31 09:59:10,092:INFO:         yellowbrick: 1.5
2025-10-31 09:59:10,092:INFO:              plotly: 6.3.1
2025-10-31 09:59:10,092:INFO:    plotly-resampler: Not installed
2025-10-31 09:59:10,092:INFO:             kaleido: 0.2.1
2025-10-31 09:59:10,092:INFO:           schemdraw: 0.15
2025-10-31 09:59:10,092:INFO:         statsmodels: 0.14.5
2025-10-31 09:59:10,092:INFO:              sktime: 0.26.0
2025-10-31 09:59:10,092:INFO:               tbats: 1.1.3
2025-10-31 09:59:10,092:INFO:            pmdarima: 2.0.4
2025-10-31 09:59:10,092:INFO:              psutil: 7.1.2
2025-10-31 09:59:10,092:INFO:          markupsafe: 3.0.3
2025-10-31 09:59:10,092:INFO:             pickle5: Not installed
2025-10-31 09:59:10,092:INFO:         cloudpickle: 3.1.1
2025-10-31 09:59:10,092:INFO:         deprecation: 2.1.0
2025-10-31 09:59:10,092:INFO:              xxhash: 3.6.0
2025-10-31 09:59:10,092:INFO:           wurlitzer: 3.1.1
2025-10-31 09:59:10,092:INFO:PyCaret optional dependencies:
2025-10-31 09:59:10,092:INFO:                shap: Not installed
2025-10-31 09:59:10,092:INFO:           interpret: Not installed
2025-10-31 09:59:10,092:INFO:                umap: 0.5.9.post2
2025-10-31 09:59:10,092:INFO:     ydata_profiling: Not installed
2025-10-31 09:59:10,092:INFO:  explainerdashboard: Not installed
2025-10-31 09:59:10,092:INFO:             autoviz: Not installed
2025-10-31 09:59:10,092:INFO:           fairlearn: Not installed
2025-10-31 09:59:10,092:INFO:          deepchecks: Not installed
2025-10-31 09:59:10,092:INFO:             xgboost: Not installed
2025-10-31 09:59:10,092:INFO:            catboost: Not installed
2025-10-31 09:59:10,092:INFO:              kmodes: Not installed
2025-10-31 09:59:10,092:INFO:             mlxtend: Not installed
2025-10-31 09:59:10,092:INFO:       statsforecast: Not installed
2025-10-31 09:59:10,092:INFO:        tune_sklearn: Not installed
2025-10-31 09:59:10,092:INFO:                 ray: Not installed
2025-10-31 09:59:10,092:INFO:            hyperopt: Not installed
2025-10-31 09:59:10,092:INFO:              optuna: Not installed
2025-10-31 09:59:10,092:INFO:               skopt: Not installed
2025-10-31 09:59:10,092:INFO:              mlflow: 3.5.1
2025-10-31 09:59:10,092:INFO:              gradio: Not installed
2025-10-31 09:59:10,092:INFO:             fastapi: 0.120.2
2025-10-31 09:59:10,092:INFO:             uvicorn: 0.38.0
2025-10-31 09:59:10,092:INFO:              m2cgen: Not installed
2025-10-31 09:59:10,092:INFO:           evidently: Not installed
2025-10-31 09:59:10,092:INFO:               fugue: Not installed
2025-10-31 09:59:10,092:INFO:           streamlit: Not installed
2025-10-31 09:59:10,092:INFO:             prophet: Not installed
2025-10-31 09:59:10,092:INFO:None
2025-10-31 09:59:10,092:INFO:Set up data.
2025-10-31 09:59:10,375:INFO:Set up folding strategy.
2025-10-31 09:59:10,375:INFO:Set up train/test split.
2025-10-31 09:59:10,608:INFO:Set up index.
2025-10-31 09:59:10,613:INFO:Assigning column types.
2025-10-31 09:59:10,994:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 09:59:11,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 09:59:11,007:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 09:59:11,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,028:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 09:59:11,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 09:59:11,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,036:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 09:59:11,049:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 09:59:11,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,069:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 09:59:11,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,077:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 09:59:11,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:11,120:INFO:Preparing preprocessing pipeline...
2025-10-31 09:59:11,157:INFO:Set up label encoding.
2025-10-31 09:59:11,157:INFO:Set up simple imputation.
2025-10-31 09:59:11,157:INFO:Set up feature normalization.
2025-10-31 09:59:11,950:INFO:Finished creating preprocessing pipeline.
2025-10-31 09:59:11,955:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfid...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-31 09:59:11,955:INFO:Creating final display dataframe.
2025-10-31 09:59:13,394:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8               Ignore features   
9              Numeric features   
10     Rows with missing values   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15                    Normalize   
16             Normalize method   
17               Fold Generator   
18                  Fold Number   
19                     CPU Jobs   
20                      Use GPU   
21               Log Experiment   
22              Experiment Name   
23                          USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                       (15076, 2003)  
5                                       (15076, 2001)  
6                                       (10553, 2001)  
7                                        (4523, 2001)  
8                                                   2  
9                                                2000  
10                                               2.0%  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                               True  
16                                             zscore  
17                                    StratifiedKFold  
18                                                 10  
19                                                 -1  
20                                              False  
21                                       MlflowLogger  
22                                 20ng_optimized_run  
23                                               c56a  
2025-10-31 09:59:13,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:13,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:13,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:13,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 09:59:13,439:INFO:Logging experiment in loggers
2025-10-31 10:00:59,289:INFO:PyCaret ClassificationExperiment
2025-10-31 10:00:59,290:INFO:Logging name: clf-default-name
2025-10-31 10:00:59,290:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 10:00:59,290:INFO:version 3.3.2
2025-10-31 10:00:59,290:INFO:Initializing setup()
2025-10-31 10:00:59,290:INFO:self.USI: 6f47
2025-10-31 10:00:59,290:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'memory', 'USI', 'fix_imbalance', 'logging_param', 'X', 'X_train', 'y', 'data', 'gpu_n_jobs_param', 'idx', 'is_multiclass', 'html_param', 'y_test', '_available_plots', 'exp_id', 'target_param', 'y_train', 'fold_generator', 'fold_groups_param', 'X_test', 'exp_name_log', 'gpu_param', 'log_plots_param', 'seed', '_ml_usecase'}
2025-10-31 10:00:59,290:INFO:Checking environment
2025-10-31 10:00:59,290:INFO:python_version: 3.10.15
2025-10-31 10:00:59,290:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 10:00:59,290:INFO:machine: arm64
2025-10-31 10:00:59,290:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 10:00:59,290:INFO:Memory: svmem(total=17179869184, available=5497618432, percent=68.0, used=7129169920, free=121913344, active=5396971520, inactive=5365235712, wired=1732198400)
2025-10-31 10:00:59,290:INFO:Physical Core: 10
2025-10-31 10:00:59,290:INFO:Logical Core: 10
2025-10-31 10:00:59,290:INFO:Checking libraries
2025-10-31 10:00:59,290:INFO:System:
2025-10-31 10:00:59,290:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 10:00:59,290:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 10:00:59,290:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 10:00:59,290:INFO:PyCaret required dependencies:
2025-10-31 10:00:59,290:INFO:                 pip: 25.2
2025-10-31 10:00:59,290:INFO:          setuptools: 80.9.0
2025-10-31 10:00:59,290:INFO:             pycaret: 3.3.2
2025-10-31 10:00:59,290:INFO:             IPython: 8.37.0
2025-10-31 10:00:59,290:INFO:          ipywidgets: 8.1.7
2025-10-31 10:00:59,290:INFO:                tqdm: 4.67.1
2025-10-31 10:00:59,291:INFO:               numpy: 1.26.4
2025-10-31 10:00:59,291:INFO:              pandas: 2.1.4
2025-10-31 10:00:59,291:INFO:              jinja2: 3.1.6
2025-10-31 10:00:59,291:INFO:               scipy: 1.11.4
2025-10-31 10:00:59,291:INFO:              joblib: 1.3.2
2025-10-31 10:00:59,291:INFO:             sklearn: 1.4.2
2025-10-31 10:00:59,291:INFO:                pyod: 2.0.5
2025-10-31 10:00:59,291:INFO:            imblearn: 0.14.0
2025-10-31 10:00:59,291:INFO:   category_encoders: 2.7.0
2025-10-31 10:00:59,291:INFO:            lightgbm: 4.6.0
2025-10-31 10:00:59,291:INFO:               numba: 0.62.1
2025-10-31 10:00:59,291:INFO:            requests: 2.32.5
2025-10-31 10:00:59,291:INFO:          matplotlib: 3.10.7
2025-10-31 10:00:59,291:INFO:          scikitplot: 0.3.7
2025-10-31 10:00:59,291:INFO:         yellowbrick: 1.5
2025-10-31 10:00:59,291:INFO:              plotly: 6.3.1
2025-10-31 10:00:59,291:INFO:    plotly-resampler: Not installed
2025-10-31 10:00:59,291:INFO:             kaleido: 0.2.1
2025-10-31 10:00:59,291:INFO:           schemdraw: 0.15
2025-10-31 10:00:59,291:INFO:         statsmodels: 0.14.5
2025-10-31 10:00:59,291:INFO:              sktime: 0.26.0
2025-10-31 10:00:59,291:INFO:               tbats: 1.1.3
2025-10-31 10:00:59,291:INFO:            pmdarima: 2.0.4
2025-10-31 10:00:59,291:INFO:              psutil: 7.1.2
2025-10-31 10:00:59,292:INFO:          markupsafe: 3.0.3
2025-10-31 10:00:59,292:INFO:             pickle5: Not installed
2025-10-31 10:00:59,292:INFO:         cloudpickle: 3.1.1
2025-10-31 10:00:59,292:INFO:         deprecation: 2.1.0
2025-10-31 10:00:59,292:INFO:              xxhash: 3.6.0
2025-10-31 10:00:59,292:INFO:           wurlitzer: 3.1.1
2025-10-31 10:00:59,292:INFO:PyCaret optional dependencies:
2025-10-31 10:00:59,292:INFO:                shap: Not installed
2025-10-31 10:00:59,292:INFO:           interpret: Not installed
2025-10-31 10:00:59,292:INFO:                umap: 0.5.9.post2
2025-10-31 10:00:59,292:INFO:     ydata_profiling: Not installed
2025-10-31 10:00:59,292:INFO:  explainerdashboard: Not installed
2025-10-31 10:00:59,292:INFO:             autoviz: Not installed
2025-10-31 10:00:59,292:INFO:           fairlearn: Not installed
2025-10-31 10:00:59,292:INFO:          deepchecks: Not installed
2025-10-31 10:00:59,292:INFO:             xgboost: Not installed
2025-10-31 10:00:59,292:INFO:            catboost: Not installed
2025-10-31 10:00:59,292:INFO:              kmodes: Not installed
2025-10-31 10:00:59,292:INFO:             mlxtend: Not installed
2025-10-31 10:00:59,292:INFO:       statsforecast: Not installed
2025-10-31 10:00:59,292:INFO:        tune_sklearn: Not installed
2025-10-31 10:00:59,292:INFO:                 ray: Not installed
2025-10-31 10:00:59,292:INFO:            hyperopt: Not installed
2025-10-31 10:00:59,292:INFO:              optuna: Not installed
2025-10-31 10:00:59,292:INFO:               skopt: Not installed
2025-10-31 10:00:59,292:INFO:              mlflow: 3.5.1
2025-10-31 10:00:59,292:INFO:              gradio: Not installed
2025-10-31 10:00:59,292:INFO:             fastapi: 0.120.2
2025-10-31 10:00:59,292:INFO:             uvicorn: 0.38.0
2025-10-31 10:00:59,292:INFO:              m2cgen: Not installed
2025-10-31 10:00:59,292:INFO:           evidently: Not installed
2025-10-31 10:00:59,292:INFO:               fugue: Not installed
2025-10-31 10:00:59,292:INFO:           streamlit: Not installed
2025-10-31 10:00:59,292:INFO:             prophet: Not installed
2025-10-31 10:00:59,292:INFO:None
2025-10-31 10:00:59,292:INFO:Set up data.
2025-10-31 10:00:59,665:INFO:Set up folding strategy.
2025-10-31 10:00:59,665:INFO:Set up train/test split.
2025-10-31 10:00:59,899:INFO:Set up index.
2025-10-31 10:00:59,905:INFO:Assigning column types.
2025-10-31 10:01:00,259:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 10:01:00,272:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 10:01:00,272:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:01:00,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,294:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 10:01:00,294:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:01:00,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,304:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 10:01:00,317:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:01:00,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,337:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:01:00,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,345:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 10:01:00,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:00,387:INFO:Preparing preprocessing pipeline...
2025-10-31 10:01:00,422:INFO:Set up label encoding.
2025-10-31 10:01:00,422:INFO:Set up simple imputation.
2025-10-31 10:01:00,422:INFO:Set up feature normalization.
2025-10-31 10:01:01,132:INFO:Finished creating preprocessing pipeline.
2025-10-31 10:01:01,137:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfid...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-10-31 10:01:01,137:INFO:Creating final display dataframe.
2025-10-31 10:01:02,588:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8               Ignore features   
9              Numeric features   
10     Rows with missing values   
11                   Preprocess   
12              Imputation type   
13           Numeric imputation   
14       Categorical imputation   
15                    Normalize   
16             Normalize method   
17               Fold Generator   
18                  Fold Number   
19                     CPU Jobs   
20                      Use GPU   
21               Log Experiment   
22              Experiment Name   
23                          USI   

                                                Value  
0                                                 123  
1                                         target_name  
2                                          Multiclass  
3   alt.atheism: 0, comp.graphics: 1, comp.os.ms-w...  
4                                       (15076, 2003)  
5                                       (15076, 2001)  
6                                       (10553, 2001)  
7                                        (4523, 2001)  
8                                                   2  
9                                                2000  
10                                               2.0%  
11                                               True  
12                                             simple  
13                                               mean  
14                                               mode  
15                                               True  
16                                             zscore  
17                                    StratifiedKFold  
18                                                 10  
19                                                 -1  
20                                              False  
21                                              False  
22                                   clf-default-name  
23                                               6f47  
2025-10-31 10:01:02,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:02,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:02,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:02,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:01:02,632:INFO:setup() successfully completed in 3.34s...............
2025-10-31 10:07:51,725:INFO:Initializing compare_models()
2025-10-31 10:07:51,726:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, include=None, fold=3, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, 'include': None, 'exclude': ['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'], 'fold': 3, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=['knn', 'mlp', 'dt', 'dummy', 'qda', 'ada'])
2025-10-31 10:07:51,727:INFO:Checking exceptions
2025-10-31 10:07:51,933:INFO:Preparing display monitor
2025-10-31 10:07:51,943:INFO:Initializing Logistic Regression
2025-10-31 10:07:51,943:INFO:Total runtime is 1.7325083414713542e-06 minutes
2025-10-31 10:07:51,944:INFO:SubProcess create_model() called ==================================
2025-10-31 10:07:51,944:INFO:Initializing create_model()
2025-10-31 10:07:51,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=lr, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:07:51,945:INFO:Checking exceptions
2025-10-31 10:07:51,945:INFO:Importing libraries
2025-10-31 10:07:51,945:INFO:Copying training dataset
2025-10-31 10:07:52,394:INFO:Defining folds
2025-10-31 10:07:52,394:INFO:Declaring metric variables
2025-10-31 10:07:52,396:INFO:Importing untrained model
2025-10-31 10:07:52,397:INFO:Logistic Regression Imported successfully
2025-10-31 10:07:52,399:INFO:Starting cross validation
2025-10-31 10:07:52,403:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:07:57,516:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:07:57,522:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:57,533:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:57,543:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:58,122:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:07:58,127:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:58,137:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:58,146:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:58,283:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:07:58,287:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:58,296:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:58,305:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:07:58,330:INFO:Calculating mean and std
2025-10-31 10:07:58,331:INFO:Creating metrics dataframe
2025-10-31 10:07:58,333:INFO:Uploading results into container
2025-10-31 10:07:58,333:INFO:Uploading model into container now
2025-10-31 10:07:58,333:INFO:_master_model_container: 1
2025-10-31 10:07:58,333:INFO:_display_container: 2
2025-10-31 10:07:58,334:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 10:07:58,334:INFO:create_model() successfully completed......................................
2025-10-31 10:07:58,449:INFO:SubProcess create_model() end ==================================
2025-10-31 10:07:58,450:INFO:Creating metrics dataframe
2025-10-31 10:07:58,452:INFO:Initializing Naive Bayes
2025-10-31 10:07:58,452:INFO:Total runtime is 0.10848332246144612 minutes
2025-10-31 10:07:58,453:INFO:SubProcess create_model() called ==================================
2025-10-31 10:07:58,453:INFO:Initializing create_model()
2025-10-31 10:07:58,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=nb, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:07:58,454:INFO:Checking exceptions
2025-10-31 10:07:58,454:INFO:Importing libraries
2025-10-31 10:07:58,454:INFO:Copying training dataset
2025-10-31 10:07:58,848:INFO:Defining folds
2025-10-31 10:07:58,848:INFO:Declaring metric variables
2025-10-31 10:07:58,856:INFO:Importing untrained model
2025-10-31 10:07:58,861:INFO:Naive Bayes Imported successfully
2025-10-31 10:07:58,871:INFO:Starting cross validation
2025-10-31 10:07:58,881:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:08:02,164:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,175:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,186:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,258:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,267:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,276:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,407:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,416:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,425:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:02,453:INFO:Calculating mean and std
2025-10-31 10:08:02,454:INFO:Creating metrics dataframe
2025-10-31 10:08:02,457:INFO:Uploading results into container
2025-10-31 10:08:02,458:INFO:Uploading model into container now
2025-10-31 10:08:02,458:INFO:_master_model_container: 2
2025-10-31 10:08:02,458:INFO:_display_container: 2
2025-10-31 10:08:02,459:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-10-31 10:08:02,459:INFO:create_model() successfully completed......................................
2025-10-31 10:08:02,607:INFO:SubProcess create_model() end ==================================
2025-10-31 10:08:02,607:INFO:Creating metrics dataframe
2025-10-31 10:08:02,610:INFO:Initializing SVM - Linear Kernel
2025-10-31 10:08:02,610:INFO:Total runtime is 0.17778551975886026 minutes
2025-10-31 10:08:02,611:INFO:SubProcess create_model() called ==================================
2025-10-31 10:08:02,611:INFO:Initializing create_model()
2025-10-31 10:08:02,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=svm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:08:02,612:INFO:Checking exceptions
2025-10-31 10:08:02,612:INFO:Importing libraries
2025-10-31 10:08:02,612:INFO:Copying training dataset
2025-10-31 10:08:03,005:INFO:Defining folds
2025-10-31 10:08:03,006:INFO:Declaring metric variables
2025-10-31 10:08:03,007:INFO:Importing untrained model
2025-10-31 10:08:03,009:INFO:SVM - Linear Kernel Imported successfully
2025-10-31 10:08:03,011:INFO:Starting cross validation
2025-10-31 10:08:03,015:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:08:17,134:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:08:17,139:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:17,152:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:17,168:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:17,373:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:08:17,377:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:17,387:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:17,397:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:18,225:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:08:18,230:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:18,240:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:18,249:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:18,272:INFO:Calculating mean and std
2025-10-31 10:08:18,272:INFO:Creating metrics dataframe
2025-10-31 10:08:18,273:INFO:Uploading results into container
2025-10-31 10:08:18,274:INFO:Uploading model into container now
2025-10-31 10:08:18,274:INFO:_master_model_container: 3
2025-10-31 10:08:18,274:INFO:_display_container: 2
2025-10-31 10:08:18,274:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-10-31 10:08:18,275:INFO:create_model() successfully completed......................................
2025-10-31 10:08:18,379:INFO:SubProcess create_model() end ==================================
2025-10-31 10:08:18,379:INFO:Creating metrics dataframe
2025-10-31 10:08:18,381:INFO:Initializing Ridge Classifier
2025-10-31 10:08:18,381:INFO:Total runtime is 0.4406391024589538 minutes
2025-10-31 10:08:18,383:INFO:SubProcess create_model() called ==================================
2025-10-31 10:08:18,383:INFO:Initializing create_model()
2025-10-31 10:08:18,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=ridge, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:08:18,383:INFO:Checking exceptions
2025-10-31 10:08:18,383:INFO:Importing libraries
2025-10-31 10:08:18,383:INFO:Copying training dataset
2025-10-31 10:08:18,751:INFO:Defining folds
2025-10-31 10:08:18,751:INFO:Declaring metric variables
2025-10-31 10:08:18,753:INFO:Importing untrained model
2025-10-31 10:08:18,756:INFO:Ridge Classifier Imported successfully
2025-10-31 10:08:18,765:INFO:Starting cross validation
2025-10-31 10:08:18,774:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:08:20,009:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:08:20,013:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:20,024:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:20,034:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:21,227:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:08:21,232:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:21,241:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:08:21,242:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:21,245:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:21,252:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:21,255:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:21,264:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:21,293:INFO:Calculating mean and std
2025-10-31 10:08:21,295:INFO:Creating metrics dataframe
2025-10-31 10:08:21,298:INFO:Uploading results into container
2025-10-31 10:08:21,298:INFO:Uploading model into container now
2025-10-31 10:08:21,299:INFO:_master_model_container: 4
2025-10-31 10:08:21,299:INFO:_display_container: 2
2025-10-31 10:08:21,300:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-10-31 10:08:21,300:INFO:create_model() successfully completed......................................
2025-10-31 10:08:21,472:INFO:SubProcess create_model() end ==================================
2025-10-31 10:08:21,472:INFO:Creating metrics dataframe
2025-10-31 10:08:21,475:INFO:Initializing Random Forest Classifier
2025-10-31 10:08:21,475:INFO:Total runtime is 0.4922029534975687 minutes
2025-10-31 10:08:21,477:INFO:SubProcess create_model() called ==================================
2025-10-31 10:08:21,477:INFO:Initializing create_model()
2025-10-31 10:08:21,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=rf, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:08:21,477:INFO:Checking exceptions
2025-10-31 10:08:21,477:INFO:Importing libraries
2025-10-31 10:08:21,477:INFO:Copying training dataset
2025-10-31 10:08:21,862:INFO:Defining folds
2025-10-31 10:08:21,863:INFO:Declaring metric variables
2025-10-31 10:08:21,864:INFO:Importing untrained model
2025-10-31 10:08:21,866:INFO:Random Forest Classifier Imported successfully
2025-10-31 10:08:21,868:INFO:Starting cross validation
2025-10-31 10:08:21,872:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:08:25,695:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:25,706:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:25,727:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:25,950:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:25,960:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:25,970:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:26,062:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:26,072:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:26,081:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:08:26,109:INFO:Calculating mean and std
2025-10-31 10:08:26,110:INFO:Creating metrics dataframe
2025-10-31 10:08:26,111:INFO:Uploading results into container
2025-10-31 10:08:26,111:INFO:Uploading model into container now
2025-10-31 10:08:26,111:INFO:_master_model_container: 5
2025-10-31 10:08:26,111:INFO:_display_container: 2
2025-10-31 10:08:26,112:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-10-31 10:08:26,112:INFO:create_model() successfully completed......................................
2025-10-31 10:08:26,214:INFO:SubProcess create_model() end ==================================
2025-10-31 10:08:26,214:INFO:Creating metrics dataframe
2025-10-31 10:08:26,217:INFO:Initializing Gradient Boosting Classifier
2025-10-31 10:08:26,217:INFO:Total runtime is 0.5712274869283039 minutes
2025-10-31 10:08:26,218:INFO:SubProcess create_model() called ==================================
2025-10-31 10:08:26,218:INFO:Initializing create_model()
2025-10-31 10:08:26,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=gbc, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:08:26,218:INFO:Checking exceptions
2025-10-31 10:08:26,218:INFO:Importing libraries
2025-10-31 10:08:26,218:INFO:Copying training dataset
2025-10-31 10:08:26,569:INFO:Defining folds
2025-10-31 10:08:26,569:INFO:Declaring metric variables
2025-10-31 10:08:26,570:INFO:Importing untrained model
2025-10-31 10:08:26,572:INFO:Gradient Boosting Classifier Imported successfully
2025-10-31 10:08:26,574:INFO:Starting cross validation
2025-10-31 10:08:26,578:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:11:27,888:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:11:27,892:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:27,902:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:27,912:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:29,513:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:11:29,518:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:29,528:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:29,538:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:30,537:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:11:30,541:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:30,550:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:30,560:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:30,583:INFO:Calculating mean and std
2025-10-31 10:11:30,584:INFO:Creating metrics dataframe
2025-10-31 10:11:30,585:INFO:Uploading results into container
2025-10-31 10:11:30,586:INFO:Uploading model into container now
2025-10-31 10:11:30,586:INFO:_master_model_container: 6
2025-10-31 10:11:30,586:INFO:_display_container: 2
2025-10-31 10:11:30,586:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-10-31 10:11:30,586:INFO:create_model() successfully completed......................................
2025-10-31 10:11:30,703:INFO:SubProcess create_model() end ==================================
2025-10-31 10:11:30,703:INFO:Creating metrics dataframe
2025-10-31 10:11:30,707:INFO:Initializing Linear Discriminant Analysis
2025-10-31 10:11:30,707:INFO:Total runtime is 3.646065600713094 minutes
2025-10-31 10:11:30,708:INFO:SubProcess create_model() called ==================================
2025-10-31 10:11:30,709:INFO:Initializing create_model()
2025-10-31 10:11:30,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=lda, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:11:30,709:INFO:Checking exceptions
2025-10-31 10:11:30,709:INFO:Importing libraries
2025-10-31 10:11:30,709:INFO:Copying training dataset
2025-10-31 10:11:31,058:INFO:Defining folds
2025-10-31 10:11:31,059:INFO:Declaring metric variables
2025-10-31 10:11:31,060:INFO:Importing untrained model
2025-10-31 10:11:31,062:INFO:Linear Discriminant Analysis Imported successfully
2025-10-31 10:11:31,064:INFO:Starting cross validation
2025-10-31 10:11:31,067:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:11:35,214:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:11:35,219:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:35,229:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:35,239:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:35,542:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:11:35,546:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:35,556:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:35,566:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:36,809:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:11:36,814:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:36,824:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:36,833:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:36,861:INFO:Calculating mean and std
2025-10-31 10:11:36,862:INFO:Creating metrics dataframe
2025-10-31 10:11:36,863:INFO:Uploading results into container
2025-10-31 10:11:36,863:INFO:Uploading model into container now
2025-10-31 10:11:36,864:INFO:_master_model_container: 7
2025-10-31 10:11:36,864:INFO:_display_container: 2
2025-10-31 10:11:36,864:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-10-31 10:11:36,864:INFO:create_model() successfully completed......................................
2025-10-31 10:11:36,970:INFO:SubProcess create_model() end ==================================
2025-10-31 10:11:36,971:INFO:Creating metrics dataframe
2025-10-31 10:11:36,974:INFO:Initializing Extra Trees Classifier
2025-10-31 10:11:36,974:INFO:Total runtime is 3.7505115191141765 minutes
2025-10-31 10:11:36,975:INFO:SubProcess create_model() called ==================================
2025-10-31 10:11:36,975:INFO:Initializing create_model()
2025-10-31 10:11:36,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=et, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:11:36,975:INFO:Checking exceptions
2025-10-31 10:11:36,975:INFO:Importing libraries
2025-10-31 10:11:36,976:INFO:Copying training dataset
2025-10-31 10:11:37,354:INFO:Defining folds
2025-10-31 10:11:37,354:INFO:Declaring metric variables
2025-10-31 10:11:37,355:INFO:Importing untrained model
2025-10-31 10:11:37,357:INFO:Extra Trees Classifier Imported successfully
2025-10-31 10:11:37,359:INFO:Starting cross validation
2025-10-31 10:11:37,363:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:11:42,277:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,289:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,306:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,347:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,358:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,373:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,710:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,719:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,729:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:11:42,758:INFO:Calculating mean and std
2025-10-31 10:11:42,760:INFO:Creating metrics dataframe
2025-10-31 10:11:42,763:INFO:Uploading results into container
2025-10-31 10:11:42,764:INFO:Uploading model into container now
2025-10-31 10:11:42,764:INFO:_master_model_container: 8
2025-10-31 10:11:42,764:INFO:_display_container: 2
2025-10-31 10:11:42,766:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 10:11:42,766:INFO:create_model() successfully completed......................................
2025-10-31 10:11:42,939:INFO:SubProcess create_model() end ==================================
2025-10-31 10:11:42,939:INFO:Creating metrics dataframe
2025-10-31 10:11:42,943:INFO:Initializing Light Gradient Boosting Machine
2025-10-31 10:11:42,943:INFO:Total runtime is 3.849994651476542 minutes
2025-10-31 10:11:42,944:INFO:SubProcess create_model() called ==================================
2025-10-31 10:11:42,944:INFO:Initializing create_model()
2025-10-31 10:11:42,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=lightgbm, fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x304ce93c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:11:42,944:INFO:Checking exceptions
2025-10-31 10:11:42,944:INFO:Importing libraries
2025-10-31 10:11:42,944:INFO:Copying training dataset
2025-10-31 10:11:43,338:INFO:Defining folds
2025-10-31 10:11:43,338:INFO:Declaring metric variables
2025-10-31 10:11:43,340:INFO:Importing untrained model
2025-10-31 10:11:43,342:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-31 10:11:43,344:INFO:Starting cross validation
2025-10-31 10:11:43,348:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:12:16,841:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:16,852:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:16,862:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:17,561:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:17,594:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:17,625:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:17,790:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:17,800:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:17,810:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:17,831:INFO:Calculating mean and std
2025-10-31 10:12:17,833:INFO:Creating metrics dataframe
2025-10-31 10:12:17,835:INFO:Uploading results into container
2025-10-31 10:12:17,835:INFO:Uploading model into container now
2025-10-31 10:12:17,836:INFO:_master_model_container: 9
2025-10-31 10:12:17,836:INFO:_display_container: 2
2025-10-31 10:12:17,836:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-10-31 10:12:17,836:INFO:create_model() successfully completed......................................
2025-10-31 10:12:17,946:INFO:SubProcess create_model() end ==================================
2025-10-31 10:12:17,946:INFO:Creating metrics dataframe
2025-10-31 10:12:17,953:INFO:Initializing create_model()
2025-10-31 10:12:17,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:12:17,953:INFO:Checking exceptions
2025-10-31 10:12:17,954:INFO:Importing libraries
2025-10-31 10:12:17,954:INFO:Copying training dataset
2025-10-31 10:12:18,362:INFO:Defining folds
2025-10-31 10:12:18,363:INFO:Declaring metric variables
2025-10-31 10:12:18,363:INFO:Importing untrained model
2025-10-31 10:12:18,363:INFO:Declaring custom model
2025-10-31 10:12:18,363:INFO:Extra Trees Classifier Imported successfully
2025-10-31 10:12:18,366:INFO:Cross validation set to False
2025-10-31 10:12:18,366:INFO:Fitting Model
2025-10-31 10:12:21,071:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 10:12:21,071:INFO:create_model() successfully completed......................................
2025-10-31 10:12:21,178:INFO:_master_model_container: 9
2025-10-31 10:12:21,178:INFO:_display_container: 2
2025-10-31 10:12:21,179:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 10:12:21,179:INFO:compare_models() successfully completed......................................
2025-10-31 10:12:40,692:INFO:Initializing tune_model()
2025-10-31 10:12:40,693:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=3, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>)
2025-10-31 10:12:40,693:INFO:Checking exceptions
2025-10-31 10:12:40,854:INFO:Copying training dataset
2025-10-31 10:12:41,082:INFO:Checking base model
2025-10-31 10:12:41,082:INFO:Base model : Extra Trees Classifier
2025-10-31 10:12:41,084:INFO:Declaring metric variables
2025-10-31 10:12:41,085:INFO:Defining Hyperparameters
2025-10-31 10:12:41,199:INFO:Tuning with n_jobs=-1
2025-10-31 10:12:41,199:INFO:Initializing RandomizedSearchCV
2025-10-31 10:12:42,322:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:42,562:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:42,795:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:42,971:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:43,266:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:43,450:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:43,791:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:44,044:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:44,333:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:44,818:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:45,213:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:45,340:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:45,585:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:45,917:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:46,199:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:46,563:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:46,911:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:47,086:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:47,316:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:47,553:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:48,005:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:51,354:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:51,491:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:12:52,326:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:03,582:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:03,693:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:04,006:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:04,036:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:04,067:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:04,209:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:04,235:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2025-10-31 10:13:04,237:INFO:Hyperparameter search completed
2025-10-31 10:13:04,238:INFO:SubProcess create_model() called ==================================
2025-10-31 10:13:04,239:INFO:Initializing create_model()
2025-10-31 10:13:04,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107cdada0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2025-10-31 10:13:04,240:INFO:Checking exceptions
2025-10-31 10:13:04,240:INFO:Importing libraries
2025-10-31 10:13:04,240:INFO:Copying training dataset
2025-10-31 10:13:04,667:INFO:Defining folds
2025-10-31 10:13:04,667:INFO:Declaring metric variables
2025-10-31 10:13:04,670:INFO:Importing untrained model
2025-10-31 10:13:04,670:INFO:Declaring custom model
2025-10-31 10:13:04,672:INFO:Extra Trees Classifier Imported successfully
2025-10-31 10:13:04,675:INFO:Starting cross validation
2025-10-31 10:13:04,680:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:13:05,773:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:05,784:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:05,794:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:05,877:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:05,887:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:05,897:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:05,987:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:05,996:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:06,006:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:06,034:INFO:Calculating mean and std
2025-10-31 10:13:06,035:INFO:Creating metrics dataframe
2025-10-31 10:13:06,037:INFO:Finalizing model
2025-10-31 10:13:06,579:INFO:Uploading results into container
2025-10-31 10:13:06,580:INFO:Uploading model into container now
2025-10-31 10:13:06,580:INFO:_master_model_container: 10
2025-10-31 10:13:06,580:INFO:_display_container: 3
2025-10-31 10:13:06,581:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2025-10-31 10:13:06,581:INFO:create_model() successfully completed......................................
2025-10-31 10:13:06,727:INFO:SubProcess create_model() end ==================================
2025-10-31 10:13:06,728:INFO:choose_better activated
2025-10-31 10:13:06,729:INFO:SubProcess create_model() called ==================================
2025-10-31 10:13:06,729:INFO:Initializing create_model()
2025-10-31 10:13:06,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=3, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:13:06,729:INFO:Checking exceptions
2025-10-31 10:13:06,730:INFO:Importing libraries
2025-10-31 10:13:06,731:INFO:Copying training dataset
2025-10-31 10:13:07,079:INFO:Defining folds
2025-10-31 10:13:07,079:INFO:Declaring metric variables
2025-10-31 10:13:07,079:INFO:Importing untrained model
2025-10-31 10:13:07,079:INFO:Declaring custom model
2025-10-31 10:13:07,079:INFO:Extra Trees Classifier Imported successfully
2025-10-31 10:13:07,079:INFO:Starting cross validation
2025-10-31 10:13:07,082:INFO:Cross validating with StratifiedKFold(n_splits=3, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:13:12,028:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,040:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,061:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,356:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,368:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,379:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,427:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,437:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,447:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'talk.religion.misc') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-10-31 10:13:12,475:INFO:Calculating mean and std
2025-10-31 10:13:12,475:INFO:Creating metrics dataframe
2025-10-31 10:13:12,478:INFO:Finalizing model
2025-10-31 10:13:15,169:INFO:Uploading results into container
2025-10-31 10:13:15,169:INFO:Uploading model into container now
2025-10-31 10:13:15,170:INFO:_master_model_container: 11
2025-10-31 10:13:15,170:INFO:_display_container: 4
2025-10-31 10:13:15,170:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 10:13:15,170:INFO:create_model() successfully completed......................................
2025-10-31 10:13:15,277:INFO:SubProcess create_model() end ==================================
2025-10-31 10:13:15,277:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for F1 is 0.5808
2025-10-31 10:13:15,278:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.0005,
                     min_samples_leaf=3, min_samples_split=5,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=260, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for F1 is 0.5247
2025-10-31 10:13:15,278:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2025-10-31 10:13:15,278:INFO:choose_better completed
2025-10-31 10:13:15,278:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-10-31 10:13:15,282:INFO:_master_model_container: 11
2025-10-31 10:13:15,282:INFO:_display_container: 3
2025-10-31 10:13:15,282:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 10:13:15,282:INFO:tune_model() successfully completed......................................
2025-10-31 10:13:28,255:INFO:Initializing finalize_model()
2025-10-31 10:13:28,256:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-10-31 10:13:28,256:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-10-31 10:13:28,568:INFO:Initializing create_model()
2025-10-31 10:13:28,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:13:28,568:INFO:Checking exceptions
2025-10-31 10:13:28,570:INFO:Importing libraries
2025-10-31 10:13:28,570:INFO:Copying training dataset
2025-10-31 10:13:28,629:INFO:Defining folds
2025-10-31 10:13:28,629:INFO:Declaring metric variables
2025-10-31 10:13:28,630:INFO:Importing untrained model
2025-10-31 10:13:28,630:INFO:Declaring custom model
2025-10-31 10:13:28,630:INFO:Extra Trees Classifier Imported successfully
2025-10-31 10:13:28,633:INFO:Cross validation set to False
2025-10-31 10:13:28,634:INFO:Fitting Model
2025-10-31 10:13:33,270:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 10:13:33,270:INFO:create_model() successfully completed......................................
2025-10-31 10:13:33,424:INFO:_master_model_container: 11
2025-10-31 10:13:33,424:INFO:_display_container: 3
2025-10-31 10:13:33,430:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-10-31 10:13:33,430:INFO:finalize_model() successfully completed......................................
2025-10-31 10:14:09,822:INFO:Initializing predict_model()
2025-10-31 10:14:09,823:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x305079120>)
2025-10-31 10:14:09,823:INFO:Checking exceptions
2025-10-31 10:14:09,823:INFO:Preloading libraries
2025-10-31 10:14:09,824:INFO:Set up data.
2025-10-31 10:14:09,976:INFO:Set up index.
2025-10-31 10:14:42,708:INFO:Initializing plot_model()
2025-10-31 10:14:42,709:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, system=True)
2025-10-31 10:14:42,709:INFO:Checking exceptions
2025-10-31 10:14:42,865:INFO:Preloading libraries
2025-10-31 10:14:42,972:INFO:Copying training dataset
2025-10-31 10:14:42,973:INFO:Plot type: confusion_matrix
2025-10-31 10:14:44,390:INFO:Fitting Model
2025-10-31 10:14:44,390:INFO:Scoring test/hold-out set
2025-10-31 10:14:44,673:INFO:Saving 'Confusion Matrix.png'
2025-10-31 10:14:45,172:INFO:Visual Rendered Successfully
2025-10-31 10:14:45,267:INFO:plot_model() successfully completed......................................
2025-10-31 10:14:45,282:INFO:Initializing plot_model()
2025-10-31 10:14:45,282:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, system=True)
2025-10-31 10:14:45,282:INFO:Checking exceptions
2025-10-31 10:14:45,422:INFO:Preloading libraries
2025-10-31 10:14:45,508:INFO:Copying training dataset
2025-10-31 10:14:45,508:INFO:Plot type: feature
2025-10-31 10:14:45,508:WARNING:No coef_ found. Trying feature_importances_
2025-10-31 10:14:45,898:INFO:Saving 'Feature Importance.png'
2025-10-31 10:14:45,943:INFO:Visual Rendered Successfully
2025-10-31 10:14:46,037:INFO:plot_model() successfully completed......................................
2025-10-31 10:15:54,406:INFO:Initializing predict_model()
2025-10-31 10:15:54,407:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x304d0a320>)
2025-10-31 10:15:54,407:INFO:Checking exceptions
2025-10-31 10:15:54,407:INFO:Preloading libraries
2025-10-31 10:15:54,408:INFO:Set up data.
2025-10-31 10:15:54,550:INFO:Set up index.
2025-10-31 10:18:05,691:INFO:Initializing predict_model()
2025-10-31 10:18:05,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307285690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tfidf_0', 'tfidf_1', 'tfidf_2',
                                             'tfidf_3', 'tfidf_4', 'tfidf_5',
                                             'tfidf_6', 'tfidf_7', 'tfidf_8',
                                             'tfidf_9', 'tfidf_10', 'tfidf_11',
                                             'tfidf_12', 'tfidf_...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfa4e50>)
2025-10-31 10:18:05,691:INFO:Checking exceptions
2025-10-31 10:18:05,691:INFO:Preloading libraries
2025-10-31 10:18:05,693:INFO:Set up data.
2025-10-31 10:18:05,817:INFO:Set up index.
2025-10-31 10:29:48,855:INFO:PyCaret ClassificationExperiment
2025-10-31 10:29:48,856:INFO:Logging name: text_classification
2025-10-31 10:29:48,856:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 10:29:48,856:INFO:version 3.3.2
2025-10-31 10:29:48,856:INFO:Initializing setup()
2025-10-31 10:29:48,857:INFO:self.USI: b199
2025-10-31 10:29:48,857:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'memory', 'USI', 'fix_imbalance', 'logging_param', 'X', 'X_train', 'y', 'data', 'gpu_n_jobs_param', 'idx', 'is_multiclass', 'html_param', 'y_test', '_available_plots', 'exp_id', 'target_param', 'y_train', 'fold_generator', 'fold_groups_param', 'X_test', 'exp_name_log', 'gpu_param', 'log_plots_param', 'seed', '_ml_usecase'}
2025-10-31 10:29:48,857:INFO:Checking environment
2025-10-31 10:29:48,857:INFO:python_version: 3.10.15
2025-10-31 10:29:48,857:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 10:29:48,857:INFO:machine: arm64
2025-10-31 10:29:48,857:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 10:29:48,857:INFO:Memory: svmem(total=17179869184, available=5748686848, percent=66.5, used=7348273152, free=141836288, active=5629804544, inactive=5597151232, wired=1718468608)
2025-10-31 10:29:48,857:INFO:Physical Core: 10
2025-10-31 10:29:48,857:INFO:Logical Core: 10
2025-10-31 10:29:48,857:INFO:Checking libraries
2025-10-31 10:29:48,857:INFO:System:
2025-10-31 10:29:48,857:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 10:29:48,857:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 10:29:48,857:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 10:29:48,857:INFO:PyCaret required dependencies:
2025-10-31 10:29:48,857:INFO:                 pip: 25.2
2025-10-31 10:29:48,857:INFO:          setuptools: 80.9.0
2025-10-31 10:29:48,857:INFO:             pycaret: 3.3.2
2025-10-31 10:29:48,857:INFO:             IPython: 8.37.0
2025-10-31 10:29:48,857:INFO:          ipywidgets: 8.1.7
2025-10-31 10:29:48,857:INFO:                tqdm: 4.67.1
2025-10-31 10:29:48,857:INFO:               numpy: 1.26.4
2025-10-31 10:29:48,858:INFO:              pandas: 2.1.4
2025-10-31 10:29:48,858:INFO:              jinja2: 3.1.6
2025-10-31 10:29:48,858:INFO:               scipy: 1.11.4
2025-10-31 10:29:48,858:INFO:              joblib: 1.3.2
2025-10-31 10:29:48,858:INFO:             sklearn: 1.4.2
2025-10-31 10:29:48,858:INFO:                pyod: 2.0.5
2025-10-31 10:29:48,858:INFO:            imblearn: 0.14.0
2025-10-31 10:29:48,858:INFO:   category_encoders: 2.7.0
2025-10-31 10:29:48,858:INFO:            lightgbm: 4.6.0
2025-10-31 10:29:48,858:INFO:               numba: 0.62.1
2025-10-31 10:29:48,858:INFO:            requests: 2.32.5
2025-10-31 10:29:48,858:INFO:          matplotlib: 3.10.7
2025-10-31 10:29:48,858:INFO:          scikitplot: 0.3.7
2025-10-31 10:29:48,858:INFO:         yellowbrick: 1.5
2025-10-31 10:29:48,858:INFO:              plotly: 6.3.1
2025-10-31 10:29:48,858:INFO:    plotly-resampler: Not installed
2025-10-31 10:29:48,858:INFO:             kaleido: 0.2.1
2025-10-31 10:29:48,858:INFO:           schemdraw: 0.15
2025-10-31 10:29:48,858:INFO:         statsmodels: 0.14.5
2025-10-31 10:29:48,858:INFO:              sktime: 0.26.0
2025-10-31 10:29:48,858:INFO:               tbats: 1.1.3
2025-10-31 10:29:48,858:INFO:            pmdarima: 2.0.4
2025-10-31 10:29:48,858:INFO:              psutil: 7.1.2
2025-10-31 10:29:48,858:INFO:          markupsafe: 3.0.3
2025-10-31 10:29:48,858:INFO:             pickle5: Not installed
2025-10-31 10:29:48,858:INFO:         cloudpickle: 3.1.1
2025-10-31 10:29:48,858:INFO:         deprecation: 2.1.0
2025-10-31 10:29:48,858:INFO:              xxhash: 3.6.0
2025-10-31 10:29:48,858:INFO:           wurlitzer: 3.1.1
2025-10-31 10:29:48,858:INFO:PyCaret optional dependencies:
2025-10-31 10:29:48,858:INFO:                shap: Not installed
2025-10-31 10:29:48,858:INFO:           interpret: Not installed
2025-10-31 10:29:48,858:INFO:                umap: 0.5.9.post2
2025-10-31 10:29:48,858:INFO:     ydata_profiling: Not installed
2025-10-31 10:29:48,858:INFO:  explainerdashboard: Not installed
2025-10-31 10:29:48,858:INFO:             autoviz: Not installed
2025-10-31 10:29:48,858:INFO:           fairlearn: Not installed
2025-10-31 10:29:48,858:INFO:          deepchecks: Not installed
2025-10-31 10:29:48,858:INFO:             xgboost: Not installed
2025-10-31 10:29:48,858:INFO:            catboost: Not installed
2025-10-31 10:29:48,858:INFO:              kmodes: Not installed
2025-10-31 10:29:48,858:INFO:             mlxtend: Not installed
2025-10-31 10:29:48,858:INFO:       statsforecast: Not installed
2025-10-31 10:29:48,858:INFO:        tune_sklearn: Not installed
2025-10-31 10:29:48,858:INFO:                 ray: Not installed
2025-10-31 10:29:48,858:INFO:            hyperopt: Not installed
2025-10-31 10:29:48,858:INFO:              optuna: Not installed
2025-10-31 10:29:48,858:INFO:               skopt: Not installed
2025-10-31 10:29:48,858:INFO:              mlflow: 3.5.1
2025-10-31 10:29:48,858:INFO:              gradio: Not installed
2025-10-31 10:29:48,858:INFO:             fastapi: 0.120.2
2025-10-31 10:29:48,858:INFO:             uvicorn: 0.38.0
2025-10-31 10:29:48,858:INFO:              m2cgen: Not installed
2025-10-31 10:29:48,858:INFO:           evidently: Not installed
2025-10-31 10:29:48,858:INFO:               fugue: Not installed
2025-10-31 10:29:48,858:INFO:           streamlit: Not installed
2025-10-31 10:29:48,858:INFO:             prophet: Not installed
2025-10-31 10:29:48,858:INFO:None
2025-10-31 10:29:48,858:INFO:Set up data.
2025-10-31 10:29:49,699:INFO:Set up folding strategy.
2025-10-31 10:29:49,699:INFO:Set up train/test split.
2025-10-31 10:29:50,496:INFO:Set up index.
2025-10-31 10:29:50,508:INFO:Assigning column types.
2025-10-31 10:29:51,270:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 10:29:51,283:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 10:29:51,283:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:29:51,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,304:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 10:29:51,305:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:29:51,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,313:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 10:29:51,327:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:29:51,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,349:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:29:51,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,357:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 10:29:51,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:51,403:INFO:Preparing preprocessing pipeline...
2025-10-31 10:29:51,489:INFO:Set up simple imputation.
2025-10-31 10:29:54,023:INFO:Finished creating preprocessing pipeline.
2025-10-31 10:29:54,032:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-10-31 10:29:54,032:INFO:Creating final display dataframe.
2025-10-31 10:29:59,387:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target               target
2                   Target type           Multiclass
3           Original data shape        (15076, 5001)
4        Transformed data shape        (15076, 5001)
5   Transformed train set shape        (10553, 5001)
6    Transformed test set shape         (4523, 5001)
7              Numeric features                 5000
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12               Fold Generator      StratifiedKFold
13                  Fold Number                   10
14                     CPU Jobs                   -1
15                      Use GPU                False
16               Log Experiment         MlflowLogger
17              Experiment Name  text_classification
18                          USI                 b199
2025-10-31 10:29:59,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:59,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:59,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:59,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:29:59,433:INFO:Logging experiment in loggers
2025-10-31 10:30:52,638:INFO:PyCaret ClassificationExperiment
2025-10-31 10:30:52,639:INFO:Logging name: text_classification
2025-10-31 10:30:52,639:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 10:30:52,639:INFO:version 3.3.2
2025-10-31 10:30:52,639:INFO:Initializing setup()
2025-10-31 10:30:52,639:INFO:self.USI: c0a9
2025-10-31 10:30:52,639:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'memory', 'USI', 'fix_imbalance', 'logging_param', 'X', 'X_train', 'y', 'data', 'gpu_n_jobs_param', 'idx', 'is_multiclass', 'html_param', 'y_test', '_available_plots', 'exp_id', 'target_param', 'y_train', 'fold_generator', 'fold_groups_param', 'X_test', 'exp_name_log', 'gpu_param', 'log_plots_param', 'seed', '_ml_usecase'}
2025-10-31 10:30:52,639:INFO:Checking environment
2025-10-31 10:30:52,639:INFO:python_version: 3.10.15
2025-10-31 10:30:52,639:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 10:30:52,639:INFO:machine: arm64
2025-10-31 10:30:52,639:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 10:30:52,639:INFO:Memory: svmem(total=17179869184, available=5523406848, percent=67.8, used=7062749184, free=98435072, active=5355995136, inactive=5420974080, wired=1706754048)
2025-10-31 10:30:52,639:INFO:Physical Core: 10
2025-10-31 10:30:52,639:INFO:Logical Core: 10
2025-10-31 10:30:52,639:INFO:Checking libraries
2025-10-31 10:30:52,639:INFO:System:
2025-10-31 10:30:52,639:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 10:30:52,639:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 10:30:52,639:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 10:30:52,639:INFO:PyCaret required dependencies:
2025-10-31 10:30:52,639:INFO:                 pip: 25.2
2025-10-31 10:30:52,639:INFO:          setuptools: 80.9.0
2025-10-31 10:30:52,639:INFO:             pycaret: 3.3.2
2025-10-31 10:30:52,639:INFO:             IPython: 8.37.0
2025-10-31 10:30:52,639:INFO:          ipywidgets: 8.1.7
2025-10-31 10:30:52,639:INFO:                tqdm: 4.67.1
2025-10-31 10:30:52,639:INFO:               numpy: 1.26.4
2025-10-31 10:30:52,639:INFO:              pandas: 2.1.4
2025-10-31 10:30:52,639:INFO:              jinja2: 3.1.6
2025-10-31 10:30:52,639:INFO:               scipy: 1.11.4
2025-10-31 10:30:52,639:INFO:              joblib: 1.3.2
2025-10-31 10:30:52,639:INFO:             sklearn: 1.4.2
2025-10-31 10:30:52,639:INFO:                pyod: 2.0.5
2025-10-31 10:30:52,639:INFO:            imblearn: 0.14.0
2025-10-31 10:30:52,640:INFO:   category_encoders: 2.7.0
2025-10-31 10:30:52,640:INFO:            lightgbm: 4.6.0
2025-10-31 10:30:52,640:INFO:               numba: 0.62.1
2025-10-31 10:30:52,640:INFO:            requests: 2.32.5
2025-10-31 10:30:52,640:INFO:          matplotlib: 3.10.7
2025-10-31 10:30:52,640:INFO:          scikitplot: 0.3.7
2025-10-31 10:30:52,640:INFO:         yellowbrick: 1.5
2025-10-31 10:30:52,640:INFO:              plotly: 6.3.1
2025-10-31 10:30:52,640:INFO:    plotly-resampler: Not installed
2025-10-31 10:30:52,640:INFO:             kaleido: 0.2.1
2025-10-31 10:30:52,640:INFO:           schemdraw: 0.15
2025-10-31 10:30:52,640:INFO:         statsmodels: 0.14.5
2025-10-31 10:30:52,640:INFO:              sktime: 0.26.0
2025-10-31 10:30:52,640:INFO:               tbats: 1.1.3
2025-10-31 10:30:52,640:INFO:            pmdarima: 2.0.4
2025-10-31 10:30:52,640:INFO:              psutil: 7.1.2
2025-10-31 10:30:52,640:INFO:          markupsafe: 3.0.3
2025-10-31 10:30:52,640:INFO:             pickle5: Not installed
2025-10-31 10:30:52,640:INFO:         cloudpickle: 3.1.1
2025-10-31 10:30:52,640:INFO:         deprecation: 2.1.0
2025-10-31 10:30:52,640:INFO:              xxhash: 3.6.0
2025-10-31 10:30:52,640:INFO:           wurlitzer: 3.1.1
2025-10-31 10:30:52,640:INFO:PyCaret optional dependencies:
2025-10-31 10:30:52,640:INFO:                shap: Not installed
2025-10-31 10:30:52,640:INFO:           interpret: Not installed
2025-10-31 10:30:52,640:INFO:                umap: 0.5.9.post2
2025-10-31 10:30:52,640:INFO:     ydata_profiling: Not installed
2025-10-31 10:30:52,640:INFO:  explainerdashboard: Not installed
2025-10-31 10:30:52,640:INFO:             autoviz: Not installed
2025-10-31 10:30:52,640:INFO:           fairlearn: Not installed
2025-10-31 10:30:52,640:INFO:          deepchecks: Not installed
2025-10-31 10:30:52,640:INFO:             xgboost: Not installed
2025-10-31 10:30:52,640:INFO:            catboost: Not installed
2025-10-31 10:30:52,640:INFO:              kmodes: Not installed
2025-10-31 10:30:52,640:INFO:             mlxtend: Not installed
2025-10-31 10:30:52,640:INFO:       statsforecast: Not installed
2025-10-31 10:30:52,640:INFO:        tune_sklearn: Not installed
2025-10-31 10:30:52,640:INFO:                 ray: Not installed
2025-10-31 10:30:52,640:INFO:            hyperopt: Not installed
2025-10-31 10:30:52,640:INFO:              optuna: Not installed
2025-10-31 10:30:52,640:INFO:               skopt: Not installed
2025-10-31 10:30:52,640:INFO:              mlflow: 3.5.1
2025-10-31 10:30:52,640:INFO:              gradio: Not installed
2025-10-31 10:30:52,640:INFO:             fastapi: 0.120.2
2025-10-31 10:30:52,640:INFO:             uvicorn: 0.38.0
2025-10-31 10:30:52,640:INFO:              m2cgen: Not installed
2025-10-31 10:30:52,640:INFO:           evidently: Not installed
2025-10-31 10:30:52,640:INFO:               fugue: Not installed
2025-10-31 10:30:52,640:INFO:           streamlit: Not installed
2025-10-31 10:30:52,640:INFO:             prophet: Not installed
2025-10-31 10:30:52,640:INFO:None
2025-10-31 10:30:52,640:INFO:Set up data.
2025-10-31 10:30:53,631:INFO:Set up folding strategy.
2025-10-31 10:30:53,631:INFO:Set up train/test split.
2025-10-31 10:30:54,303:INFO:Set up index.
2025-10-31 10:30:54,318:INFO:Assigning column types.
2025-10-31 10:30:55,136:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 10:30:55,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 10:30:55,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:30:55,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,172:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 10:30:55,172:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:30:55,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,181:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 10:30:55,195:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:30:55,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,217:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:30:55,226:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,226:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 10:30:55,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:30:55,271:INFO:Preparing preprocessing pipeline...
2025-10-31 10:30:55,360:INFO:Set up simple imputation.
2025-10-31 10:30:56,650:INFO:Finished creating preprocessing pipeline.
2025-10-31 10:30:56,659:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-10-31 10:30:56,659:INFO:Creating final display dataframe.
2025-10-31 10:31:00,388:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target               target
2                   Target type           Multiclass
3           Original data shape        (15076, 5001)
4        Transformed data shape        (15076, 5001)
5   Transformed train set shape        (10553, 5001)
6    Transformed test set shape         (4523, 5001)
7              Numeric features                 5000
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12               Fold Generator      StratifiedKFold
13                  Fold Number                   10
14                     CPU Jobs                   -1
15                      Use GPU                False
16               Log Experiment         MlflowLogger
17              Experiment Name  text_classification
18                          USI                 c0a9
2025-10-31 10:31:00,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:00,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:00,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:00,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:00,433:INFO:Logging experiment in loggers
2025-10-31 10:31:45,038:INFO:PyCaret ClassificationExperiment
2025-10-31 10:31:45,038:INFO:Logging name: clf-default-name
2025-10-31 10:31:45,038:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-31 10:31:45,039:INFO:version 3.3.2
2025-10-31 10:31:45,039:INFO:Initializing setup()
2025-10-31 10:31:45,039:INFO:self.USI: 855d
2025-10-31 10:31:45,039:INFO:self._variable_keys: {'n_jobs_param', 'pipeline', 'fold_shuffle_param', 'memory', 'USI', 'fix_imbalance', 'logging_param', 'X', 'X_train', 'y', 'data', 'gpu_n_jobs_param', 'idx', 'is_multiclass', 'html_param', 'y_test', '_available_plots', 'exp_id', 'target_param', 'y_train', 'fold_generator', 'fold_groups_param', 'X_test', 'exp_name_log', 'gpu_param', 'log_plots_param', 'seed', '_ml_usecase'}
2025-10-31 10:31:45,039:INFO:Checking environment
2025-10-31 10:31:45,039:INFO:python_version: 3.10.15
2025-10-31 10:31:45,039:INFO:python_build: ('main', 'Oct 16 2024 01:24:20')
2025-10-31 10:31:45,039:INFO:machine: arm64
2025-10-31 10:31:45,039:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-10-31 10:31:45,039:INFO:Memory: svmem(total=17179869184, available=5261623296, percent=69.4, used=6952763392, free=69992448, active=5210603520, inactive=5188681728, wired=1742159872)
2025-10-31 10:31:45,039:INFO:Physical Core: 10
2025-10-31 10:31:45,039:INFO:Logical Core: 10
2025-10-31 10:31:45,039:INFO:Checking libraries
2025-10-31 10:31:45,039:INFO:System:
2025-10-31 10:31:45,039:INFO:    python: 3.10.15 | packaged by conda-forge | (main, Oct 16 2024, 01:24:20) [Clang 17.0.6 ]
2025-10-31 10:31:45,039:INFO:executable: /opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/bin/python
2025-10-31 10:31:45,039:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-10-31 10:31:45,039:INFO:PyCaret required dependencies:
2025-10-31 10:31:45,039:INFO:                 pip: 25.2
2025-10-31 10:31:45,039:INFO:          setuptools: 80.9.0
2025-10-31 10:31:45,039:INFO:             pycaret: 3.3.2
2025-10-31 10:31:45,039:INFO:             IPython: 8.37.0
2025-10-31 10:31:45,039:INFO:          ipywidgets: 8.1.7
2025-10-31 10:31:45,039:INFO:                tqdm: 4.67.1
2025-10-31 10:31:45,039:INFO:               numpy: 1.26.4
2025-10-31 10:31:45,039:INFO:              pandas: 2.1.4
2025-10-31 10:31:45,039:INFO:              jinja2: 3.1.6
2025-10-31 10:31:45,039:INFO:               scipy: 1.11.4
2025-10-31 10:31:45,039:INFO:              joblib: 1.3.2
2025-10-31 10:31:45,039:INFO:             sklearn: 1.4.2
2025-10-31 10:31:45,039:INFO:                pyod: 2.0.5
2025-10-31 10:31:45,039:INFO:            imblearn: 0.14.0
2025-10-31 10:31:45,039:INFO:   category_encoders: 2.7.0
2025-10-31 10:31:45,039:INFO:            lightgbm: 4.6.0
2025-10-31 10:31:45,039:INFO:               numba: 0.62.1
2025-10-31 10:31:45,039:INFO:            requests: 2.32.5
2025-10-31 10:31:45,039:INFO:          matplotlib: 3.10.7
2025-10-31 10:31:45,039:INFO:          scikitplot: 0.3.7
2025-10-31 10:31:45,039:INFO:         yellowbrick: 1.5
2025-10-31 10:31:45,039:INFO:              plotly: 6.3.1
2025-10-31 10:31:45,039:INFO:    plotly-resampler: Not installed
2025-10-31 10:31:45,039:INFO:             kaleido: 0.2.1
2025-10-31 10:31:45,039:INFO:           schemdraw: 0.15
2025-10-31 10:31:45,039:INFO:         statsmodels: 0.14.5
2025-10-31 10:31:45,039:INFO:              sktime: 0.26.0
2025-10-31 10:31:45,039:INFO:               tbats: 1.1.3
2025-10-31 10:31:45,039:INFO:            pmdarima: 2.0.4
2025-10-31 10:31:45,039:INFO:              psutil: 7.1.2
2025-10-31 10:31:45,039:INFO:          markupsafe: 3.0.3
2025-10-31 10:31:45,039:INFO:             pickle5: Not installed
2025-10-31 10:31:45,039:INFO:         cloudpickle: 3.1.1
2025-10-31 10:31:45,039:INFO:         deprecation: 2.1.0
2025-10-31 10:31:45,039:INFO:              xxhash: 3.6.0
2025-10-31 10:31:45,039:INFO:           wurlitzer: 3.1.1
2025-10-31 10:31:45,039:INFO:PyCaret optional dependencies:
2025-10-31 10:31:45,039:INFO:                shap: Not installed
2025-10-31 10:31:45,039:INFO:           interpret: Not installed
2025-10-31 10:31:45,039:INFO:                umap: 0.5.9.post2
2025-10-31 10:31:45,040:INFO:     ydata_profiling: Not installed
2025-10-31 10:31:45,040:INFO:  explainerdashboard: Not installed
2025-10-31 10:31:45,040:INFO:             autoviz: Not installed
2025-10-31 10:31:45,040:INFO:           fairlearn: Not installed
2025-10-31 10:31:45,040:INFO:          deepchecks: Not installed
2025-10-31 10:31:45,040:INFO:             xgboost: Not installed
2025-10-31 10:31:45,040:INFO:            catboost: Not installed
2025-10-31 10:31:45,040:INFO:              kmodes: Not installed
2025-10-31 10:31:45,040:INFO:             mlxtend: Not installed
2025-10-31 10:31:45,040:INFO:       statsforecast: Not installed
2025-10-31 10:31:45,040:INFO:        tune_sklearn: Not installed
2025-10-31 10:31:45,040:INFO:                 ray: Not installed
2025-10-31 10:31:45,040:INFO:            hyperopt: Not installed
2025-10-31 10:31:45,040:INFO:              optuna: Not installed
2025-10-31 10:31:45,040:INFO:               skopt: Not installed
2025-10-31 10:31:45,040:INFO:              mlflow: 3.5.1
2025-10-31 10:31:45,040:INFO:              gradio: Not installed
2025-10-31 10:31:45,040:INFO:             fastapi: 0.120.2
2025-10-31 10:31:45,040:INFO:             uvicorn: 0.38.0
2025-10-31 10:31:45,040:INFO:              m2cgen: Not installed
2025-10-31 10:31:45,040:INFO:           evidently: Not installed
2025-10-31 10:31:45,040:INFO:               fugue: Not installed
2025-10-31 10:31:45,040:INFO:           streamlit: Not installed
2025-10-31 10:31:45,040:INFO:             prophet: Not installed
2025-10-31 10:31:45,040:INFO:None
2025-10-31 10:31:45,040:INFO:Set up data.
2025-10-31 10:31:45,941:INFO:Set up folding strategy.
2025-10-31 10:31:45,941:INFO:Set up train/test split.
2025-10-31 10:31:46,615:INFO:Set up index.
2025-10-31 10:31:46,627:INFO:Assigning column types.
2025-10-31 10:31:47,493:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-31 10:31:47,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 10:31:47,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:31:47,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,528:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-31 10:31:47,528:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:31:47,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,537:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-31 10:31:47,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:31:47,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,571:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-31 10:31:47,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,579:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-31 10:31:47,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:47,624:INFO:Preparing preprocessing pipeline...
2025-10-31 10:31:47,713:INFO:Set up simple imputation.
2025-10-31 10:31:49,021:INFO:Finished creating preprocessing pipeline.
2025-10-31 10:31:49,030:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-10-31 10:31:49,030:INFO:Creating final display dataframe.
2025-10-31 10:31:52,736:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target            target
2                   Target type        Multiclass
3           Original data shape     (15076, 5001)
4        Transformed data shape     (15076, 5001)
5   Transformed train set shape     (10553, 5001)
6    Transformed test set shape      (4523, 5001)
7              Numeric features              5000
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              855d
2025-10-31 10:31:52,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:52,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:52,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:52,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-31 10:31:52,781:INFO:setup() successfully completed in 7.75s...............
2025-10-31 10:32:17,214:INFO:Initializing compare_models()
2025-10-31 10:32:17,215:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-10-31 10:32:17,215:INFO:Checking exceptions
2025-10-31 10:32:17,803:INFO:Preparing display monitor
2025-10-31 10:32:17,811:INFO:Initializing Logistic Regression
2025-10-31 10:32:17,811:INFO:Total runtime is 1.8318494160970053e-06 minutes
2025-10-31 10:32:17,812:INFO:SubProcess create_model() called ==================================
2025-10-31 10:32:17,812:INFO:Initializing create_model()
2025-10-31 10:32:17,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:32:17,812:INFO:Checking exceptions
2025-10-31 10:32:17,812:INFO:Importing libraries
2025-10-31 10:32:17,813:INFO:Copying training dataset
2025-10-31 10:32:18,743:INFO:Defining folds
2025-10-31 10:32:18,743:INFO:Declaring metric variables
2025-10-31 10:32:18,745:INFO:Importing untrained model
2025-10-31 10:32:18,746:INFO:Logistic Regression Imported successfully
2025-10-31 10:32:18,749:INFO:Starting cross validation
2025-10-31 10:32:18,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:32:47,466:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:48,848:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:49,379:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:49,772:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:50,152:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:50,394:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:51,716:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:52,426:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:52,890:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:53,269:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:32:53,296:INFO:Calculating mean and std
2025-10-31 10:32:53,298:INFO:Creating metrics dataframe
2025-10-31 10:32:53,302:INFO:Uploading results into container
2025-10-31 10:32:53,302:INFO:Uploading model into container now
2025-10-31 10:32:53,303:INFO:_master_model_container: 1
2025-10-31 10:32:53,303:INFO:_display_container: 2
2025-10-31 10:32:53,304:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 10:32:53,304:INFO:create_model() successfully completed......................................
2025-10-31 10:32:53,479:INFO:SubProcess create_model() end ==================================
2025-10-31 10:32:53,480:INFO:Creating metrics dataframe
2025-10-31 10:32:53,482:INFO:Initializing K Neighbors Classifier
2025-10-31 10:32:53,482:INFO:Total runtime is 0.5945226351420084 minutes
2025-10-31 10:32:53,484:INFO:SubProcess create_model() called ==================================
2025-10-31 10:32:53,484:INFO:Initializing create_model()
2025-10-31 10:32:53,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:32:53,484:INFO:Checking exceptions
2025-10-31 10:32:53,484:INFO:Importing libraries
2025-10-31 10:32:53,484:INFO:Copying training dataset
2025-10-31 10:32:54,530:INFO:Defining folds
2025-10-31 10:32:54,531:INFO:Declaring metric variables
2025-10-31 10:32:54,533:INFO:Importing untrained model
2025-10-31 10:32:54,534:INFO:K Neighbors Classifier Imported successfully
2025-10-31 10:32:54,536:INFO:Starting cross validation
2025-10-31 10:32:54,541:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:33:04,034:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:33:04,799:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:33:05,558:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:33:06,736:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:33:07,208:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:33:07,683:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:33:08,476:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:33:09,000:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:33:09,018:INFO:Calculating mean and std
2025-10-31 10:33:09,020:INFO:Creating metrics dataframe
2025-10-31 10:33:09,023:INFO:Uploading results into container
2025-10-31 10:33:09,024:INFO:Uploading model into container now
2025-10-31 10:33:09,024:INFO:_master_model_container: 2
2025-10-31 10:33:09,024:INFO:_display_container: 2
2025-10-31 10:33:09,025:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-10-31 10:33:09,025:INFO:create_model() successfully completed......................................
2025-10-31 10:33:09,198:INFO:SubProcess create_model() end ==================================
2025-10-31 10:33:09,198:INFO:Creating metrics dataframe
2025-10-31 10:33:09,202:INFO:Initializing Naive Bayes
2025-10-31 10:33:09,202:INFO:Total runtime is 0.8565132339795429 minutes
2025-10-31 10:33:09,203:INFO:SubProcess create_model() called ==================================
2025-10-31 10:33:09,204:INFO:Initializing create_model()
2025-10-31 10:33:09,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:33:09,204:INFO:Checking exceptions
2025-10-31 10:33:09,204:INFO:Importing libraries
2025-10-31 10:33:09,204:INFO:Copying training dataset
2025-10-31 10:33:10,218:INFO:Defining folds
2025-10-31 10:33:10,218:INFO:Declaring metric variables
2025-10-31 10:33:10,220:INFO:Importing untrained model
2025-10-31 10:33:10,222:INFO:Naive Bayes Imported successfully
2025-10-31 10:33:10,225:INFO:Starting cross validation
2025-10-31 10:33:10,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:33:18,768:INFO:Calculating mean and std
2025-10-31 10:33:18,770:INFO:Creating metrics dataframe
2025-10-31 10:33:18,774:INFO:Uploading results into container
2025-10-31 10:33:18,774:INFO:Uploading model into container now
2025-10-31 10:33:18,775:INFO:_master_model_container: 3
2025-10-31 10:33:18,775:INFO:_display_container: 2
2025-10-31 10:33:18,775:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-10-31 10:33:18,776:INFO:create_model() successfully completed......................................
2025-10-31 10:33:18,945:INFO:SubProcess create_model() end ==================================
2025-10-31 10:33:18,945:INFO:Creating metrics dataframe
2025-10-31 10:33:18,948:INFO:Initializing Decision Tree Classifier
2025-10-31 10:33:18,948:INFO:Total runtime is 1.0189514319101969 minutes
2025-10-31 10:33:18,949:INFO:SubProcess create_model() called ==================================
2025-10-31 10:33:18,950:INFO:Initializing create_model()
2025-10-31 10:33:18,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:33:18,950:INFO:Checking exceptions
2025-10-31 10:33:18,950:INFO:Importing libraries
2025-10-31 10:33:18,950:INFO:Copying training dataset
2025-10-31 10:33:19,978:INFO:Defining folds
2025-10-31 10:33:19,978:INFO:Declaring metric variables
2025-10-31 10:33:19,980:INFO:Importing untrained model
2025-10-31 10:33:19,982:INFO:Decision Tree Classifier Imported successfully
2025-10-31 10:33:19,984:INFO:Starting cross validation
2025-10-31 10:33:19,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:33:44,140:INFO:Calculating mean and std
2025-10-31 10:33:44,143:INFO:Creating metrics dataframe
2025-10-31 10:33:44,147:INFO:Uploading results into container
2025-10-31 10:33:44,148:INFO:Uploading model into container now
2025-10-31 10:33:44,148:INFO:_master_model_container: 4
2025-10-31 10:33:44,148:INFO:_display_container: 2
2025-10-31 10:33:44,149:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-10-31 10:33:44,149:INFO:create_model() successfully completed......................................
2025-10-31 10:33:44,330:INFO:SubProcess create_model() end ==================================
2025-10-31 10:33:44,330:INFO:Creating metrics dataframe
2025-10-31 10:33:44,333:INFO:Initializing SVM - Linear Kernel
2025-10-31 10:33:44,333:INFO:Total runtime is 1.442039668560028 minutes
2025-10-31 10:33:44,335:INFO:SubProcess create_model() called ==================================
2025-10-31 10:33:44,335:INFO:Initializing create_model()
2025-10-31 10:33:44,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:33:44,335:INFO:Checking exceptions
2025-10-31 10:33:44,335:INFO:Importing libraries
2025-10-31 10:33:44,335:INFO:Copying training dataset
2025-10-31 10:33:45,489:INFO:Defining folds
2025-10-31 10:33:45,489:INFO:Declaring metric variables
2025-10-31 10:33:45,491:INFO:Importing untrained model
2025-10-31 10:33:45,493:INFO:SVM - Linear Kernel Imported successfully
2025-10-31 10:33:45,496:INFO:Starting cross validation
2025-10-31 10:33:45,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:33:50,934:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:33:53,906:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:33:55,545:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:33:57,987:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:33:59,066:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:00,042:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:00,697:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:01,648:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:01,756:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:02,219:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:02,239:INFO:Calculating mean and std
2025-10-31 10:34:02,241:INFO:Creating metrics dataframe
2025-10-31 10:34:02,245:INFO:Uploading results into container
2025-10-31 10:34:02,245:INFO:Uploading model into container now
2025-10-31 10:34:02,246:INFO:_master_model_container: 5
2025-10-31 10:34:02,246:INFO:_display_container: 2
2025-10-31 10:34:02,247:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-10-31 10:34:02,247:INFO:create_model() successfully completed......................................
2025-10-31 10:34:02,419:INFO:SubProcess create_model() end ==================================
2025-10-31 10:34:02,419:INFO:Creating metrics dataframe
2025-10-31 10:34:02,423:INFO:Initializing Ridge Classifier
2025-10-31 10:34:02,423:INFO:Total runtime is 1.743527881304423 minutes
2025-10-31 10:34:02,424:INFO:SubProcess create_model() called ==================================
2025-10-31 10:34:02,424:INFO:Initializing create_model()
2025-10-31 10:34:02,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:34:02,425:INFO:Checking exceptions
2025-10-31 10:34:02,425:INFO:Importing libraries
2025-10-31 10:34:02,425:INFO:Copying training dataset
2025-10-31 10:34:03,438:INFO:Defining folds
2025-10-31 10:34:03,439:INFO:Declaring metric variables
2025-10-31 10:34:03,441:INFO:Importing untrained model
2025-10-31 10:34:03,443:INFO:Ridge Classifier Imported successfully
2025-10-31 10:34:03,445:INFO:Starting cross validation
2025-10-31 10:34:03,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:34:10,736:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:11,703:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:12,993:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:14,586:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:15,464:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:15,595:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:16,191:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:16,224:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:16,618:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:17,072:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:34:17,089:INFO:Calculating mean and std
2025-10-31 10:34:17,091:INFO:Creating metrics dataframe
2025-10-31 10:34:17,095:INFO:Uploading results into container
2025-10-31 10:34:17,095:INFO:Uploading model into container now
2025-10-31 10:34:17,096:INFO:_master_model_container: 6
2025-10-31 10:34:17,096:INFO:_display_container: 2
2025-10-31 10:34:17,097:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-10-31 10:34:17,097:INFO:create_model() successfully completed......................................
2025-10-31 10:34:17,268:INFO:SubProcess create_model() end ==================================
2025-10-31 10:34:17,268:INFO:Creating metrics dataframe
2025-10-31 10:34:17,272:INFO:Initializing Random Forest Classifier
2025-10-31 10:34:17,272:INFO:Total runtime is 1.9910125851631164 minutes
2025-10-31 10:34:17,273:INFO:SubProcess create_model() called ==================================
2025-10-31 10:34:17,274:INFO:Initializing create_model()
2025-10-31 10:34:17,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:34:17,274:INFO:Checking exceptions
2025-10-31 10:34:17,274:INFO:Importing libraries
2025-10-31 10:34:17,274:INFO:Copying training dataset
2025-10-31 10:34:18,322:INFO:Defining folds
2025-10-31 10:34:18,322:INFO:Declaring metric variables
2025-10-31 10:34:18,324:INFO:Importing untrained model
2025-10-31 10:34:18,326:INFO:Random Forest Classifier Imported successfully
2025-10-31 10:34:18,328:INFO:Starting cross validation
2025-10-31 10:34:18,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:34:49,327:INFO:Calculating mean and std
2025-10-31 10:34:49,329:INFO:Creating metrics dataframe
2025-10-31 10:34:49,334:INFO:Uploading results into container
2025-10-31 10:34:49,335:INFO:Uploading model into container now
2025-10-31 10:34:49,336:INFO:_master_model_container: 7
2025-10-31 10:34:49,336:INFO:_display_container: 2
2025-10-31 10:34:49,337:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-10-31 10:34:49,337:INFO:create_model() successfully completed......................................
2025-10-31 10:34:49,515:INFO:SubProcess create_model() end ==================================
2025-10-31 10:34:49,515:INFO:Creating metrics dataframe
2025-10-31 10:34:49,519:INFO:Initializing Quadratic Discriminant Analysis
2025-10-31 10:34:49,519:INFO:Total runtime is 2.528466014067332 minutes
2025-10-31 10:34:49,521:INFO:SubProcess create_model() called ==================================
2025-10-31 10:34:49,521:INFO:Initializing create_model()
2025-10-31 10:34:49,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:34:49,521:INFO:Checking exceptions
2025-10-31 10:34:49,521:INFO:Importing libraries
2025-10-31 10:34:49,521:INFO:Copying training dataset
2025-10-31 10:34:50,691:INFO:Defining folds
2025-10-31 10:34:50,691:INFO:Declaring metric variables
2025-10-31 10:34:50,692:INFO:Importing untrained model
2025-10-31 10:34:50,695:INFO:Quadratic Discriminant Analysis Imported successfully
2025-10-31 10:34:50,697:INFO:Starting cross validation
2025-10-31 10:34:50,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:34:52,529:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:34:53,157:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:34:53,883:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:34:54,519:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:34:55,794:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:34:56,570:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:34:57,578:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:34:58,508:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:35:00,022:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:35:01,327:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-10-31 10:35:10,318:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:10,332:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:11,035:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:11,043:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:12,143:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:12,146:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:12,902:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:12,904:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:13,968:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:13,970:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:14,256:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:14,258:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:14,738:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:14,740:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:15,336:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:15,338:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:15,819:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:15,821:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:16,298:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:16,300:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:16,313:INFO:Calculating mean and std
2025-10-31 10:35:16,316:INFO:Creating metrics dataframe
2025-10-31 10:35:16,320:INFO:Uploading results into container
2025-10-31 10:35:16,320:INFO:Uploading model into container now
2025-10-31 10:35:16,321:INFO:_master_model_container: 8
2025-10-31 10:35:16,321:INFO:_display_container: 2
2025-10-31 10:35:16,322:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-10-31 10:35:16,322:INFO:create_model() successfully completed......................................
2025-10-31 10:35:16,505:INFO:SubProcess create_model() end ==================================
2025-10-31 10:35:16,505:INFO:Creating metrics dataframe
2025-10-31 10:35:16,510:INFO:Initializing Ada Boost Classifier
2025-10-31 10:35:16,510:INFO:Total runtime is 2.978320066134135 minutes
2025-10-31 10:35:16,512:INFO:SubProcess create_model() called ==================================
2025-10-31 10:35:16,512:INFO:Initializing create_model()
2025-10-31 10:35:16,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:35:16,512:INFO:Checking exceptions
2025-10-31 10:35:16,512:INFO:Importing libraries
2025-10-31 10:35:16,512:INFO:Copying training dataset
2025-10-31 10:35:17,583:INFO:Defining folds
2025-10-31 10:35:17,584:INFO:Declaring metric variables
2025-10-31 10:35:17,586:INFO:Importing untrained model
2025-10-31 10:35:17,587:INFO:Ada Boost Classifier Imported successfully
2025-10-31 10:35:17,589:INFO:Starting cross validation
2025-10-31 10:35:17,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:35:19,150:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:19,726:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:20,326:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:20,965:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:21,682:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:22,579:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:23,285:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:24,143:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:24,853:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:25,540:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-31 10:35:27,223:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:27,227:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:27,993:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:28,671:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:29,324:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:29,329:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:29,902:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:30,646:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:30,947:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:31,375:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:31,711:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:31,713:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:35:32,232:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:35:32,244:INFO:Calculating mean and std
2025-10-31 10:35:32,246:INFO:Creating metrics dataframe
2025-10-31 10:35:32,250:INFO:Uploading results into container
2025-10-31 10:35:32,250:INFO:Uploading model into container now
2025-10-31 10:35:32,251:INFO:_master_model_container: 9
2025-10-31 10:35:32,251:INFO:_display_container: 2
2025-10-31 10:35:32,252:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-10-31 10:35:32,252:INFO:create_model() successfully completed......................................
2025-10-31 10:35:32,422:INFO:SubProcess create_model() end ==================================
2025-10-31 10:35:32,422:INFO:Creating metrics dataframe
2025-10-31 10:35:32,426:INFO:Initializing Gradient Boosting Classifier
2025-10-31 10:35:32,426:INFO:Total runtime is 3.243579701582591 minutes
2025-10-31 10:35:32,427:INFO:SubProcess create_model() called ==================================
2025-10-31 10:35:32,427:INFO:Initializing create_model()
2025-10-31 10:35:32,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:35:32,427:INFO:Checking exceptions
2025-10-31 10:35:32,427:INFO:Importing libraries
2025-10-31 10:35:32,427:INFO:Copying training dataset
2025-10-31 10:35:33,559:INFO:Defining folds
2025-10-31 10:35:33,560:INFO:Declaring metric variables
2025-10-31 10:35:33,562:INFO:Importing untrained model
2025-10-31 10:35:33,563:INFO:Gradient Boosting Classifier Imported successfully
2025-10-31 10:35:33,565:INFO:Starting cross validation
2025-10-31 10:35:33,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:47:20,036:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:20,422:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:22,513:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:22,884:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:23,190:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:23,810:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:24,206:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:25,207:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:26,273:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:26,603:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:47:26,616:INFO:Calculating mean and std
2025-10-31 10:47:26,619:INFO:Creating metrics dataframe
2025-10-31 10:47:26,622:INFO:Uploading results into container
2025-10-31 10:47:26,623:INFO:Uploading model into container now
2025-10-31 10:47:26,623:INFO:_master_model_container: 10
2025-10-31 10:47:26,623:INFO:_display_container: 2
2025-10-31 10:47:26,624:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-10-31 10:47:26,624:INFO:create_model() successfully completed......................................
2025-10-31 10:47:26,793:INFO:SubProcess create_model() end ==================================
2025-10-31 10:47:26,793:INFO:Creating metrics dataframe
2025-10-31 10:47:26,797:INFO:Initializing Linear Discriminant Analysis
2025-10-31 10:47:26,797:INFO:Total runtime is 15.149767303466797 minutes
2025-10-31 10:47:26,798:INFO:SubProcess create_model() called ==================================
2025-10-31 10:47:26,799:INFO:Initializing create_model()
2025-10-31 10:47:26,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:47:26,799:INFO:Checking exceptions
2025-10-31 10:47:26,799:INFO:Importing libraries
2025-10-31 10:47:26,799:INFO:Copying training dataset
2025-10-31 10:47:27,944:INFO:Defining folds
2025-10-31 10:47:27,944:INFO:Declaring metric variables
2025-10-31 10:47:27,945:INFO:Importing untrained model
2025-10-31 10:47:27,946:INFO:Linear Discriminant Analysis Imported successfully
2025-10-31 10:47:27,948:INFO:Starting cross validation
2025-10-31 10:47:27,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:49:05,045:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:08,034:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:09,584:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:11,139:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:11,865:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:12,278:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:12,976:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:13,530:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:13,994:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:14,071:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-10-31 10:49:14,092:INFO:Calculating mean and std
2025-10-31 10:49:14,106:INFO:Creating metrics dataframe
2025-10-31 10:49:14,125:INFO:Uploading results into container
2025-10-31 10:49:14,126:INFO:Uploading model into container now
2025-10-31 10:49:14,127:INFO:_master_model_container: 11
2025-10-31 10:49:14,127:INFO:_display_container: 2
2025-10-31 10:49:14,131:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-10-31 10:49:14,131:INFO:create_model() successfully completed......................................
2025-10-31 10:49:14,758:INFO:SubProcess create_model() end ==================================
2025-10-31 10:49:14,758:INFO:Creating metrics dataframe
2025-10-31 10:49:14,764:INFO:Initializing Extra Trees Classifier
2025-10-31 10:49:14,765:INFO:Total runtime is 16.949224964777628 minutes
2025-10-31 10:49:14,767:INFO:SubProcess create_model() called ==================================
2025-10-31 10:49:14,767:INFO:Initializing create_model()
2025-10-31 10:49:14,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:49:14,767:INFO:Checking exceptions
2025-10-31 10:49:14,767:INFO:Importing libraries
2025-10-31 10:49:14,767:INFO:Copying training dataset
2025-10-31 10:49:15,834:INFO:Defining folds
2025-10-31 10:49:15,834:INFO:Declaring metric variables
2025-10-31 10:49:15,836:INFO:Importing untrained model
2025-10-31 10:49:15,837:INFO:Extra Trees Classifier Imported successfully
2025-10-31 10:49:15,840:INFO:Starting cross validation
2025-10-31 10:49:15,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:49:59,449:INFO:Calculating mean and std
2025-10-31 10:49:59,451:INFO:Creating metrics dataframe
2025-10-31 10:49:59,454:INFO:Uploading results into container
2025-10-31 10:49:59,454:INFO:Uploading model into container now
2025-10-31 10:49:59,455:INFO:_master_model_container: 12
2025-10-31 10:49:59,455:INFO:_display_container: 2
2025-10-31 10:49:59,456:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-10-31 10:49:59,456:INFO:create_model() successfully completed......................................
2025-10-31 10:49:59,618:INFO:SubProcess create_model() end ==================================
2025-10-31 10:49:59,618:INFO:Creating metrics dataframe
2025-10-31 10:49:59,623:INFO:Initializing Light Gradient Boosting Machine
2025-10-31 10:49:59,623:INFO:Total runtime is 17.696865864594777 minutes
2025-10-31 10:49:59,624:INFO:SubProcess create_model() called ==================================
2025-10-31 10:49:59,625:INFO:Initializing create_model()
2025-10-31 10:49:59,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:49:59,625:INFO:Checking exceptions
2025-10-31 10:49:59,625:INFO:Importing libraries
2025-10-31 10:49:59,625:INFO:Copying training dataset
2025-10-31 10:50:00,628:INFO:Defining folds
2025-10-31 10:50:00,628:INFO:Declaring metric variables
2025-10-31 10:50:00,630:INFO:Importing untrained model
2025-10-31 10:50:00,632:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-31 10:50:00,634:INFO:Starting cross validation
2025-10-31 10:50:00,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:50:08,548:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.646895 seconds.
2025-10-31 10:50:08,550:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-10-31 10:50:08,554:INFO:[LightGBM] [Info] Total Bins 138592
2025-10-31 10:50:08,557:INFO:[LightGBM] [Info] Number of data points in the train set: 9497, number of used features: 4389
2025-10-31 10:50:08,564:INFO:[LightGBM] [Info] Start training from score -3.162279
2025-10-31 10:50:08,565:INFO:[LightGBM] [Info] Start training from score -2.962287
2025-10-31 10:50:08,565:INFO:[LightGBM] [Info] Start training from score -2.952155
2025-10-31 10:50:08,565:INFO:[LightGBM] [Info] Start training from score -2.954173
2025-10-31 10:50:08,565:INFO:[LightGBM] [Info] Start training from score -2.974582
2025-10-31 10:50:08,566:INFO:[LightGBM] [Info] Start training from score -2.948131
2025-10-31 10:50:08,566:INFO:[LightGBM] [Info] Start training from score -2.960253
2025-10-31 10:50:08,566:INFO:[LightGBM] [Info] Start training from score -2.948131
2025-10-31 10:50:08,566:INFO:[LightGBM] [Info] Start training from score -2.940131
2025-10-31 10:50:08,566:INFO:[LightGBM] [Info] Start training from score -2.940131
2025-10-31 10:50:08,566:INFO:[LightGBM] [Info] Start training from score -2.938141
2025-10-31 10:50:08,567:INFO:[LightGBM] [Info] Start training from score -2.946125
2025-10-31 10:50:08,567:INFO:[LightGBM] [Info] Start training from score -2.952155
2025-10-31 10:50:08,567:INFO:[LightGBM] [Info] Start training from score -2.948131
2025-10-31 10:50:08,568:INFO:[LightGBM] [Info] Start training from score -2.948131
2025-10-31 10:50:08,568:INFO:[LightGBM] [Info] Start training from score -2.938141
2025-10-31 10:50:08,569:INFO:[LightGBM] [Info] Start training from score -3.029681
2025-10-31 10:50:08,569:INFO:[LightGBM] [Info] Start training from score -2.999636
2025-10-31 10:50:08,569:INFO:[LightGBM] [Info] Start training from score -3.190024
2025-10-31 10:50:08,570:INFO:[LightGBM] [Info] Start training from score -3.402989
2025-10-31 10:50:09,210:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.648392 seconds.
2025-10-31 10:50:09,210:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-10-31 10:50:09,210:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-10-31 10:50:09,216:INFO:[LightGBM] [Info] Total Bins 137164
2025-10-31 10:50:09,222:INFO:[LightGBM] [Info] Number of data points in the train set: 9498, number of used features: 4374
2025-10-31 10:50:09,226:INFO:[LightGBM] [Info] Start training from score -3.162384
2025-10-31 10:50:09,226:INFO:[LightGBM] [Info] Start training from score -2.962392
2025-10-31 10:50:09,227:INFO:[LightGBM] [Info] Start training from score -2.952261
2025-10-31 10:50:09,227:INFO:[LightGBM] [Info] Start training from score -2.954279
2025-10-31 10:50:09,228:INFO:[LightGBM] [Info] Start training from score -2.974688
2025-10-31 10:50:09,229:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:09,229:INFO:[LightGBM] [Info] Start training from score -2.960358
2025-10-31 10:50:09,229:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:09,230:INFO:[LightGBM] [Info] Start training from score -2.940236
2025-10-31 10:50:09,230:INFO:[LightGBM] [Info] Start training from score -2.940236
2025-10-31 10:50:09,231:INFO:[LightGBM] [Info] Start training from score -2.938246
2025-10-31 10:50:09,231:INFO:[LightGBM] [Info] Start training from score -2.944228
2025-10-31 10:50:09,232:INFO:[LightGBM] [Info] Start training from score -2.952261
2025-10-31 10:50:09,233:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:09,233:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:09,233:INFO:[LightGBM] [Info] Start training from score -2.938246
2025-10-31 10:50:09,234:INFO:[LightGBM] [Info] Start training from score -3.029786
2025-10-31 10:50:09,234:INFO:[LightGBM] [Info] Start training from score -2.999741
2025-10-31 10:50:09,235:INFO:[LightGBM] [Info] Start training from score -3.190129
2025-10-31 10:50:09,235:INFO:[LightGBM] [Info] Start training from score -3.403094
2025-10-31 10:50:11,442:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.851137 seconds.
2025-10-31 10:50:11,442:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-10-31 10:50:11,442:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-10-31 10:50:11,450:INFO:[LightGBM] [Info] Total Bins 138850
2025-10-31 10:50:11,455:INFO:[LightGBM] [Info] Number of data points in the train set: 9498, number of used features: 4407
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -3.162384
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.962392
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.950247
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.954279
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.974688
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.960358
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.946230
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.940236
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.942230
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.938246
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.944228
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.952261
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.938246
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -3.029786
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -2.999741
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -3.192690
2025-10-31 10:50:11,458:INFO:[LightGBM] [Info] Start training from score -3.403094
2025-10-31 10:50:13,181:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.807992 seconds.
2025-10-31 10:50:13,181:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-10-31 10:50:13,181:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-10-31 10:50:13,196:INFO:[LightGBM] [Info] Total Bins 138350
2025-10-31 10:50:13,201:INFO:[LightGBM] [Info] Number of data points in the train set: 9498, number of used features: 4400
2025-10-31 10:50:13,211:INFO:[LightGBM] [Info] Start training from score -3.162384
2025-10-31 10:50:13,211:INFO:[LightGBM] [Info] Start training from score -2.962392
2025-10-31 10:50:13,212:INFO:[LightGBM] [Info] Start training from score -2.950247
2025-10-31 10:50:13,213:INFO:[LightGBM] [Info] Start training from score -2.954279
2025-10-31 10:50:13,215:INFO:[LightGBM] [Info] Start training from score -2.974688
2025-10-31 10:50:13,216:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:13,217:INFO:[LightGBM] [Info] Start training from score -2.960358
2025-10-31 10:50:13,217:INFO:[LightGBM] [Info] Start training from score -2.946230
2025-10-31 10:50:13,217:INFO:[LightGBM] [Info] Start training from score -2.940236
2025-10-31 10:50:13,218:INFO:[LightGBM] [Info] Start training from score -2.942230
2025-10-31 10:50:13,219:INFO:[LightGBM] [Info] Start training from score -2.938246
2025-10-31 10:50:13,220:INFO:[LightGBM] [Info] Start training from score -2.944228
2025-10-31 10:50:13,220:INFO:[LightGBM] [Info] Start training from score -2.952261
2025-10-31 10:50:13,221:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:13,222:INFO:[LightGBM] [Info] Start training from score -2.948236
2025-10-31 10:50:13,223:INFO:[LightGBM] [Info] Start training from score -2.938246
2025-10-31 10:50:13,224:INFO:[LightGBM] [Info] Start training from score -3.029786
2025-10-31 10:50:13,224:INFO:[LightGBM] [Info] Start training from score -2.999741
2025-10-31 10:50:13,224:INFO:[LightGBM] [Info] Start training from score -3.192690
2025-10-31 10:50:13,225:INFO:[LightGBM] [Info] Start training from score -3.403094
2025-10-31 10:50:23,953:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.897428 seconds.
2025-10-31 10:50:23,954:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-10-31 10:50:23,960:INFO:[LightGBM] [Info] Total Bins 137986
2025-10-31 10:50:23,964:INFO:[LightGBM] [Info] Number of data points in the train set: 9498, number of used features: 4398
2025-10-31 10:50:23,971:INFO:[LightGBM] [Info] Start training from score -3.159900
2025-10-31 10:50:23,972:INFO:[LightGBM] [Info] Start training from score -2.964431
2025-10-31 10:50:23,974:INFO:[LightGBM] [Info] Start training from score -2.950247
2025-10-31 10:50:23,977:INFO:[LightGBM] [Info] Start training from score -2.954279
2025-10-31 10:50:23,978:INFO:[LightGBM] [Info] Start training from score -2.972628
2025-10-31 10:50:23,981:INFO:[LightGBM] [Info] Start training from score -2.950247
2025-10-31 10:50:23,982:INFO:[LightGBM] [Info] Start training from score -2.962392
2025-10-31 10:50:23,984:INFO:[LightGBM] [Info] Start training from score -2.946230
2025-10-31 10:50:23,985:INFO:[LightGBM] [Info] Start training from score -2.940236
2025-10-31 10:50:23,987:INFO:[LightGBM] [Info] Start training from score -2.942230
2025-10-31 10:50:23,989:INFO:[LightGBM] [Info] Start training from score -2.938246
2025-10-31 10:50:23,993:INFO:[LightGBM] [Info] Start training from score -2.946230
2025-10-31 10:50:23,994:INFO:[LightGBM] [Info] Start training from score -2.952261
2025-10-31 10:50:23,996:INFO:[LightGBM] [Info] Start training from score -2.946230
2025-10-31 10:50:23,998:INFO:[LightGBM] [Info] Start training from score -2.950247
2025-10-31 10:50:24,000:INFO:[LightGBM] [Info] Start training from score -2.938246
2025-10-31 10:50:24,002:INFO:[LightGBM] [Info] Start training from score -3.029786
2025-10-31 10:50:24,004:INFO:[LightGBM] [Info] Start training from score -2.997629
2025-10-31 10:50:24,006:INFO:[LightGBM] [Info] Start training from score -3.190129
2025-10-31 10:50:24,008:INFO:[LightGBM] [Info] Start training from score -3.403094
2025-10-31 10:52:11,444:INFO:Calculating mean and std
2025-10-31 10:52:11,446:INFO:Creating metrics dataframe
2025-10-31 10:52:11,452:INFO:Uploading results into container
2025-10-31 10:52:11,453:INFO:Uploading model into container now
2025-10-31 10:52:11,453:INFO:_master_model_container: 13
2025-10-31 10:52:11,453:INFO:_display_container: 2
2025-10-31 10:52:11,454:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-10-31 10:52:11,454:INFO:create_model() successfully completed......................................
2025-10-31 10:52:11,618:INFO:SubProcess create_model() end ==================================
2025-10-31 10:52:11,618:INFO:Creating metrics dataframe
2025-10-31 10:52:11,622:INFO:Initializing Dummy Classifier
2025-10-31 10:52:11,622:INFO:Total runtime is 19.896844549973807 minutes
2025-10-31 10:52:11,623:INFO:SubProcess create_model() called ==================================
2025-10-31 10:52:11,623:INFO:Initializing create_model()
2025-10-31 10:52:11,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30577bfa0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:52:11,623:INFO:Checking exceptions
2025-10-31 10:52:11,623:INFO:Importing libraries
2025-10-31 10:52:11,623:INFO:Copying training dataset
2025-10-31 10:52:12,825:INFO:Defining folds
2025-10-31 10:52:12,825:INFO:Declaring metric variables
2025-10-31 10:52:12,827:INFO:Importing untrained model
2025-10-31 10:52:12,828:INFO:Dummy Classifier Imported successfully
2025-10-31 10:52:12,830:INFO:Starting cross validation
2025-10-31 10:52:12,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-31 10:52:14,270:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:14,684:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:15,081:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:15,505:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:15,815:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:16,157:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:16,633:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:17,039:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:17,436:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:17,763:WARNING:/opt/homebrew/Caskroom/miniconda/base/envs/pycaret_conda_env/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-31 10:52:17,776:INFO:Calculating mean and std
2025-10-31 10:52:17,776:INFO:Creating metrics dataframe
2025-10-31 10:52:17,777:INFO:Uploading results into container
2025-10-31 10:52:17,777:INFO:Uploading model into container now
2025-10-31 10:52:17,778:INFO:_master_model_container: 14
2025-10-31 10:52:17,778:INFO:_display_container: 2
2025-10-31 10:52:17,778:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-10-31 10:52:17,778:INFO:create_model() successfully completed......................................
2025-10-31 10:52:17,892:INFO:SubProcess create_model() end ==================================
2025-10-31 10:52:17,892:INFO:Creating metrics dataframe
2025-10-31 10:52:17,899:INFO:Initializing create_model()
2025-10-31 10:52:17,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:52:17,899:INFO:Checking exceptions
2025-10-31 10:52:17,901:INFO:Importing libraries
2025-10-31 10:52:17,901:INFO:Copying training dataset
2025-10-31 10:52:18,851:INFO:Defining folds
2025-10-31 10:52:18,851:INFO:Declaring metric variables
2025-10-31 10:52:18,851:INFO:Importing untrained model
2025-10-31 10:52:18,851:INFO:Declaring custom model
2025-10-31 10:52:18,852:INFO:Logistic Regression Imported successfully
2025-10-31 10:52:18,856:INFO:Cross validation set to False
2025-10-31 10:52:18,856:INFO:Fitting Model
2025-10-31 10:52:26,094:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 10:52:26,095:INFO:create_model() successfully completed......................................
2025-10-31 10:52:26,221:INFO:_master_model_container: 14
2025-10-31 10:52:26,221:INFO:_display_container: 2
2025-10-31 10:52:26,221:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 10:52:26,221:INFO:compare_models() successfully completed......................................
2025-10-31 10:54:01,882:INFO:Initializing evaluate_model()
2025-10-31 10:54:01,882:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-10-31 10:54:02,270:INFO:Initializing plot_model()
2025-10-31 10:54:02,270:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, system=True)
2025-10-31 10:54:02,270:INFO:Checking exceptions
2025-10-31 10:54:02,705:INFO:Preloading libraries
2025-10-31 10:54:02,706:INFO:Copying training dataset
2025-10-31 10:54:02,706:INFO:Plot type: pipeline
2025-10-31 10:54:02,765:INFO:Visual Rendered Successfully
2025-10-31 10:54:02,871:INFO:plot_model() successfully completed......................................
2025-10-31 10:54:22,368:INFO:Initializing evaluate_model()
2025-10-31 10:54:22,369:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-10-31 10:54:22,687:INFO:Initializing plot_model()
2025-10-31 10:54:22,687:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, system=True)
2025-10-31 10:54:22,687:INFO:Checking exceptions
2025-10-31 10:54:23,095:INFO:Preloading libraries
2025-10-31 10:54:23,095:INFO:Copying training dataset
2025-10-31 10:54:23,095:INFO:Plot type: pipeline
2025-10-31 10:54:23,119:INFO:Visual Rendered Successfully
2025-10-31 10:54:23,221:INFO:plot_model() successfully completed......................................
2025-10-31 10:54:36,543:INFO:Initializing finalize_model()
2025-10-31 10:54:36,543:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-10-31 10:54:36,543:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-31 10:54:37,134:INFO:Initializing create_model()
2025-10-31 10:54:37,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-10-31 10:54:37,134:INFO:Checking exceptions
2025-10-31 10:54:37,135:INFO:Importing libraries
2025-10-31 10:54:37,135:INFO:Copying training dataset
2025-10-31 10:54:37,243:INFO:Defining folds
2025-10-31 10:54:37,243:INFO:Declaring metric variables
2025-10-31 10:54:37,243:INFO:Importing untrained model
2025-10-31 10:54:37,243:INFO:Declaring custom model
2025-10-31 10:54:37,243:INFO:Logistic Regression Imported successfully
2025-10-31 10:54:37,248:INFO:Cross validation set to False
2025-10-31 10:54:37,248:INFO:Fitting Model
2025-10-31 10:54:49,040:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-10-31 10:54:49,040:INFO:create_model() successfully completed......................................
2025-10-31 10:54:49,174:INFO:_master_model_container: 14
2025-10-31 10:54:49,175:INFO:_display_container: 2
2025-10-31 10:54:49,184:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-10-31 10:54:49,184:INFO:finalize_model() successfully completed......................................
2025-10-31 12:18:34,092:INFO:Initializing predict_model()
2025-10-31 12:18:34,092:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cb00a60>)
2025-10-31 12:18:34,092:INFO:Checking exceptions
2025-10-31 12:18:34,092:INFO:Preloading libraries
2025-10-31 12:18:34,096:INFO:Set up data.
2025-10-31 12:18:34,487:INFO:Set up index.
2025-10-31 12:18:51,056:INFO:Initializing plot_model()
2025-10-31 12:18:51,057:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x30a9e7e50>, system=True)
2025-10-31 12:18:51,057:INFO:Checking exceptions
2025-10-31 12:18:51,513:INFO:Preloading libraries
2025-10-31 12:18:51,513:INFO:Copying training dataset
2025-10-31 12:18:51,514:INFO:Plot type: feature
2025-10-31 12:18:54,498:INFO:Visual Rendered Successfully
2025-10-31 12:18:54,605:INFO:plot_model() successfully completed......................................
2025-10-31 12:19:03,527:INFO:Initializing save_model()
2025-10-31 12:19:03,527:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=best_pycaret_text_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/j_/hyl9rxs93cxb9zljfxg31g4m0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-10-31 12:19:03,527:INFO:Adding model into prep_pipe
2025-10-31 12:19:03,527:WARNING:Only Model saved as it was a pipeline.
2025-10-31 12:19:03,551:INFO:best_pycaret_text_model.pkl saved in current working directory
2025-10-31 12:19:03,561:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-10-31 12:19:03,561:INFO:save_model() successfully completed......................................
